{
    "resourceType": "Library",
    "id": "emcareb22assessmentstests",
    "url": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcareb22assessmentstests",
    "identifier": [
        {
            "use": "official",
            "value": "emcare.b22.assessmentstests"
        }
    ],
    "version": "0.0.1.build.186",
    "name": "emcareb22assessmentstests",
    "title": "EmCare.B22.AssessmentsTests",
    "status": "active",
    "type": {
        "coding": [
            {
                "system": "http://hl7.org/fhir/ValueSet/library-type",
                "code": "logic-library"
            }
        ]
    },
    "relatedArtifact": [
        {
            "type": "depends-on",
            "resource": "http://fhir.org/guides/who/anc-cds/Library/FHIRHelpers"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcarebase"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcarevalueset"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcarezscore"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/weightforage"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/anthrobase"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/weightforlength"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/weightforheight"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcarecombineddataelements"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcareobservation"
        }
    ],
    "parameter": [
        {
            "name": "force-collection",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "zscore_wfh",
            "use": "out",
            "type": "decimal"
        },
        {
            "name": "zscore_wfl",
            "use": "out",
            "type": "decimal"
        },
        {
            "name": "zscore_wfa",
            "use": "out",
            "type": "decimal"
        },
        {
            "name": "AgeInMonths",
            "use": "out",
            "type": "integer"
        },
        {
            "name": "Age auto-calculated (presented as number of years, months, days) of the client based on date of birth or estimated age or based on auto-calculation from estimaged date of birth",
            "use": "out",
            "type": "integer"
        },
        {
            "name": "AgeInDays",
            "use": "out",
            "type": "integer"
        },
        {
            "name": "a-BreastFeedingTest",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "Palmar Pallor",
            "use": "out",
            "type": "code"
        },
        {
            "name": "The client has palmar pallor",
            "use": "out",
            "type": "code"
        },
        {
            "name": "Obvious cause of fever",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "Obvious cause of fever",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "Fever",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "Severe Classification up to assessments and tests excluding Severe Dehydration",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "vomiting everything",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "a-RespiratoryRate",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "a-BronchodilatorTest",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "a-SecondTemperature",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "a-FluidTest",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "a-AppetiteTest",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "a-MalariaTest",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "Respiratory Rate profile",
            "use": "out",
            "type": "Quantity"
        },
        {
            "name": "Respiratory Rate Second Count Profile",
            "use": "out",
            "type": "Quantity"
        },
        {
            "name": "Fast Breathing profile",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "Cough",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "The client is reported to have or has had a cough",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "Difficulty Breathing",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "The client is reported to have or has had difficulty breathing",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "AgeInYears",
            "use": "out",
            "type": "integer"
        },
        {
            "name": "Age in years",
            "use": "out",
            "type": "integer"
        },
        {
            "name": "oftrp",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DS",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "EmCare.B7.DE09",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "Malaria Test Unknown",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "Malaria Test Result not known",
            "use": "out",
            "type": "boolean"
        }
    ],
    "content": [
        {
            "id": "ig-loader-emcareb22assessmentstests.cql",
            "contentType": "text/cql",
            "data": ""
        }
    ]
}