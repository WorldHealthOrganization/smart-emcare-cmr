{
    "resourceType": "Library",
    "id": "emcareb23classification",
    "url": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcareb23classification",
    "identifier": [
        {
            "use": "official",
            "value": "emcare.b23.classification"
        }
    ],
    "version": "0.0.1.build.174",
    "name": "emcareb23classification",
    "title": "EmCare.B23.Classification",
    "status": "active",
    "type": {
        "coding": [
            {
                "system": "http://hl7.org/fhir/ValueSet/library-type",
                "code": "logic-library"
            }
        ]
    },
    "relatedArtifact": [
        {
            "type": "depends-on",
            "resource": "http://fhir.org/guides/who/anc-cds/Library/FHIRHelpers"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcarebase"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcarevalueset"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcarezscore"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/weightforage"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/anthrobase"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/weightforlength"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/weightforheight"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcarecombineddataelements"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcareobservation"
        }
    ],
    "parameter": [
        {
            "name": "Severe Classification up to assessments and tests excluding Severe Dehydration",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "2-59m severe classification other than severe dehdyration",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "Recurrent wheeze",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "ageinmonths",
            "use": "out",
            "type": "integer"
        },
        {
            "name": "DL-XXXX",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "EmCare.B6.DE06",
            "use": "out",
            "type": "Quantity"
        },
        {
            "name": "Weight",
            "use": "out",
            "type": "Quantity"
        },
        {
            "name": "EmCare.B6.DE08-old",
            "use": "out",
            "type": "Quantity"
        },
        {
            "name": "Profile Weight",
            "use": "out",
            "type": "Quantity"
        },
        {
            "name": "EmCare.B6.DE08",
            "use": "out",
            "type": "Quantity"
        },
        {
            "name": "Related Person vital status",
            "use": "out",
            "type": "Quantity"
        },
        {
            "name": "zscore_height",
            "use": "out",
            "type": "decimal"
        },
        {
            "name": "Weight for Height Z-Score",
            "use": "out",
            "type": "decimal"
        },
        {
            "name": "zscore_age",
            "use": "out",
            "type": "decimal"
        },
        {
            "name": "Weight for Age Z-Score",
            "use": "out",
            "type": "decimal"
        },
        {
            "name": "zscore_length",
            "use": "out",
            "type": "decimal"
        },
        {
            "name": "Weight for Length Z-Score",
            "use": "out",
            "type": "decimal"
        },
        {
            "name": "DL-G-CL1-01",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "History of Obstructed or Absent Breathing",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-08",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "Severe Pneumonia or Very Severe Disease",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "EmCare.B23.DE04",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "The client has Severe Pneumonia or Very Severe Disease with low oxygen saturation (SPO2 < 90%)",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-12-13",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-12",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-13",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "EmCare.B23.DE08",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-20",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-24",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-25",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-27",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-28-32",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-33",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-34-36",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-34",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-35",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-36",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-37",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-38",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-39",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-41",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CLI1-42",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-43",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "EmCare.B23.DE22a",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-48",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-49",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-53",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "The client has Malaria with Malaria Unconfirmed (no test available or performed and Fever present every day for more than 7 days",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-56",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-57",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-58",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "EmCare.B23.DE25a",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-62",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "EmCare.B23.DE26a",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-I-CL1-16-66",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-I-CL1-16-67a",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-67a",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-I-CL1-16-67",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-67",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-16",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-I-CL1-66",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-69-70",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-69",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-68-17",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-68",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-I-CL1-17",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-72-75",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-72-74",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-72",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-73",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-74",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-75",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-77",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-78-79",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-78",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-79",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-I-CL1-80",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-81",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-83",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-84",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "EmCare.B23.DE36",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-85",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-86",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-87",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "EmCare.B23.DE38",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-89",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "EmCare.B23.DE40",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-91",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-92",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "EmCare.B23.DE43",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-94",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-95",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "EmCare.B23.DE46A",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-97",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "EmCare.B23.DE48",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-99",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "EmCare.B23.DE50",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "EmCare.B23.DE50a",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-102",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "EmCare.B23.DE52a",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-103",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-104",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-105",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-106",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-107",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-108",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-109",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "EmCare.B23.DE60",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-111",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-113",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-114",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-116",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-118-126",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-118",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-119",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-120",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-121",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-122",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-123",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-124",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-125",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-126",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-127-130",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-127",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-128",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-129",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-130",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-131-134",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-131",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-132",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-133",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-134",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-135",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-136",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-137",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-138-141",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-138",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-139",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-140",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-141",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-142-145",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-142",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-143",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-144",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-145",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "Date of last deworming treatment",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-147",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-148",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-149-150",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-149",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-150",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-151-153",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-151",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-152",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-153",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-154-156",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-154",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-155",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-156",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-157",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-158",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-159",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-160",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-162",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-163",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "EmCare.B23.DE105",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-165",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-166",
            "use": "out",
            "type": "boolean"
        }
    ],
    "content": [
        {
            "id": "ig-loader-emcareb23classification.cql",
            "contentType": "text/cql",
            "data": ""
        }
    ]
}