{
    "resourceType": "Library",
    "id": "emcarecombineddataelements",
    "url": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcarecombineddataelements",
    "identifier": [
        {
            "use": "official",
            "value": "emcare.combineddataelements"
        }
    ],
    "version": "0.0.1.build.174",
    "name": "emcarecombineddataelements",
    "title": "EmCare.CombinedDataElements",
    "status": "active",
    "type": {
        "coding": [
            {
                "system": "http://hl7.org/fhir/ValueSet/library-type",
                "code": "logic-library"
            }
        ]
    },
    "relatedArtifact": [
        {
            "type": "depends-on",
            "resource": "http://fhir.org/guides/who/anc-cds/Library/FHIRHelpers"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcarebase"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcarevalueset"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcarezscore"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/weightforage"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/anthrobase"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/weightforlength"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/weightforheight"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcareobservation"
        }
    ],
    "parameter": [
        {
            "name": "zscore_h",
            "use": "out",
            "type": "decimal"
        },
        {
            "name": "zscore_a",
            "use": "out",
            "type": "decimal"
        },
        {
            "name": "zscore_l",
            "use": "out",
            "type": "decimal"
        },
        {
            "name": "child",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "Age >= 2 months to <60 months",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "yi",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "Age >=28 days to 2 Months",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "vyi",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "Age < 28 days",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "nb",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "nnb",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "EmCare.B.G.DE01",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "Danger Signs",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "EmCare.B.G.DE05",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "Severe Classification up to assessments and tests excluding Severe Dehydration",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-23-30",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-23-30b",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-29",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-I-CL1-30",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-I-CL1-23",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL2-18-03",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL2-18",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-I-CL2-01",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-24-32",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL2-19",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-24-32b",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-I-CL1-31",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-I-CL1-32",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "PSBI other than temperature",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "PSBI",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "PSBI-2",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "YI severe classification other than Severe Dehydration",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "YI severe classification",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "EmCare.B12S1.DE01",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "Severe Acute Malnutrition",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "vomiting",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "vomiting everything",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "Malaria Test Unknown",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "Recurrent wheeze",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "2-59m severe classification other than severe dehdyration",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "Medical Complications of Severe Acute Malnutrition",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-105",
            "use": "out",
            "type": "boolean"
        }
    ],
    "content": [
        {
            "id": "ig-loader-emcarecombineddataelements.cql",
            "contentType": "text/cql",
            "data": ""
        }
    ]
}