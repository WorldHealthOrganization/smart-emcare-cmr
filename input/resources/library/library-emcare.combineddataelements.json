{
    "resourceType": "Library",
    "id": "emcarecombineddataelements",
    "url": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcarecombineddataelements",
    "identifier": [
        {
            "use": "official",
            "value": "emcare.combineddataelements"
        }
    ],
    "version": "0.0.1.build.29",
    "name": "emcarecombineddataelements",
    "title": "EmCare.CombinedDataElements",
    "status": "active",
    "type": {
        "coding": [
            {
                "system": "http://hl7.org/fhir/ValueSet/library-type",
                "code": "logic-library"
            }
        ]
    },
    "relatedArtifact": [
        {
            "type": "depends-on",
            "resource": "http://fhir.org/guides/who/anc-cds/Library/FHIRHelpers"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcarebase"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcareobservation"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcarevalueset"
        }
    ],
    "parameter": [
        {
            "name": "child",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "Age >= 2 months to <60 months",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "yi",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "Age >=28 days to 2 Months",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "vyi",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "Age < 28 days",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "nb",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "nnb",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "EmCare.B.G.DE01",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "Danger Signs",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "EmCare.B.G.DE05",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "Severe Classification up to assessments and tests excluding Severe Dehydration",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-23-30",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-23-30b",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-29",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-I-CL1-30",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-I-CL1-23",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL2-18-03",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL2-18",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-I-CL2-01",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-24-32",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL2-19",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-G-CL1-24-32b",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-I-CL1-31",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "DL-I-CL1-32",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "PSBI other than temperature",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "PSBI",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "PSBI-2",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "YI severe classification other than severe dehydration",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "YI severe classification",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "EmCare.B12S1.DE01",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "Severe Acute Malnutrition",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "The client is reported to be vomiting",
            "use": "out",
            "type": "boolean"
        }
    ],
    "content": [
        {
            "id": "ig-loader-emcarecombineddataelements.cql",
            "contentType": "text/cql",
            "data": "LyoKQGF1dGhvcjogUGF0cmljayBEZWxjcm9peApAZGVzY3JpcHRpb246IFRoaXMgbGlicmFyeSBpcyBwYXJ0IG9mIHRoZSBwcm9qZWN0IEVtQ2FyZQoqLwpsaWJyYXJ5IGVtY2FyZWNvbWJpbmVkZGF0YWVsZW1lbnRzIHZlcnNpb24gJzAuMC4xLmJ1aWxkLjI5Jwp1c2luZyBGSElSIHZlcnNpb24gJzQuMC4xJwppbmNsdWRlIEZISVJIZWxwZXJzIHZlcnNpb24gJzQuMC4xJyBjYWxsZWQgRkhJUkhlbHBlcnMgCmluY2x1ZGUgZW1jYXJlYmFzZSB2ZXJzaW9uICcwLjAuMS5idWlsZC4yOScgY2FsbGVkIEJhc2UKaW5jbHVkZSBlbWNhcmVvYnNlcnZhdGlvbiB2ZXJzaW9uICcwLjAuMS5idWlsZC4yOScgY2FsbGVkIG9icwppbmNsdWRlIGVtY2FyZXZhbHVlc2V0IHZlcnNpb24gJzAuMC4xLmJ1aWxkLjI5JyBjYWxsZWQgdmFsCgoKCgpjb250ZXh0IFBhdGllbnQKCgovKiAKT0JTZGVmaW5lLkVtQ2FyZS5CNy5ERTAyIDogQ29udnVsc2luZyBOb3cKCiovCmRlZmluZSAiT0JTZGVmaW5lLkVtQ2FyZS5CNy5ERTAyIjoKICAgIEJhc2UuR2V0T2JzVmFsdWUoJ0VtQ2FyZS5CNy5ERTAyJykKCi8qIApPQlNkZWZpbmUuRW1DYXJlLkI3LkRFMDMgOiBDb252dWxzaW9uKHMpIGluIHRoaXMgSWxsbmVzcwoKKi8KZGVmaW5lICJPQlNkZWZpbmUuRW1DYXJlLkI3LkRFMDMiOgogICAgQmFzZS5HZXRPYnNWYWx1ZSgnRW1DYXJlLkI3LkRFMDMnKQoKLyogCk9CU2RlZmluZS5FbUNhcmUuQjcuREUwOCA6IFVuY29uc2Npb3VzCgoqLwpkZWZpbmUgIk9CU2RlZmluZS5FbUNhcmUuQjcuREUwOCI6CiAgICBCYXNlLkdldE9ic1ZhbHVlKCdFbUNhcmUuQjcuREUwOCcpCgovKiAKT0JTZGVmaW5lLkVtQ2FyZS5CNy5ERTA4YSA6IExldGhhcmdpYwoKKi8KZGVmaW5lICJPQlNkZWZpbmUuRW1DYXJlLkI3LkRFMDhhIjoKICAgIEJhc2UuR2V0T2JzVmFsdWUoJ0VtQ2FyZS5CNy5ERTA4YScpCgovKiAKT0JTZGVmaW5lLkVtQ2FyZS5CMjBTMS5ERTAxIDogRGlhcnJob2VhCgoqLwpkZWZpbmUgIk9CU2RlZmluZS5FbUNhcmUuQjIwUzEuREUwMSI6CiAgICBCYXNlLkdldE9ic1ZhbHVlKCdFbUNhcmUuQjIwUzEuREUwMScpCgovKiAKT0JTZGVmaW5lLkVtQ2FyZS5CMTBTMS5ERTA1IDogQ291Z2gKCiovCmRlZmluZSAiT0JTZGVmaW5lLkVtQ2FyZS5CMTBTMS5ERTA1IjoKICAgIEJhc2UuR2V0T2JzVmFsdWUoJ0VtQ2FyZS5CMTBTMS5ERTA1JykKCi8qIApPQlNkZWZpbmUuRW1DYXJlLkIxMFMxLkRFMDEgOiBEaWZmaWN1bHR5IEJyZWF0aGluZwoKKi8KZGVmaW5lICJPQlNkZWZpbmUuRW1DYXJlLkIxMFMxLkRFMDEiOgogICAgQmFzZS5HZXRPYnNWYWx1ZSgnRW1DYXJlLkIxMFMxLkRFMDEnKQoKLyogCk9CU2RlZmluZS5FbUNhcmUuQjEzUzIuREUwMSA6IFRlbmRlciBzd2VsbGluZyBiZWhpbmQgdGhlIGVhcgoKKi8KZGVmaW5lICJPQlNkZWZpbmUuRW1DYXJlLkIxM1MyLkRFMDEiOgogICAgQmFzZS5HZXRPYnNWYWx1ZSgnRW1DYXJlLkIxM1MyLkRFMDEnKQoKLyogCk9CU2RlZmluZS5FbUNhcmUuQjE1UzIuREUwMSA6IFBhbG1hciBQYWxsb3IKCiovCmRlZmluZSAiT0JTZGVmaW5lLkVtQ2FyZS5CMTVTMi5ERTAxIjoKICAgIEJhc2UuR2V0T2JzVmFsdWUoJ0VtQ2FyZS5CMTVTMi5ERTAxJykKCi8qIApPQlNkZWZpbmUuRW1DYXJlLkIxNVMyLkRFMDkgOiBNdWNvdXMgbWVtYnJhbmUgcGFsbG9yCgoqLwpkZWZpbmUgIk9CU2RlZmluZS5FbUNhcmUuQjE1UzIuREUwOSI6CiAgICBCYXNlLkdldE9ic1ZhbHVlKCdFbUNhcmUuQjE1UzIuREUwOScpCgovKiAKT0JTZGVmaW5lLkVtQ2FyZS5CMjIuREU4MSA6IEhlbW9nbG9iaW4gKEhiKSBnL2RMCgoqLwpkZWZpbmUgIk9CU2RlZmluZS5FbUNhcmUuQjIyLkRFODEiOgogICAgQmFzZS5HZXRPYnNWYWx1ZSgnRW1DYXJlLkIyMi5ERTgxJykKCi8qIApPQlNkZWZpbmUuRW1DYXJlLkI3LkRFMDkgOiBOb3QgYWJsZSB0byBkcmluayBvciBicmVhc3RmZWVkCgoqLwpkZWZpbmUgIk9CU2RlZmluZS5FbUNhcmUuQjcuREUwOSI6CiAgICBCYXNlLkdldE9ic1ZhbHVlKCdFbUNhcmUuQjcuREUwOScpCgovKiAKT0JTZGVmaW5lLkVtQ2FyZS5CMjIuREUwOCA6IE9yYWwgRmx1aWQgVGVzdCBSZXN1bHRzCgoqLwpkZWZpbmUgIk9CU2RlZmluZS5FbUNhcmUuQjIyLkRFMDgiOgogICAgQmFzZS5HZXRPYnNWYWx1ZSgnRW1DYXJlLkIyMi5ERTA4JykKCi8qIApPQlNkZWZpbmUuRW1DYXJlLkIyMi5ERTE0YSA6IENvbXBsZXRlbHkgVW5hYmxlIHRvIERyaW5rIG9yIFZvbWl0cyBJbW1lZGlhdGVseSAvIEV2ZXJ5dGhpbmcKCiovCmRlZmluZSAiT0JTZGVmaW5lLkVtQ2FyZS5CMjIuREUxNGEiOgogICAgQmFzZS5HZXRPYnNWYWx1ZSgnRW1DYXJlLkIyMi5ERTE0YScpCgovKiAKT0JTZGVmaW5lLkVtQ2FyZS5CMjIuREUxNCA6IFVuYWJsZSB0byBQZXJmb3JtIE9yYWwgRmx1aWQgVGVzdAoKKi8KZGVmaW5lICJPQlNkZWZpbmUuRW1DYXJlLkIyMi5ERTE0IjoKICAgIEJhc2UuR2V0T2JzVmFsdWUoJ0VtQ2FyZS5CMjIuREUxNCcpCgovKiAKT0JTZGVmaW5lLkVtQ2FyZS5CMTBTMi5ERTA0IDogU3RyaWRvciBpbiBhIGNhbG0gY2hpbGQKCiovCmRlZmluZSAiT0JTZGVmaW5lLkVtQ2FyZS5CMTBTMi5ERTA0IjoKICAgIEJhc2UuR2V0T2JzVmFsdWUoJ0VtQ2FyZS5CMTBTMi5ERTA0JykKCi8qIApPQlNkZWZpbmUuRW1DYXJlLkIxMFMyLkRFMDcgOiBPeHlnZW4gU2F0dXJhdGlvbgoKKi8KZGVmaW5lICJPQlNkZWZpbmUuRW1DYXJlLkIxMFMyLkRFMDciOgogICAgQmFzZS5HZXRPYnNWYWx1ZSgnRW1DYXJlLkIxMFMyLkRFMDcnKQoKLyogCk9CU2RlZmluZS5FbUNhcmUuQjEyUzIuREUwMSA6IFN0aWZmIG5lY2sKCiovCmRlZmluZSAiT0JTZGVmaW5lLkVtQ2FyZS5CMTJTMi5ERTAxIjoKICAgIEJhc2UuR2V0T2JzVmFsdWUoJ0VtQ2FyZS5CMTJTMi5ERTAxJykKCi8qIApPQlNkZWZpbmUuRW1DYXJlLkIyMFMyLkRFMDIgOiBTa2luIHBpbmNoIG9mIEFiZG9tZW4KCiovCmRlZmluZSAiT0JTZGVmaW5lLkVtQ2FyZS5CMjBTMi5ERTAyIjoKICAgIEJhc2UuR2V0T2JzVmFsdWUoJ0VtQ2FyZS5CMjBTMi5ERTAyJykKCi8qIApPQlNkZWZpbmUuRW1DYXJlLkIxMVMyLkRFMDYgOiBSZXN0bGVzcyBhbmQgSXJyaXRhYmxlCgoqLwpkZWZpbmUgIk9CU2RlZmluZS5FbUNhcmUuQjExUzIuREUwNiI6CiAgICBCYXNlLkdldE9ic1ZhbHVlKCdFbUNhcmUuQjExUzIuREUwNicpCgovKiAKT0JTZGVmaW5lLkVtQ2FyZS5CNy5ERTA4YiA6IFVuY29uc2Npb3VzIG9yIExldGhhcmdpYwoKKi8KZGVmaW5lICJPQlNkZWZpbmUuRW1DYXJlLkI3LkRFMDhiIjoKICAgIEJhc2UuR2V0T2JzVmFsdWUoJ0VtQ2FyZS5CNy5ERTA4YicpCgovKiAKT0JTZGVmaW5lLkVtQ2FyZS5CMjBTMi5ERTAxIDogU3Vua2VuIEV5ZXMKCiovCmRlZmluZSAiT0JTZGVmaW5lLkVtQ2FyZS5CMjBTMi5ERTAxIjoKICAgIEJhc2UuR2V0T2JzVmFsdWUoJ0VtQ2FyZS5CMjBTMi5ERTAxJykKCi8qIApPQlNkZWZpbmUuRW1DYXJlLkIxOFMyLkRFMDggOiBNb3ZlbWVudHMKCiovCmRlZmluZSAiT0JTZGVmaW5lLkVtQ2FyZS5CMThTMi5ERTA4IjoKICAgIEJhc2UuR2V0T2JzVmFsdWUoJ0VtQ2FyZS5CMThTMi5ERTA4JykKCi8qIApPQlNkZWZpbmUuRW1DYXJlLkIxOFMxLkRFMDIgOiBEaWZmaWN1bHR5IHdpdGggRmVlZGluZwoKKi8KZGVmaW5lICJPQlNkZWZpbmUuRW1DYXJlLkIxOFMxLkRFMDIiOgogICAgQmFzZS5HZXRPYnNWYWx1ZSgnRW1DYXJlLkIxOFMxLkRFMDInKQoKLyogCk9CU2RlZmluZS5FbUNhcmUuQjE4UzIuREUwNyA6IFNldmVyZSBDaGVzdCBJbmRyYXdpbmcKCiovCmRlZmluZSAiT0JTZGVmaW5lLkVtQ2FyZS5CMThTMi5ERTA3IjoKICAgIEJhc2UuR2V0T2JzVmFsdWUoJ0VtQ2FyZS5CMThTMi5ERTA3JykKCi8qIApPQlNkZWZpbmUuRW1DYXJlLkI2LkRFMDQgOiBUaGVybW9tZXRlciBub3QgYXZhaWxhYmxlCgoqLwpkZWZpbmUgIk9CU2RlZmluZS5FbUNhcmUuQjYuREUwNCI6CiAgICBCYXNlLkdldE9ic1ZhbHVlKCdFbUNhcmUuQjYuREUwNCcpCgovKiAKT0JTZGVmaW5lLkVtQ2FyZS5CNi5ERTA1IDogSG90IHRvIFRvdWNoCgoqLwpkZWZpbmUgIk9CU2RlZmluZS5FbUNhcmUuQjYuREUwNSI6CiAgICBCYXNlLkdldE9ic1ZhbHVlKCdFbUNhcmUuQjYuREUwNScpCgovKiAKT0JTZGVmaW5lLkVtQ2FyZS5CNi5ERTAxQSA6IE1lYXN1cmVkIFRlbXBlcmF0dXJlCgoqLwpkZWZpbmUgIk9CU2RlZmluZS5FbUNhcmUuQjYuREUwMUEiOgogICAgQmFzZS5HZXRPYnNWYWx1ZSgnRW1DYXJlLkI2LkRFMDFBJykKCi8qIApPQlNkZWZpbmUuRW1DYXJlLkIyMi5ERTUwIDogTWVhc3VyZWQgVGVtcGVyYXR1cmUgKHNlY29uZCBtZWFzdXJlbWVudCkKCiovCmRlZmluZSAiT0JTZGVmaW5lLkVtQ2FyZS5CMjIuREU1MCI6CiAgICBCYXNlLkdldE9ic1ZhbHVlKCdFbUNhcmUuQjIyLkRFNTAnKQoKLyogCk9CU2RlZmluZS5FbUNhcmUuQjIyLkRFNDYgOiBTZWNvbmQgVGVtcGVyYXR1cmUgTWVhc3VyZW1lbnQgTm90IEZlYXNpYmxlCgoqLwpkZWZpbmUgIk9CU2RlZmluZS5FbUNhcmUuQjIyLkRFNDYiOgogICAgQmFzZS5HZXRPYnNWYWx1ZSgnRW1DYXJlLkIyMi5ERTQ2JykKCi8qIApPQlNkZWZpbmUuRW1DYXJlLkIxOVMyLkRFMDIgOiBZZWxsb3cgUGFsbXMgb3IgWWVsbG93IFNvbGVzCgoqLwpkZWZpbmUgIk9CU2RlZmluZS5FbUNhcmUuQjE5UzIuREUwMiI6CiAgICBCYXNlLkdldE9ic1ZhbHVlKCdFbUNhcmUuQjE5UzIuREUwMicpCgovKiAKT0JTZGVmaW5lLkVtQ2FyZS5CMTlTMi5ERTAxIDogWWVsbG93IFNraW4KCiovCmRlZmluZSAiT0JTZGVmaW5lLkVtQ2FyZS5CMTlTMi5ERTAxIjoKICAgIEJhc2UuR2V0T2JzVmFsdWUoJ0VtQ2FyZS5CMTlTMi5ERTAxJykKCi8qIApPQlNkZWZpbmUuRW1DYXJlLkIxOVMyLkRFMDQgOiBXaGVuIGRpZCB0aGUgSmF1bmRpY2UgZmlyc3QgYXBwZWFyPwoKKi8KZGVmaW5lICJPQlNkZWZpbmUuRW1DYXJlLkIxOVMyLkRFMDQiOgogICAgQmFzZS5HZXRPYnNWYWx1ZSgnRW1DYXJlLkIxOVMyLkRFMDQnKQoKLyogCk9CU2RlZmluZS5FbUNhcmUuQjIxUzIuREUwMSA6IFdlaWdodCBTdGF0dXMKCiovCmRlZmluZSAiT0JTZGVmaW5lLkVtQ2FyZS5CMjFTMi5ERTAxIjoKICAgIEJhc2UuR2V0T2JzVmFsdWUoJ0VtQ2FyZS5CMjFTMi5ERTAxJykKCi8qIApPQlNkZWZpbmUuRW1DYXJlLkIxMlMxLkRFMDIgOiBGZXZlciBSZXBvcnRlZAoKKi8KZGVmaW5lICJPQlNkZWZpbmUuRW1DYXJlLkIxMlMxLkRFMDIiOgogICAgQmFzZS5HZXRPYnNWYWx1ZSgnRW1DYXJlLkIxMlMxLkRFMDInKQoKLyogCk9CU2RlZmluZS5FbUNhcmUuQjYuREUxNyA6IE1VQUMgKE1pZCBVcHBlciBBcm0gQ2lyY3VtZmVyZW5jZSkKCiovCmRlZmluZSAiT0JTZGVmaW5lLkVtQ2FyZS5CNi5ERTE3IjoKICAgIEJhc2UuR2V0T2JzVmFsdWUoJ0VtQ2FyZS5CNi5ERTE3JykKCi8qIApPQlNkZWZpbmUuRW1DYXJlLkI2LkRFMTYgOiBXZWlnaHQgZm9yIEFnZSAoV0ZBKSBaIFNjb3JlcwoKKi8KZGVmaW5lICJPQlNkZWZpbmUuRW1DYXJlLkI2LkRFMTYiOgogICAgQmFzZS5HZXRPYnNWYWx1ZSgnRW1DYXJlLkI2LkRFMTYnKQoKLyogCk9CU2RlZmluZS5FbUNhcmUuQjcuREUxMCA6IFZvbWl0aW5nCgoqLwpkZWZpbmUgIk9CU2RlZmluZS5FbUNhcmUuQjcuREUxMCI6CiAgICBCYXNlLkdldE9ic1ZhbHVlKCdFbUNhcmUuQjcuREUxMCcpCgovKiAKY2hpbGQgOiAKQWdlSW5Nb250aHMoKT49IDIgYW5kICBBZ2VJbk1vbnRocygpPDYwCiovCmRlZmluZSAiY2hpbGQiOgogICAgQWdlSW5Nb250aHMoKT49IDIgYW5kICBBZ2VJbk1vbnRocygpPDYwCgovKiAKQWdlID49IDIgbW9udGhzIHRvIDw2MCBtb250aHMgOiBjaGlsZApBbGlhcwoqLwpkZWZpbmUgIkFnZSA+PSAyIG1vbnRocyB0byA8NjAgbW9udGhzIjoKICAgICJjaGlsZCIKCi8qIAp5aSA6IApBZ2VJbkRheXMoKT49IDI4IGFuZCBBZ2VJbk1vbnRocygpPDIKKi8KZGVmaW5lICJ5aSI6CiAgICBBZ2VJbkRheXMoKT49IDI4IGFuZCBBZ2VJbk1vbnRocygpPDIKCi8qIApBZ2UgPj0yOCBkYXlzIHRvIDIgTW9udGhzIDogeWkKQWxpYXMKKi8KZGVmaW5lICJBZ2UgPj0yOCBkYXlzIHRvIDIgTW9udGhzIjoKICAgICJ5aSIKCi8qIAp2eWkgOiAKQWdlSW5EYXlzKCk8IDI4CiovCmRlZmluZSAidnlpIjoKICAgIEFnZUluRGF5cygpPCAyOAoKLyogCkFnZSA8IDI4IGRheXMgOiB2eWkKQWxpYXMKKi8KZGVmaW5lICJBZ2UgPCAyOCBkYXlzIjoKICAgICJ2eWkiCgovKiAKbmIgOiAKQWdlSW5EYXlzKCk8IDIKKi8KZGVmaW5lICJuYiI6CiAgICBBZ2VJbkRheXMoKTwgMgoKLyogCkFnZSA8MjQgaG91cnMgOiBuYgpBbGlhcwoqLwpkZWZpbmUgIkFnZSA8MjQgaG91cnMiOgogICAgIm5iIgoKLyogCm5uYiA6IAoiQWdlIDwyNCBob3VycyIgPSBmYWxzZQoqLwpkZWZpbmUgIm5uYiI6CiAgICAiQWdlIDwyNCBob3VycyIgPSBmYWxzZQoKLyogCkFnZSAgPj0gMjQgaG91cnMgOiBubmIKQWxpYXMKKi8KZGVmaW5lICJBZ2UgID49IDI0IGhvdXJzIjoKICAgICJubmIiCgovKiAKRW1DYXJlLkIuRy5ERTAxIDogCiAgICAoImNoaWxkIikKICAgICBhbmQgKCggICAgIkNvbnZ1bHNpbmcgTm93Ij0gdHJ1ZSkKICAgICBvciAoICAgICJDb252dWxzaW9uKHMpIGluIHRoaXMgSWxsbmVzcyIgPSB0cnVlKQogICAgIG9yICggICAgIlVuY29uc2Npb3VzIiA9IHRydWUpCiAgICAgb3IgKCAgICAiTGV0aGFyZ2ljIiA9IHRydWUgYW5kICJEaWFycmhvZWEiID0gZmFsc2UpCiAgICAgb3IgKCAgICAiTGV0aGFyZ2ljIiA9IHRydWUgYW5kICJEaWFycmhvZWEiID0gdHJ1ZSBhbmQgIlNldmVyZSBEZWh5ZHJhdGlvbiIgPSBmYWxzZSBhbmQgIlNvbWUgRGVoeWRyYXRpb24iID0gZmFsc2UpCiAgICAgb3IgKCAgICAiTGV0aGFyZ2ljIiA9IHRydWUgYW5kICJEaWFycmhvZWEiID0gdHJ1ZSBhbmQgKCJDb3VnaCIgPSB0cnVlIG9yICJEaWZmaWN1bHR5IEJyZWF0aGluZyIgPSB0cnVlIG9yICAiRmV2ZXIiID0gdHJ1ZSBvciAiVGVuZGVyIHN3ZWxsaW5nIGJlaGluZCB0aGUgZWFyIiA9IHRydWUgb3IgIlBhbG1hciBQYWxsb3IiPSJTZXZlcmUgUGFsbWFyIFBhbGxvciIgb3IgIk11Y291cyBtZW1icmFuZSBwYWxsb3IiPSJTZXZlcmUgbXVjb3VzIG1lbWJyYW5lIHBhbGxvciIgb3IgIkhlbW9nbG9iaW4gKEhiKSBnL2RMIiAgPCA3ICdnL2RMJykpCiAgICAgb3IgKCAgICAiTm90IGFibGUgdG8gZHJpbmsgb3IgYnJlYXN0ZmVlZCIgPSB0cnVlIG9yICAiT3JhbCBGbHVpZCBUZXN0IFJlc3VsdHMiID0gIlZvbWl0cyBJbW1lZGlhdGVseSAvIEV2ZXJ5dGhpbmciKQogICAgIG9yICggICAgIkNvbXBsZXRlbHkgVW5hYmxlIHRvIERyaW5rIG9yIFZvbWl0cyBJbW1lZGlhdGVseSAvIEV2ZXJ5dGhpbmciPXRydWUgb3IgIk9yYWwgRmx1aWQgVGVzdCBSZXN1bHRzIiA9ICJWb21pdHMgSW1tZWRpYXRlbHkgLyBFdmVyeXRoaW5nIiBvciAgIlVuYWJsZSB0byBQZXJmb3JtIE9yYWwgRmx1aWQgVGVzdCI9dHJ1ZSkpCiovCmRlZmluZSAiRW1DYXJlLkIuRy5ERTAxIjoKICAgICAgICAoImNoaWxkIikKICAgICAgICAgYW5kICgoICAgICJPQlNkZWZpbmUuRW1DYXJlLkI3LkRFMDIiPSB0cnVlKQogICAgICAgICBvciAoICAgICJPQlNkZWZpbmUuRW1DYXJlLkI3LkRFMDMiID0gdHJ1ZSkKICAgICAgICAgb3IgKCAgICAiT0JTZGVmaW5lLkVtQ2FyZS5CNy5ERTA4IiA9IHRydWUpCiAgICAgICAgIG9yICggICAgIk9CU2RlZmluZS5FbUNhcmUuQjcuREUwOGEiID0gdHJ1ZSBhbmQgIk9CU2RlZmluZS5FbUNhcmUuQjIwUzEuREUwMSIgPSBmYWxzZSkKICAgICAgICAgb3IgKCAgICAiT0JTZGVmaW5lLkVtQ2FyZS5CNy5ERTA4YSIgPSB0cnVlIGFuZCAiT0JTZGVmaW5lLkVtQ2FyZS5CMjBTMS5ERTAxIiA9IHRydWUgYW5kICJTZXZlcmUgRGVoeWRyYXRpb24iID0gZmFsc2UgYW5kICJTb21lIERlaHlkcmF0aW9uIiA9IGZhbHNlKQogICAgICAgICBvciAoICAgICJPQlNkZWZpbmUuRW1DYXJlLkI3LkRFMDhhIiA9IHRydWUgYW5kICJPQlNkZWZpbmUuRW1DYXJlLkIyMFMxLkRFMDEiID0gdHJ1ZSBhbmQgKCJPQlNkZWZpbmUuRW1DYXJlLkIxMFMxLkRFMDUiID0gdHJ1ZSBvciAiT0JTZGVmaW5lLkVtQ2FyZS5CMTBTMS5ERTAxIiA9IHRydWUgb3IgICJGZXZlciIgPSB0cnVlIG9yICJPQlNkZWZpbmUuRW1DYXJlLkIxM1MyLkRFMDEiID0gdHJ1ZSBvciAiT0JTZGVmaW5lLkVtQ2FyZS5CMTVTMi5ERTAxIj12YWwuIlNldmVyZSBQYWxtYXIgUGFsbG9yIiBvciAiT0JTZGVmaW5lLkVtQ2FyZS5CMTVTMi5ERTA5Ij12YWwuIlNldmVyZSBtdWNvdXMgbWVtYnJhbmUgcGFsbG9yIiBvciAiT0JTZGVmaW5lLkVtQ2FyZS5CMjIuREU4MSIgIDwgNyAnZy9kTCcpKQogICAgICAgICBvciAoICAgICJPQlNkZWZpbmUuRW1DYXJlLkI3LkRFMDkiID0gdHJ1ZSBvciAgIk9CU2RlZmluZS5FbUNhcmUuQjIyLkRFMDgiID0gdmFsLiJWb21pdHMgSW1tZWRpYXRlbHkgLyBFdmVyeXRoaW5nIikKICAgICAgICAgb3IgKCAgICAiT0JTZGVmaW5lLkVtQ2FyZS5CMjIuREUxNGEiPXRydWUgb3IgIk9CU2RlZmluZS5FbUNhcmUuQjIyLkRFMDgiID0gdmFsLiJWb21pdHMgSW1tZWRpYXRlbHkgLyBFdmVyeXRoaW5nIiBvciAgIk9CU2RlZmluZS5FbUNhcmUuQjIyLkRFMTQiPXRydWUpKQoKLyogCkRhbmdlciBTaWducyA6IEVtQ2FyZS5CLkcuREUwMQpBbGlhcwoqLwpkZWZpbmUgIkRhbmdlciBTaWducyI6CiAgICAiRW1DYXJlLkIuRy5ERTAxIgoKLyogCkVtQ2FyZS5CLkcuREUwNSA6IAogICAgKCAgICAiRGFuZ2VyIFNpZ25zIiA9IHRydWUpCiAgICAgb3IgKCAgICAiU3RyaWRvciBpbiBhIGNhbG0gY2hpbGQiID0gdHJ1ZSkKICAgICBvciAoICAgICJPeHlnZW4gU2F0dXJhdGlvbiIgPD0gIDkwICclJykKICAgICBvciAoICAgICJTdGlmZiBuZWNrIiA9IHRydWUpCiAgICAgb3IgKCAgICAiRmV2ZXIiID0gdHJ1ZSBhbmQgIlRocm9hdCBwcm9ibGVtIiA9IHRydWUgYW5kICgiQWJpbGl0eSB0byBzd2FsbG93IiA9ICJVbmFibGUgdG8gc3dhbGxvdyIgb3IgIlNwZWNpZnkgVGhyb2F0IHByb2JsZW0iID0gIk1lbWJyYW5lIG9uIHRocm9hdCIpKQogICAgIG9yICggICAgIlRlbmRlciBzd2VsbGluZyBiZWhpbmQgdGhlIGVhciIgPSB0cnVlKQogICAgIG9yICggICAgKCJQYWxtYXIgUGFsbG9yIiA9ICJTZXZlcmUgUGFsbWFyIFBhbGxvciIgb3IgIk11Y291cyBtZW1icmFuZSBwYWxsb3IiPSJTZXZlcmUgbXVjb3VzIG1lbWJyYW5lIHBhbGxvciIgb3IgIkhlbW9nbG9iaW4gKEhiKSBnL2RMIiAgPCA3ICdnL2RMJykpCiovCmRlZmluZSAiRW1DYXJlLkIuRy5ERTA1IjoKICAgICAgICAoICAgICJEYW5nZXIgU2lnbnMiID0gdHJ1ZSkKICAgICAgICAgb3IgKCAgICAiT0JTZGVmaW5lLkVtQ2FyZS5CMTBTMi5ERTA0IiA9IHRydWUpCiAgICAgICAgIG9yICggICAgIk9CU2RlZmluZS5FbUNhcmUuQjEwUzIuREUwNyIgPD0gIDkwICclJykKICAgICAgICAgb3IgKCAgICAiT0JTZGVmaW5lLkVtQ2FyZS5CMTJTMi5ERTAxIiA9IHRydWUpCiAgICAgICAgIG9yICggICAgIkZldmVyIiA9IHRydWUgYW5kICJUaHJvYXQgcHJvYmxlbSIgPSB0cnVlIGFuZCAoIkFiaWxpdHkgdG8gc3dhbGxvdyIgPSB2YWwuIlVuYWJsZSB0byBzd2FsbG93IiBvciAiU3BlY2lmeSBUaHJvYXQgcHJvYmxlbSIgPSB2YWwuIk1lbWJyYW5lIG9uIHRocm9hdCIpKQogICAgICAgICBvciAoICAgICJPQlNkZWZpbmUuRW1DYXJlLkIxM1MyLkRFMDEiID0gdHJ1ZSkKICAgICAgICAgb3IgKCAgICAoIk9CU2RlZmluZS5FbUNhcmUuQjE1UzIuREUwMSIgPSB2YWwuIlNldmVyZSBQYWxtYXIgUGFsbG9yIiBvciAiT0JTZGVmaW5lLkVtQ2FyZS5CMTVTMi5ERTA5Ij12YWwuIlNldmVyZSBtdWNvdXMgbWVtYnJhbmUgcGFsbG9yIiBvciAiT0JTZGVmaW5lLkVtQ2FyZS5CMjIuREU4MSIgIDwgNyAnZy9kTCcpKQoKLyogClNldmVyZSBDbGFzc2lmaWNhdGlvbiB1cCB0byBhc3Nlc3NtZW50cyBhbmQgdGVzdHMgZXhjbHVkaW5nIFNldmVyZSBEZWh5ZHJhdGlvbiA6IEVtQ2FyZS5CLkcuREUwNQpBbGlhcwoqLwpkZWZpbmUgIlNldmVyZSBDbGFzc2lmaWNhdGlvbiB1cCB0byBhc3Nlc3NtZW50cyBhbmQgdGVzdHMgZXhjbHVkaW5nIFNldmVyZSBEZWh5ZHJhdGlvbiI6CiAgICAiRW1DYXJlLkIuRy5ERTA1IgoKLyogCkRMLUctQ0wxLTIzLTMwIDogCiAgICAoIkRpYXJyaG9lYSIgPSB0cnVlKQogICAgIGFuZCAoKCAgICAoIkFnZSA+PSAyIG1vbnRocyB0byA8NjAgbW9udGhzIikKICAgICAgICAgYW5kICgoICAgICJVbmNvbnNjaW91cyIgPSB0cnVlIGFuZCAiU2tpbiBwaW5jaCBvZiBBYmRvbWVuIiA9ICJTa2luIFBpbmNoIGdvZXMgYmFjayBzbG93bHkgKDIgc2Vjb25kcyBvciBmZXdlciwgYnV0IG5vdCBpbW1lZGlhdGVseSkiKQogICAgICAgICBvciAoICAgICgiUmVzdGxlc3MgYW5kIElycml0YWJsZSIgPSB0cnVlIG9yICJTa2luIHBpbmNoIG9mIEFiZG9tZW4iID0gIlNraW4gUGluY2ggZ29lcyBiYWNrIHNsb3dseSAoMiBzZWNvbmRzIG9yIGZld2VyLCBidXQgbm90IGltbWVkaWF0ZWx5KSIgKSBhbmQgKCJPcmFsIEZsdWlkIFRlc3QgUmVzdWx0cyIgPSAiQ29tcGxldGVseSBVbmFibGUgdG8gRHJpbmsiIG9yICJPcmFsIEZsdWlkIFRlc3QgUmVzdWx0cyIgPSAiVm9taXRzIEltbWVkaWF0ZWx5IC8gRXZlcnl0aGluZyIgb3IgICJDb21wbGV0ZWx5IFVuYWJsZSB0byBEcmluayBvciBWb21pdHMgSW1tZWRpYXRlbHkgLyBFdmVyeXRoaW5nIj10cnVlKSkKICAgICAgICAgb3IgKCAgICAoVG9JbnRlZ2VyKCJVbmNvbnNjaW91cyBvciBMZXRoYXJnaWMiID0gdHJ1ZSkgKyBUb0ludGVnZXIoIlN1bmtlbiBFeWVzIiA9IHRydWUpICtUb0ludGVnZXIoIlNraW4gcGluY2ggb2YgQWJkb21lbiIgPSAiU2tpbiBQaW5jaCBnb2VzIGJhY2sgdmVyeSBzbG93bHkgKE1vcmUgdGhhbiAyIHNlY29uZHMpIiApK1RvSW50ZWdlciggIk9yYWwgRmx1aWQgVGVzdCBSZXN1bHRzIiA9ICJDb21wbGV0ZWx5IFVuYWJsZSB0byBkcmluayIgKStUb0ludGVnZXIoICAiT3JhbCBGbHVpZCBUZXN0IFJlc3VsdHMiID0gIlZvbWl0cyBJbW1lZGlhdGVseSAvIEV2ZXJ5dGhpbmciKSAgKyBUb0ludGVnZXIoICAiQ29tcGxldGVseSBVbmFibGUgdG8gRHJpbmsgb3IgVm9taXRzIEltbWVkaWF0ZWx5IC8gRXZlcnl0aGluZyI9dHJ1ZSApK1RvSW50ZWdlciggIk9yYWwgRmx1aWQgVGVzdCBSZXN1bHRzIiA9ICJEcmlua3MgUG9vcmx5IikgKT4xKSkpCiAgICAgb3IgKCAgICAoQWdlSW5Nb250aHMoKTwyKQogICAgICAgICBhbmQgKCggICAgKFRvSW50ZWdlcigiU3Vua2VuIEV5ZXMiPXRydWUpICsgIFRvSW50ZWdlcigiU2tpbiBQaW5jaCBvZiBBYmRvbWVuIiA9ICJTa2luIFBpbmNoIGdvZXMgYmFjayB2ZXJ5IHNsb3dseSAoTW9yZSB0aGFuIDIgc2Vjb25kcykiKSArIFRvSW50ZWdlcigiTW92ZW1lbnRzIiA9ICJNb3ZlbWVudCBvbmx5IHdoZW4gU3RpbXVsYXRlZCBidXQgdGhlbiBzdG9wcyIpICtUb0ludGVnZXIoIk1vdmVtZW50cyIgPSAiTm8gTW92ZW1lbnQgYXQgYWxsIikpPjEpCiAgICAgICAgIG9yICggICAgIlNraW4gUGluY2ggb2YgQWJkb21lbiIgPSAiU2tpbiBQaW5jaCBnb2VzIGJhY2sgdmVyeSBzbG93bHkgKE1vcmUgdGhhbiAyIHNlY29uZHMpIiBhbmQgKCJNb3ZlbWVudHMiID0gIk1vdmVtZW50IG9ubHkgd2hlbiBTdGltdWxhdGVkIGJ1dCB0aGVuIHN0b3BzIiAgb3IgIk1vdmVtZW50cyIgPSAiTm8gTW92ZW1lbnQgYXQgYWxsIiApKSkpKQoqLwpkZWZpbmUgIkRMLUctQ0wxLTIzLTMwIjoKICAgICAgICAoIk9CU2RlZmluZS5FbUNhcmUuQjIwUzEuREUwMSIgPSB0cnVlKQogICAgICAgICBhbmQgKCggICAgKCJBZ2UgPj0gMiBtb250aHMgdG8gPDYwIG1vbnRocyIpCiAgICAgICAgICAgICBhbmQgKCggICAgIk9CU2RlZmluZS5FbUNhcmUuQjcuREUwOCIgPSB0cnVlIGFuZCAiT0JTZGVmaW5lLkVtQ2FyZS5CMjBTMi5ERTAyIiA9IHZhbC4iU2tpbiBQaW5jaCBnb2VzIGJhY2sgc2xvd2x5ICgyIHNlY29uZHMgb3IgZmV3ZXIsIGJ1dCBub3QgaW1tZWRpYXRlbHkpIikKICAgICAgICAgICAgIG9yICggICAgKCJPQlNkZWZpbmUuRW1DYXJlLkIxMVMyLkRFMDYiID0gdHJ1ZSBvciAiT0JTZGVmaW5lLkVtQ2FyZS5CMjBTMi5ERTAyIiA9IHZhbC4iU2tpbiBQaW5jaCBnb2VzIGJhY2sgc2xvd2x5ICgyIHNlY29uZHMgb3IgZmV3ZXIsIGJ1dCBub3QgaW1tZWRpYXRlbHkpIiApIGFuZCAoIk9CU2RlZmluZS5FbUNhcmUuQjIyLkRFMDgiID0gdmFsLiJDb21wbGV0ZWx5IFVuYWJsZSB0byBEcmluayIgb3IgIk9CU2RlZmluZS5FbUNhcmUuQjIyLkRFMDgiID0gdmFsLiJWb21pdHMgSW1tZWRpYXRlbHkgLyBFdmVyeXRoaW5nIiBvciAgIk9CU2RlZmluZS5FbUNhcmUuQjIyLkRFMTRhIj10cnVlKSkKICAgICAgICAgICAgIG9yICggICAgKFRvSW50ZWdlcigiT0JTZGVmaW5lLkVtQ2FyZS5CNy5ERTA4YiIgPSB0cnVlKSArIFRvSW50ZWdlcigiT0JTZGVmaW5lLkVtQ2FyZS5CMjBTMi5ERTAxIiA9IHRydWUpICtUb0ludGVnZXIoIk9CU2RlZmluZS5FbUNhcmUuQjIwUzIuREUwMiIgPSB2YWwuIlNraW4gUGluY2ggZ29lcyBiYWNrIHZlcnkgc2xvd2x5IChNb3JlIHRoYW4gMiBzZWNvbmRzKSIgKStUb0ludGVnZXIoICJPQlNkZWZpbmUuRW1DYXJlLkIyMi5ERTA4IiA9ICJDb21wbGV0ZWx5IFVuYWJsZSB0byBkcmluayIgKStUb0ludGVnZXIoICAiT0JTZGVmaW5lLkVtQ2FyZS5CMjIuREUwOCIgPSB2YWwuIlZvbWl0cyBJbW1lZGlhdGVseSAvIEV2ZXJ5dGhpbmciKSAgKyBUb0ludGVnZXIoICAiT0JTZGVmaW5lLkVtQ2FyZS5CMjIuREUxNGEiPXRydWUgKStUb0ludGVnZXIoICJPQlNkZWZpbmUuRW1DYXJlLkIyMi5ERTA4IiA9IHZhbC4iRHJpbmtzIFBvb3JseSIpICk+MSkpKQogICAgICAgICBvciAoICAgIChBZ2VJbk1vbnRocygpPDIpCiAgICAgICAgICAgICBhbmQgKCggICAgKFRvSW50ZWdlcigiT0JTZGVmaW5lLkVtQ2FyZS5CMjBTMi5ERTAxIj10cnVlKSArICBUb0ludGVnZXIoIlNraW4gUGluY2ggb2YgQWJkb21lbiIgPSB2YWwuIlNraW4gUGluY2ggZ29lcyBiYWNrIHZlcnkgc2xvd2x5IChNb3JlIHRoYW4gMiBzZWNvbmRzKSIpICsgVG9JbnRlZ2VyKCJPQlNkZWZpbmUuRW1DYXJlLkIxOFMyLkRFMDgiID0gIk1vdmVtZW50IG9ubHkgd2hlbiBTdGltdWxhdGVkIGJ1dCB0aGVuIHN0b3BzIikgK1RvSW50ZWdlcigiT0JTZGVmaW5lLkVtQ2FyZS5CMThTMi5ERTA4IiA9ICJObyBNb3ZlbWVudCBhdCBhbGwiKSk+MSkKICAgICAgICAgICAgIG9yICggICAgIlNraW4gUGluY2ggb2YgQWJkb21lbiIgPSB2YWwuIlNraW4gUGluY2ggZ29lcyBiYWNrIHZlcnkgc2xvd2x5IChNb3JlIHRoYW4gMiBzZWNvbmRzKSIgYW5kICgiT0JTZGVmaW5lLkVtQ2FyZS5CMThTMi5ERTA4IiA9ICJNb3ZlbWVudCBvbmx5IHdoZW4gU3RpbXVsYXRlZCBidXQgdGhlbiBzdG9wcyIgIG9yICJPQlNkZWZpbmUuRW1DYXJlLkIxOFMyLkRFMDgiID0gIk5vIE1vdmVtZW50IGF0IGFsbCIgKSkpKSkKCi8qIApTZXZlcmUgRGVoeWRyYXRpb24gOiBETC1HLUNMMS0yMy0zMApBbGlhcwoqLwpkZWZpbmUgIlNldmVyZSBEZWh5ZHJhdGlvbiI6CiAgICAiREwtRy1DTDEtMjMtMzAiCgovKiAKREwtRy1DTDEtMjQtMzIgOiAKICAgICgiRGlhcnJob2VhIiA9IHRydWUgYW5kICAiU2V2ZXJlIERlaHlkcmF0aW9uIiE9dHJ1ZSkKICAgICBhbmQgKCggICAgKFRvSW50ZWdlcigiUmVzdGxlc3MgYW5kIGlycml0YWJsZSIgPSB0cnVlKSArIFRvSW50ZWdlcigiU3Vua2VuIEV5ZXMiID0gdHJ1ZSkgKyBUb0ludGVnZXIoIlNraW4gUGluY2ggb2YgQWJkb21lbiIgPSAiU2tpbiBQaW5jaCBnb2VzIGJhY2sgc2xvd2x5ICgyIHNlY29uZHMgb3IgZmV3ZXIsIGJ1dCBub3QgaW1tZWRpYXRlbHkpIiApICsgVG9JbnRlZ2VyKCJPcmFsIEZsdWlkIFRlc3QgUmVzdWx0cyIgPSAiRHJpbmtzIEVhZ2VybHkgLyBUaGlyc3RpbHkiICkpPjEpCiAgICAgb3IgKCAgICAoIkFnZSA+PSAyIG1vbnRocyB0byA8NjAgbW9udGhzIikKICAgICAgICAgYW5kICgoICAgICJSZXN0bGVzcyBhbmQgSXJyaXRhYmxlIiA9IHRydWUgYW5kICgiT3JhbCBGbHVpZCBUZXN0IFJlc3VsdHMiID0gIkRyaW5rcyBwb29ybHkiIG9yICAiU2tpbiBQaW5jaCBvZiBBYmRvbWVuIiA9ICJTa2luIFBpbmNoIGdvZXMgYmFjayB2ZXJ5IHNsb3dseSAobW9yZSB0aGFuIDIgc2Vjb25kcykiICkpCiAgICAgICAgIG9yICggICAgKCJMZXRoYXJnaWMiID0gdHJ1ZSBvciAiT3JhbCBGbHVpZCBUZXN0IFJlc3VsdHMiID0gIkRyaW5rcyBwb29ybHkiKSBhbmQgKCJTa2luIFBpbmNoIG9mIEFiZG9tZW4iID0gIlNraW4gUGluY2ggZ29lcyBiYWNrIHNsb3dseSAoMiBzZWNvbmRzIG9yIGZld2VyLCBidXQgbm90IGltbWVkaWF0ZWx5KSIgKSkpKSkKKi8KZGVmaW5lICJETC1HLUNMMS0yNC0zMiI6CiAgICAgICAgKCJPQlNkZWZpbmUuRW1DYXJlLkIyMFMxLkRFMDEiID0gdHJ1ZSBhbmQgIENvYWxlc2NlKCJTZXZlcmUgRGVoeWRyYXRpb24iLGZhbHNlKSE9dHJ1ZSkKICAgICAgICAgYW5kICgoICAgIChUb0ludGVnZXIoIlJlc3RsZXNzIGFuZCBpcnJpdGFibGUiID0gdHJ1ZSkgKyBUb0ludGVnZXIoIk9CU2RlZmluZS5FbUNhcmUuQjIwUzIuREUwMSIgPSB0cnVlKSArIFRvSW50ZWdlcigiU2tpbiBQaW5jaCBvZiBBYmRvbWVuIiA9IHZhbC4iU2tpbiBQaW5jaCBnb2VzIGJhY2sgc2xvd2x5ICgyIHNlY29uZHMgb3IgZmV3ZXIsIGJ1dCBub3QgaW1tZWRpYXRlbHkpIiApICsgVG9JbnRlZ2VyKCJPQlNkZWZpbmUuRW1DYXJlLkIyMi5ERTA4IiA9IHZhbC4iRHJpbmtzIEVhZ2VybHkgLyBUaGlyc3RpbHkiICkpPjEpCiAgICAgICAgIG9yICggICAgKCJBZ2UgPj0gMiBtb250aHMgdG8gPDYwIG1vbnRocyIpCiAgICAgICAgICAgICBhbmQgKCggICAgIk9CU2RlZmluZS5FbUNhcmUuQjExUzIuREUwNiIgPSB0cnVlIGFuZCAoIk9CU2RlZmluZS5FbUNhcmUuQjIyLkRFMDgiID0gIkRyaW5rcyBwb29ybHkiIG9yICAiU2tpbiBQaW5jaCBvZiBBYmRvbWVuIiA9ICJTa2luIFBpbmNoIGdvZXMgYmFjayB2ZXJ5IHNsb3dseSAobW9yZSB0aGFuIDIgc2Vjb25kcykiICkpCiAgICAgICAgICAgICBvciAoICAgICgiT0JTZGVmaW5lLkVtQ2FyZS5CNy5ERTA4YSIgPSB0cnVlIG9yICJPQlNkZWZpbmUuRW1DYXJlLkIyMi5ERTA4IiA9ICJEcmlua3MgcG9vcmx5IikgYW5kICgiU2tpbiBQaW5jaCBvZiBBYmRvbWVuIiA9IHZhbC4iU2tpbiBQaW5jaCBnb2VzIGJhY2sgc2xvd2x5ICgyIHNlY29uZHMgb3IgZmV3ZXIsIGJ1dCBub3QgaW1tZWRpYXRlbHkpIiApKSkpKQoKLyogClNvbWUgRGVoeWRyYXRpb24gOiBETC1HLUNMMS0yNC0zMgpBbGlhcwoqLwpkZWZpbmUgIlNvbWUgRGVoeWRyYXRpb24iOgogICAgIkRMLUctQ0wxLTI0LTMyIgoKLyogClBTQkkgb3RoZXIgdGhhbiB0ZW1wZXJhdHVyZSA6IAogICAgKEFnZUluTW9udGhzKCk8MikKICAgICBhbmQgKCggICAgIkRpZmZpY3VsdHkgd2l0aCBGZWVkaW5nIiA9ICJOb3QgQWJsZSB0byBGZWVkIGF0IGFsbCIgb3IgIkRpZmZpY3VsdHkgd2l0aCBGZWVkaW5nIiA9ICJOb3QgRmVlZGluZyBXZWxsIiBvciAiQ29udnVsc2lvbihzKSBpbiB0aGlzIGlsbG5lc3MiID0gdHJ1ZSBvciAiU2V2ZXJlIENoZXN0IEluZHJhd2luZyIgPSB0cnVlICBvciAiTW92ZW1lbnRzIiA9ICJObyBtb3ZlbWVudCBhdCBhbGwiIG9yICJNb3ZlbWVudHMiID0gIk1vdmVtZW50IG9ubHkgd2hlbiBzdGltdWxhdGVkIGJ1dCB0aGVuIHN0b3BzIiBvciBBZ2VJbkRheXMoKSA8PSA3ICBhbmQgIkZhc3QgYnJlYXRoaW5nIiA9IHRydWUpKQoqLwpkZWZpbmUgIlBTQkkgb3RoZXIgdGhhbiB0ZW1wZXJhdHVyZSI6CiAgICAgICAgKEFnZUluTW9udGhzKCk8MikKICAgICAgICAgYW5kICgoICAgICJPQlNkZWZpbmUuRW1DYXJlLkIxOFMxLkRFMDIiID0gIk5vdCBBYmxlIHRvIEZlZWQgYXQgYWxsIiBvciAiT0JTZGVmaW5lLkVtQ2FyZS5CMThTMS5ERTAyIiA9IHZhbC4iTm90IEZlZWRpbmcgV2VsbCIgb3IgIkNvbnZ1bHNpb24ocykgaW4gdGhpcyBpbGxuZXNzIiA9IHRydWUgb3IgIk9CU2RlZmluZS5FbUNhcmUuQjE4UzIuREUwNyIgPSB0cnVlICBvciAiT0JTZGVmaW5lLkVtQ2FyZS5CMThTMi5ERTA4IiA9IHZhbC4iTm8gbW92ZW1lbnQgYXQgYWxsIiBvciAiT0JTZGVmaW5lLkVtQ2FyZS5CMThTMi5ERTA4IiA9IHZhbC4iTW92ZW1lbnQgb25seSB3aGVuIHN0aW11bGF0ZWQgYnV0IHRoZW4gc3RvcHMiIG9yIEFnZUluRGF5cygpIDw9IDcgIGFuZCAiRmFzdCBicmVhdGhpbmciID0gdHJ1ZSkpCgovKiAKUFNCSSA6IAogICAgKEFnZUluTW9udGhzKCk8MikKICAgICBhbmQgKCggICAgIlBTQkkgb3RoZXIgdGhhbiB0ZW1wZXJhdHVyZSIgPSB0cnVlIG9yICgiVGhlcm1vbWV0ZXIgbm90IGF2YWlsYWJsZSIgPSB0cnVlIGFuZCAiSG90IHRvIFRvdWNoIiA9IHRydWUpKQogICAgIG9yICggICAgKCJNZWFzdXJlZCBUZW1wZXJhdHVyZSIgPSAiSGlnaCIgb3IgIk1lYXN1cmVkIFRlbXBlcmF0dXJlIiA9ICJMb3ciKQogICAgICAgICBhbmQgKCggICAgIk1lYXN1cmVkIFRlbXBlcmF0dXJlIChzZWNvbmQgbWVhc3VyZW1lbnQpIiA9ICJIaWdoIiBvciAiTWVhc3VyZWQgVGVtcGVyYXR1cmUgKHNlY29uZCBtZWFzdXJlbWVudCkiID0gIkxvdyIgb3IgIlNlY29uZCBUZW1wZXJhdHVyZSBNZWFzdXJlbWVudCBOb3QgRmVhc2libGUiID0gdHJ1ZSkpKSkKKi8KZGVmaW5lICJQU0JJIjoKICAgICAgICAoQWdlSW5Nb250aHMoKTwyKQogICAgICAgICBhbmQgKCggICAgIlBTQkkgb3RoZXIgdGhhbiB0ZW1wZXJhdHVyZSIgPSB0cnVlIG9yICgiT0JTZGVmaW5lLkVtQ2FyZS5CNi5ERTA0IiA9IHRydWUgYW5kICJPQlNkZWZpbmUuRW1DYXJlLkI2LkRFMDUiID0gdHJ1ZSkpCiAgICAgICAgIG9yICggICAgKCJPQlNkZWZpbmUuRW1DYXJlLkI2LkRFMDFBIiA9IHZhbC4iSGlnaCIgb3IgIk9CU2RlZmluZS5FbUNhcmUuQjYuREUwMUEiID0gdmFsLiJMb3ciKQogICAgICAgICAgICAgYW5kICgoICAgICJPQlNkZWZpbmUuRW1DYXJlLkIyMi5ERTUwIiA9IHZhbC4iSGlnaCIgb3IgIk9CU2RlZmluZS5FbUNhcmUuQjIyLkRFNTAiID0gdmFsLiJMb3ciIG9yICJPQlNkZWZpbmUuRW1DYXJlLkIyMi5ERTQ2IiA9IHRydWUpKSkpCgovKiAKWUkgc2V2ZXJlIGNsYXNzaWZpY2F0aW9uIG90aGVyIHRoYW4gc2V2ZXJlIGRlaHlkcmF0aW9uIDogCiAgICAoQWdlSW5Nb250aHMoKTwyKQogICAgIGFuZCAoKCAgICAiUFNCSSIgPSB0cnVlCiAgICAgICAgb3IKICAgICAgICAiWWVsbG93IFBhbG1zIG9yIFllbGxvdyBTb2xlcyIgPSB0cnVlIG9yICgiWWVsbG93IFNraW4iID0gdHJ1ZSBhbmQgIkFnZSA8MjQgaG91cnMiKSBvciAoIlllbGxvdyBTa2luIiA9IHRydWUgYW5kICJBZ2UgID49IDI0IGhvdXJzIiBhbmQgQWdlSW5EYXlzKCkgPCAyMSAgYW5kICJXaGVuIGRpZCB0aGUgSmF1bmRpY2UgZmlyc3QgYXBwZWFyPyIgPSAiV2l0aGluIGxlc3MgdGhhbiAyNCBob3VycyBvZiBiaXJ0aCIpCiAgICAgICAgb3IKICAgICAgICAiRGlhcnJob2VhIiA9IHRydWUgYW5kICgoIlJlc3RsZXNzIGFuZCBJcnJpdGFibGUiID0gIlllcyIgYW5kICJTa2luIFBpbmNoIG9mIEFiZG9tZW4iID0gIlNraW4gUGluY2ggZ29lcyBiYWNrIHZlcnkgc2xvd2x5IChNb3JlIHRoYW4gMiBzZWNvbmRzKSIpIG9yICgiU3Vua2VuIEV5ZXMiID0gIlllcyIgYW5kICJTa2luIFBpbmNoIG9mIEFiZG9tZW4iID0gIlNraW4gUGluY2ggZ29lcyBiYWNrIHZlcnkgc2xvd2x5IChNb3JlIHRoYW4gMiBzZWNvbmRzKSIpKQogICAgICAgIG9yCiAgICAgICAgIldlaWdodCBTdGF0dXMiID0gIlZlcnkgTG93IFdlaWdodCBmb3IgQWdlIikpCiovCmRlZmluZSAiWUkgc2V2ZXJlIGNsYXNzaWZpY2F0aW9uIG90aGVyIHRoYW4gc2V2ZXJlIGRlaHlkcmF0aW9uIjoKICAgICAgICAoQWdlSW5Nb250aHMoKTwyKQogICAgICAgICBhbmQgKCggICAgIlBTQkkiID0gdHJ1ZQogICAgICAgICAgICBvcgogICAgICAgICAgICAiT0JTZGVmaW5lLkVtQ2FyZS5CMTlTMi5ERTAyIiA9IHRydWUgb3IgKCJPQlNkZWZpbmUuRW1DYXJlLkIxOVMyLkRFMDEiID0gdHJ1ZSBhbmQgIkFnZSA8MjQgaG91cnMiKSBvciAoIk9CU2RlZmluZS5FbUNhcmUuQjE5UzIuREUwMSIgPSB0cnVlIGFuZCAiQWdlICA+PSAyNCBob3VycyIgYW5kIEFnZUluRGF5cygpIDwgMjEgIGFuZCAiT0JTZGVmaW5lLkVtQ2FyZS5CMTlTMi5ERTA0IiA9IHZhbC4iV2l0aGluIGxlc3MgdGhhbiAyNCBob3VycyBvZiBiaXJ0aCIpCiAgICAgICAgICAgIG9yCiAgICAgICAgICAgICJPQlNkZWZpbmUuRW1DYXJlLkIyMFMxLkRFMDEiID0gdHJ1ZSBhbmQgKCgiT0JTZGVmaW5lLkVtQ2FyZS5CMTFTMi5ERTA2IiA9IHRydWUgYW5kICJTa2luIFBpbmNoIG9mIEFiZG9tZW4iID0gdmFsLiJTa2luIFBpbmNoIGdvZXMgYmFjayB2ZXJ5IHNsb3dseSAoTW9yZSB0aGFuIDIgc2Vjb25kcykiKSBvciAoIk9CU2RlZmluZS5FbUNhcmUuQjIwUzIuREUwMSIgPSB0cnVlIGFuZCAiU2tpbiBQaW5jaCBvZiBBYmRvbWVuIiA9IHZhbC4iU2tpbiBQaW5jaCBnb2VzIGJhY2sgdmVyeSBzbG93bHkgKE1vcmUgdGhhbiAyIHNlY29uZHMpIikpCiAgICAgICAgICAgIG9yCiAgICAgICAgICAgICJPQlNkZWZpbmUuRW1DYXJlLkIyMVMyLkRFMDEiID0gdmFsLiJWZXJ5IExvdyBXZWlnaHQgZm9yIEFnZSIpKQoKLyogCllJIHNldmVyZSBjbGFzc2lmaWNhdGlvbiA6IAogICAgKEFnZUluTW9udGhzKCk8MikKICAgICBhbmQgKCggICAgIlBTQkkiID0gdHJ1ZQogICAgICAgIG9yCiAgICAgICAgIlllbGxvdyBQYWxtcyBvciBZZWxsb3cgU29sZXMiID0gdHJ1ZSBvciAoIlllbGxvdyBTa2luIiA9IHRydWUgYW5kICJBZ2UgPDI0IGhvdXJzIikgb3IgKCJZZWxsb3cgU2tpbiIgPSB0cnVlIGFuZCAiQWdlICA+PSAyNCBob3VycyIgYW5kIEFnZUluRGF5cygpIDwgMjEgIGFuZCAiV2hlbiBkaWQgdGhlIEphdW5kaWNlIGZpcnN0IGFwcGVhcj8iID0gIldpdGhpbiBsZXNzIHRoYW4gMjQgaG91cnMgb2YgYmlydGgiKQogICAgICAgIG9yCiAgICAgICAgIkRpYXJyaG9lYSIgPSB0cnVlIGFuZCAoKCJSZXN0bGVzcyBhbmQgSXJyaXRhYmxlIiA9ICJZZXMiIGFuZCAiU2tpbiBQaW5jaCBvZiBBYmRvbWVuIiA9ICJTa2luIFBpbmNoIGdvZXMgYmFjayB2ZXJ5IHNsb3dseSAoTW9yZSB0aGFuIDIgc2Vjb25kcykiKSBvciAoIlN1bmtlbiBFeWVzIiA9ICJZZXMiIGFuZCAiU2tpbiBQaW5jaCBvZiBBYmRvbWVuIiA9ICJTa2luIFBpbmNoIGdvZXMgYmFjayB2ZXJ5IHNsb3dseSAoTW9yZSB0aGFuIDIgc2Vjb25kcykiKSkKICAgICAgICBvcgogICAgICAgICJXZWlnaHQgU3RhdHVzIiA9ICJWZXJ5IExvdyBXZWlnaHQgZm9yIEFnZSIpKQoqLwpkZWZpbmUgIllJIHNldmVyZSBjbGFzc2lmaWNhdGlvbiI6CiAgICAgICAgKEFnZUluTW9udGhzKCk8MikKICAgICAgICAgYW5kICgoICAgICJQU0JJIiA9IHRydWUKICAgICAgICAgICAgb3IKICAgICAgICAgICAgIk9CU2RlZmluZS5FbUNhcmUuQjE5UzIuREUwMiIgPSB0cnVlIG9yICgiT0JTZGVmaW5lLkVtQ2FyZS5CMTlTMi5ERTAxIiA9IHRydWUgYW5kICJBZ2UgPDI0IGhvdXJzIikgb3IgKCJPQlNkZWZpbmUuRW1DYXJlLkIxOVMyLkRFMDEiID0gdHJ1ZSBhbmQgIkFnZSAgPj0gMjQgaG91cnMiIGFuZCBBZ2VJbkRheXMoKSA8IDIxICBhbmQgIk9CU2RlZmluZS5FbUNhcmUuQjE5UzIuREUwNCIgPSB2YWwuIldpdGhpbiBsZXNzIHRoYW4gMjQgaG91cnMgb2YgYmlydGgiKQogICAgICAgICAgICBvcgogICAgICAgICAgICAiT0JTZGVmaW5lLkVtQ2FyZS5CMjBTMS5ERTAxIiA9IHRydWUgYW5kICgoIk9CU2RlZmluZS5FbUNhcmUuQjExUzIuREUwNiIgPSB0cnVlIGFuZCAiU2tpbiBQaW5jaCBvZiBBYmRvbWVuIiA9IHZhbC4iU2tpbiBQaW5jaCBnb2VzIGJhY2sgdmVyeSBzbG93bHkgKE1vcmUgdGhhbiAyIHNlY29uZHMpIikgb3IgKCJPQlNkZWZpbmUuRW1DYXJlLkIyMFMyLkRFMDEiID0gdHJ1ZSBhbmQgIlNraW4gUGluY2ggb2YgQWJkb21lbiIgPSB2YWwuIlNraW4gUGluY2ggZ29lcyBiYWNrIHZlcnkgc2xvd2x5IChNb3JlIHRoYW4gMiBzZWNvbmRzKSIpKQogICAgICAgICAgICBvcgogICAgICAgICAgICAiT0JTZGVmaW5lLkVtQ2FyZS5CMjFTMi5ERTAxIiA9IHZhbC4iVmVyeSBMb3cgV2VpZ2h0IGZvciBBZ2UiKSkKCi8qIApFbUNhcmUuQjEyUzEuREUwMSA6IAoiTWVhc3VyZWQgdGVtcGVyYXR1cmUiID0gIkhpZ2giIG9yICJNZWFzdXJlZCB0ZW1wZXJhdHVyZSIgPSAiVmVyeSBIaWdoIiBvciAgIkhvdCB0byBUb3VjaCIgPSB0cnVlIG9yICAiRmV2ZXIgUmVwb3J0ZWQiID0gdHJ1ZQoqLwpkZWZpbmUgIkVtQ2FyZS5CMTJTMS5ERTAxIjoKICAgICJNZWFzdXJlZCB0ZW1wZXJhdHVyZSIgPSB2YWwuIkhpZ2giIG9yICJNZWFzdXJlZCB0ZW1wZXJhdHVyZSIgPSB2YWwuIlZlcnkgSGlnaCIgb3IgICJPQlNkZWZpbmUuRW1DYXJlLkI2LkRFMDUiID0gdHJ1ZSBvciAgIk9CU2RlZmluZS5FbUNhcmUuQjEyUzEuREUwMiIgPSB0cnVlCgovKiAKRmV2ZXIgOiBFbUNhcmUuQjEyUzEuREUwMQpBbGlhcwoqLwpkZWZpbmUgIkZldmVyIjoKICAgICJFbUNhcmUuQjEyUzEuREUwMSIKCi8qIApTZXZlcmUgQWN1dGUgTWFsbnV0cml0aW9uIDogCiAgICAoImNoaWxkIiBhbmQgKCJXZWlnaHQgZm9yIEhlaWdodCAoV0ZIKSBaIFNjb3JlcyIgPSA8IC0zIG9yICJXZWlnaHQgZm9yIExlbmd0aCAoV0ZMKSBaIFNjb3JlcyIgPSA8IC0zKSkKICAgICBhbmQgKCggICAgQWdlSW5Nb250aHMoKT49IDYgYW5kICBBZ2VJbk1vbnRocygpPDYwIGFuZCAiTVVBQyAoTWlkIFVwcGVyIEFybSBDaXJjdW1mZXJlbmNlKSIgPSA8MTE1ICdtbScpCiAgICAgb3IgKCAgICBBZ2VJbk1vbnRocygpPj0gNiBhbmQgIEFnZUluTW9udGhzKCk8MTIgYW5kICJXZWlnaHQgZm9yIEFnZSAoV0ZBKSBaIFNjb3JlcyIgPSA8IC0zKSkKKi8KZGVmaW5lICJTZXZlcmUgQWN1dGUgTWFsbnV0cml0aW9uIjoKICAgICAgICAoImNoaWxkIiBhbmQgKCJXZWlnaHQgZm9yIEhlaWdodCAoV0ZIKSBaIFNjb3JlcyIgPSA8IC0zIG9yICJXZWlnaHQgZm9yIExlbmd0aCAoV0ZMKSBaIFNjb3JlcyIgPSA8IC0zKSkKICAgICAgICAgYW5kICgoICAgIEFnZUluTW9udGhzKCk+PSA2IGFuZCAgQWdlSW5Nb250aHMoKTw2MCBhbmQgIk9CU2RlZmluZS5FbUNhcmUuQjYuREUxNyIgPSA8MTE1ICdtbScpCiAgICAgICAgIG9yICggICAgQWdlSW5Nb250aHMoKT49IDYgYW5kICBBZ2VJbk1vbnRocygpPDEyIGFuZCAiT0JTZGVmaW5lLkVtQ2FyZS5CNi5ERTE2IiA9IDwgLTMpKQoKLyogClNldmVyZSBBY3V0ZSBNYWxudXRyaXRpb24gOiBTZXZlcmUgQWN1dGUgTWFsbnV0cml0aW9uCkFsaWFzCiovCmRlZmluZSAiU2V2ZXJlIEFjdXRlIE1hbG51dHJpdGlvbiI6CiAgICAiU2V2ZXJlIEFjdXRlIE1hbG51dHJpdGlvbiIKCi8qIApUaGUgY2xpZW50IGlzIHJlcG9ydGVkIHRvIGJlIHZvbWl0aW5nIDogCiJWb21pdGluZyIgIT0gIk5vIFZvbWl0aW5nIgoqLwpkZWZpbmUgIlRoZSBjbGllbnQgaXMgcmVwb3J0ZWQgdG8gYmUgdm9taXRpbmciOgogICAgIk9CU2RlZmluZS5FbUNhcmUuQjcuREUxMCIgIT0gdmFsLiJObyBWb21pdGluZyIK"
        }
    ]
}