{
    "resourceType": "Library",
    "id": "emcareobservationvalueset",
    "url": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcareobservationvalueset",
    "version": "0.0.1.build.186",
    "name": "emcareobservationValueset",
    "status": "active",
    "type": {
        "coding": [
            {
                "system": "http://hl7.org/fhir/ValueSet/library-type",
                "code": "logic-library"
            }
        ]
    },
    "relatedArtifact": [
        {
            "type": "depends-on",
            "resource": "http://fhir.org/guides/who/anc-cds/Library/FHIRHelpers"
        }
    ],
    "content": [
        {
            "id": "ig-loader-emcareobservationValueset.cql",
            "contentType": "text/cql",
            "data": ""
        }
    ]
}