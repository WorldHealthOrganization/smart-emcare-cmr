{
    "resourceType": "Library",
    "id": "emcareobservationvalueset",
    "url": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcareobservationvalueset",
    "version": "0.0.142",
    "name": "emcareobservationValueset",
    "status": "active",
    "type": {
        "coding": [
            {
                "system": "http://hl7.org/fhir/ValueSet/library-type",
                "code": "logic-library"
            }
        ]
    },
    "relatedArtifact": [
        {
            "type": "depends-on",
            "resource": "http://fhir.org/guides/who/anc-cds/Library/FHIRHelpers"
        }
    ],
    "content": [
        {
            "id": "ig-loader-emcareobservationValueset.cql",
            "contentType": "text/cql",
            "data": "LyoKQGF1dGhvcjogUGF0cmljayBEZWxjcm9peApAZGVzY3JpcHRpb246IFRoaXMgbGlicmFyeSBpcyBwYXJ0IG9mIHRoZSBwcm9qZWN0IEVtQ2FyZQoqLwpsaWJyYXJ5IGVtY2FyZW9ic2VydmF0aW9uVmFsdWVzZXQgdmVyc2lvbiAnMC4wLjE0MicKdXNpbmcgRkhJUiB2ZXJzaW9uICc0LjAuMScKaW5jbHVkZSBGSElSSGVscGVycyB2ZXJzaW9uICc0LjAuMScgY2FsbGVkIEZISVJIZWxwZXJzIAoKCgoKY29kZXN5c3RlbSAiRW1DYXJlIiA6ICdodHRwczovL2ZoaXIuZGsuc3dpc3N0cGgtbWlzLmNoL21hdGNoYm94L2ZoaXIvQ29kZVN5c3RlbS9lbWNhcmUtY3VzdG9tLWNvZGVzJwoKCmNvZGUgIk5vIFBhaW4iOiAnRW1DYXJlLkIxMlMxLkRFMDknIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnTm8gUGFpbicKY29kZSAiSm9pbnQgb3IgQm9uZSBQYWluIjogJ0VtQ2FyZS5CMTJTMS5ERTEwJyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ0pvaW50IG9yIEJvbmUgUGFpbicKY29kZSAiUGFpbiBvciBEaWZmaWN1bHR5IFBhc3NpbmcgVXJpbmUgb3IgQ3J5aW5nIHdoZW4gUGFzc2luZyBVcmluZSI6ICdFbUNhcmUuQjEyUzEuREUxMScgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdQYWluIG9yIERpZmZpY3VsdHkgUGFzc2luZyBVcmluZSBvciBDcnlpbmcgd2hlbiBQYXNzaW5nIFVyaW5lJwpjb2RlICJTa2luIFBhaW4iOiAnRW1DYXJlLkIxMlMxLkRFMTInIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnU2tpbiBQYWluJwpjb2RlICJFYXIgUGFpbiI6ICdFbUNhcmUuQjEyUzEuREUxMycgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdFYXIgUGFpbicKY29kZSAiT3RoZXIiOiAnRW1DYXJlLkIxMlMxLkRFMTQnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnT3RoZXInCmNvZGUgIkdlbmVyYWxpc2VkIFNraW4gUHJvYmxlbSI6ICdFbUNhcmUuQjE0UzIuREUwNycgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdHZW5lcmFsaXNlZCBTa2luIFByb2JsZW0nCmNvZGUgIkxvY2FsaXNlZCBTa2luIFByb2JsZW0iOiAnRW1DYXJlLkIxNFMyLkRFMDgnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnTG9jYWxpc2VkIFNraW4gUHJvYmxlbScKY29kZSAiTm8gUHJvYmxlbSI6ICdFbUNhcmUuQjE0UzIuREUwOScgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdObyBQcm9ibGVtJwpjb2RlICJBYnNjZXNzIC0gSG90IFRlbmRlciBTd2VsbGluZyI6ICdFbUNhcmUuQjE0UzIuREUxNCcgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdBYnNjZXNzIC0gSG90IFRlbmRlciBTd2VsbGluZycKY29kZSAiRGVlcCBvciBleHRlbmRzIHRvIG11c2NsZSI6ICdFbUNhcmUuQjE0UzIuREUxNScgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdEZWVwIG9yIGV4dGVuZHMgdG8gbXVzY2xlJwpjb2RlICJDZWxsdWxpdGlzIC0gUmVkIFRlbmRlciBTa2luIjogJ0VtQ2FyZS5CMTRTMi5ERTE2JyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ0NlbGx1bGl0aXMgLSBSZWQgVGVuZGVyIFNraW4nCmNvZGUgIlBhcHVsYXIgSXRjaGluZyBSYXNoIChQcnVyaWdvKSAtIEl0Y2hpbmcgcmFzaCB3aXRoIHNtYWxsIHBhcHVsZXMgYW5kIHNjcmF0Y2ggbWFya3MuIERhcmsgc3BvdHMgd2l0aCBwYWxlIGNlbnRyZSI6ICdFbUNhcmUuQjE0UzIuREUxOCcgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdQYXB1bGFyIEl0Y2hpbmcgUmFzaCAoUHJ1cmlnbykgLSBJdGNoaW5nIHJhc2ggd2l0aCBzbWFsbCBwYXB1bGVzIGFuZCBzY3JhdGNoIG1hcmtzLiBEYXJrIHNwb3RzIHdpdGggcGFsZSBjZW50cmUnCmNvZGUgIlJpbmd3b3JtIChUaW5lYSkgLSBBbiBpdGNoeSBjaXJjdWxhciBsZXNpb24gd2l0aCBhIHJhaXNlZCBlZGdlIGFuZCBmaW5lIHNjYWx5IGFyZWEgaW4gdGhlIGNlbnRyZSB3aXRoIGxvc3Mgb2YgaGFpci4gIE1heSBhbHNvIGJlIGZvdW5kIG9uIGJvZHkgb3Igd2ViIG9uIGZlZXQiOiAnRW1DYXJlLkIxNFMyLkRFMTknIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnUmluZ3dvcm0gKFRpbmVhKSAtIEFuIGl0Y2h5IGNpcmN1bGFyIGxlc2lvbiB3aXRoIGEgcmFpc2VkIGVkZ2UgYW5kIGZpbmUgc2NhbHkgYXJlYSBpbiB0aGUgY2VudHJlIHdpdGggbG9zcyBvZiBoYWlyLiAgTWF5IGFsc28gYmUgZm91bmQgb24gYm9keSBvciB3ZWIgb24gZmVldCcKY29kZSAiU2NhYmllcyAtIFJhc2ggYW5kIGV4Y29yaWF0aW9ucyBvbiB0b3JzbzsgYnVycm93cyBpbiB3ZWIgc3BhY2UgYW5kIHdyaXN0cywgZmFjZSBzcGFyZWQiOiAnRW1DYXJlLkIxNFMyLkRFMjEnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnU2NhYmllcyAtIFJhc2ggYW5kIGV4Y29yaWF0aW9ucyBvbiB0b3JzbzsgYnVycm93cyBpbiB3ZWIgc3BhY2UgYW5kIHdyaXN0cywgZmFjZSBzcGFyZWQnCmNvZGUgIkNoaWNrZW5wb3ggLSBWZXNpY2xlcyBvdmVyIGJvZHkuICBWZXNpY2xlcyBhcHBlYXIgcHJvZ3Jlc3NpdmVseSBvdmVyIGRheXMgYW5kIGZvcm0gc2NhYnMgYWZ0ZXIgdGhleSBydXB0dXJlIjogJ0VtQ2FyZS5CMTRTMi5ERTIyJyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ0NoaWNrZW5wb3ggLSBWZXNpY2xlcyBvdmVyIGJvZHkuICBWZXNpY2xlcyBhcHBlYXIgcHJvZ3Jlc3NpdmVseSBvdmVyIGRheXMgYW5kIGZvcm0gc2NhYnMgYWZ0ZXIgdGhleSBydXB0dXJlJwpjb2RlICJIZXJwZXMgWm9zdGVyIC0gIFZlc2ljbGVzIGluIG9uZSBhcmVhIG9uIG9uZSBzaWRlIG9mIGJvZHkgd2l0aCBpbnRlbnNlIHBhaW4gb3Igc2NhcnMgcGx1cyBzaG9vdGluZyBwYWluLiAgClVuY29tbW9uIGluIGNoaWxkcmVuIGV4Y2VwdCB3aGVyZSB0aGV5IGFyZSBpbW11bm8tY29tcHJvbWlzZWQgKGUuZy4gaWYgaW5mZWN0ZWQgd2l0aCBISVYpIjogJ0VtQ2FyZS5CMTRTMi5ERTIzJyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ0hlcnBlcyBab3N0ZXIgLSAgVmVzaWNsZXMgaW4gb25lIGFyZWEgb24gb25lIHNpZGUgb2YgYm9keSB3aXRoIGludGVuc2UgcGFpbiBvciBzY2FycyBwbHVzIHNob290aW5nIHBhaW4uICAKVW5jb21tb24gaW4gY2hpbGRyZW4gZXhjZXB0IHdoZXJlIHRoZXkgYXJlIGltbXVuby1jb21wcm9taXNlZCAoZS5nLiBpZiBpbmZlY3RlZCB3aXRoIEhJViknCmNvZGUgIkltcGV0aWdvIG9yIEZvbGxpY3VsaXRpcyAtIFJlZCwgVGVuZGVyLCBXYXJtIENydXN0cyBvciBTbWFsbCBsZXNpb25zIjogJ0VtQ2FyZS5CMTRTMi5ERTI1JyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ0ltcGV0aWdvIG9yIEZvbGxpY3VsaXRpcyAtIFJlZCwgVGVuZGVyLCBXYXJtIENydXN0cyBvciBTbWFsbCBsZXNpb25zJwpjb2RlICJNb2xsdXNjdW0gQ29udGFnaW9zdW0gLSBTa2luIGNvbG91cmVkIHBlYXJseSB3aGl0ZSBwYXB1bGVzIHdpdGggY2VudHJhbCB1bWJpbGljYXRpb24uIE1vc3QgY29tbW9ubHkgc2VlbiBvbiBmYWNlIGFuZCB0cnVuayBpbiBjaGlsZHJlbi4iOiAnRW1DYXJlLkIxNFMyLkRFMzEnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnTW9sbHVzY3VtIENvbnRhZ2lvc3VtIC0gU2tpbiBjb2xvdXJlZCBwZWFybHkgd2hpdGUgcGFwdWxlcyB3aXRoIGNlbnRyYWwgdW1iaWxpY2F0aW9uLiBNb3N0IGNvbW1vbmx5IHNlZW4gb24gZmFjZSBhbmQgdHJ1bmsgaW4gY2hpbGRyZW4uJwpjb2RlICJXYXJ0cyAtIFBhcHVsZXMgb3Igbm9kdWxlcyB3aXRoIGEgcm91Z2ggKFZlcnJ1Y291cykgc3VyZmFjZSI6ICdFbUNhcmUuQjE0UzIuREUzMicgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdXYXJ0cyAtIFBhcHVsZXMgb3Igbm9kdWxlcyB3aXRoIGEgcm91Z2ggKFZlcnJ1Y291cykgc3VyZmFjZScKY29kZSAiU2Vib3JyaG9lYSAtIEdyZWFzeSBzY2FsZXMgYW5kIHJlZG5lc3Mgb24gY2VudHJhbCBmYWNlIGFuZCBib2R5IGZvbGRzIjogJ0VtQ2FyZS5CMTRTMi5ERTMzJyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ1NlYm9ycmhvZWEgLSBHcmVhc3kgc2NhbGVzIGFuZCByZWRuZXNzIG9uIGNlbnRyYWwgZmFjZSBhbmQgYm9keSBmb2xkcycKY29kZSAiRml4ZWQgRHJ1ZyBSZWFjdGlvbnMgLSBHZW5lcmFsaXNlZCByZWQsIHdpZGUgc3ByZWFkIHdpdGggc21hbGwgYnVtcHMgb3IgYmxpc3RlcnM7IG9yIG9uZSBvciBtb3JlIGRhcmsgc2tpbiBhcmVhcyI6ICdFbUNhcmUuQjE0UzIuREUzNScgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdGaXhlZCBEcnVnIFJlYWN0aW9ucyAtIEdlbmVyYWxpc2VkIHJlZCwgd2lkZSBzcHJlYWQgd2l0aCBzbWFsbCBidW1wcyBvciBibGlzdGVyczsgb3Igb25lIG9yIG1vcmUgZGFyayBza2luIGFyZWFzJwpjb2RlICJFY3plbWEgLSBXZXQgb296aW5nIHNvcmVzIG9yIGV4Y29yaWF0ZWQsIHRoaWNrIHBhdGNoZXMiOiAnRW1DYXJlLkIxNFMyLkRFMzYnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnRWN6ZW1hIC0gV2V0IG9vemluZyBzb3JlcyBvciBleGNvcmlhdGVkLCB0aGljayBwYXRjaGVzJwpjb2RlICJTdGV2ZW4gSm9obnNvbiBTeW5kcm9tZSAoU0pTKSI6ICdFbUNhcmUuQjE0UzIuREUzNycgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdTdGV2ZW4gSm9obnNvbiBTeW5kcm9tZSAoU0pTKScKY29kZSAiU2tpbiBMZXNpb25zID49IDQgY20iOiAnRW1DYXJlLkIxNFMyLkRFMjcnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnU2tpbiBMZXNpb25zID49IDQgY20nCmNvZGUgIlJlZCBTa2luIFN0cmVha3MiOiAnRW1DYXJlLkIxNFMyLkRFMjgnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnUmVkIFNraW4gU3RyZWFrcycKY29kZSAiVGVuZGVyIE5vZGVzIChOb2R1bGVzKSB1bmRlciB0aGUgc2tpbiI6ICdFbUNhcmUuQjE0UzIuREUyOScgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdUZW5kZXIgTm9kZXMgKE5vZHVsZXMpIHVuZGVyIHRoZSBza2luJwpjb2RlICJTa2luIEluZmVjdGlvbiBleHRlbmRzIHRvIG11c2NsZSI6ICdFbUNhcmUuQjE0UzIuREUzMCcgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdTa2luIEluZmVjdGlvbiBleHRlbmRzIHRvIG11c2NsZScKY29kZSAiTm8gc2lnbnMgb2Ygc2V2ZXJlIEltcGV0aWdvIC8gRm9sbGljdWxpdGlzIjogJ0VtQ2FyZS5CMTRTMi5ERTMwYScgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdObyBzaWducyBvZiBzZXZlcmUgSW1wZXRpZ28gLyBGb2xsaWN1bGl0aXMnCmNvZGUgIlNraW4gUHJvYmxlbSI6ICdFbUNhcmUuQjE0UzIuREU0NCcgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdTa2luIFByb2JsZW0nCmNvZGUgIk9yYWwgU29yZXMgb3IgTW91dGggVWxjZXJzIjogJ0VtQ2FyZS5CMTRTMi5ERTQ1JyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ09yYWwgU29yZXMgb3IgTW91dGggVWxjZXJzJwpjb2RlICJFeWUgUHJvYmxlbSI6ICdFbUNhcmUuQjE0UzIuREU0NicgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdFeWUgUHJvYmxlbScKY29kZSAiTm8gLSBEbyBub3QgYWRkIGEgU2tpbiBvciBNb3V0aCBvciBFeWUgUHJvYmxlbSI6ICdFbUNhcmUuQjE0UzIuREU0NycgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdObyAtIERvIG5vdCBhZGQgYSBTa2luIG9yIE1vdXRoIG9yIEV5ZSBQcm9ibGVtJwpjb2RlICJCcmVhc3RtaWxrIGFsc28gZ2l2ZW4iOiAnRW1DYXJlLkIyMVMyLkRFMjgnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnQnJlYXN0bWlsayBhbHNvIGdpdmVuJwpjb2RlICJObyBCcmVhc3RtaWxrIGF0IGFsbCI6ICdFbUNhcmUuQjIxUzIuREUyOScgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdObyBCcmVhc3RtaWxrIGF0IGFsbCcKY29kZSAiSW5hcHByb3ByaWF0ZSByZXBsYWNlbWVudCBtaWxrIjogJ0VtQ2FyZS5CMjFTMi5ERTExJyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ0luYXBwcm9wcmlhdGUgcmVwbGFjZW1lbnQgbWlsaycKY29kZSAiQXBwcm9wcmlhdGUgcmVwbGFjZW1lbnQgbWlsayI6ICdFbUNhcmUuQjIxUzIuREUxMCcgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdBcHByb3ByaWF0ZSByZXBsYWNlbWVudCBtaWxrJwpjb2RlICJDaGVzdCBJbmRyYXdpbmcgKHBvc3QgaW5oYWxlZCBicm9uY2hvZGlsYXRvciB0cmlhbCkiOiAnRW1DYXJlLkIyMi5ERTE4JyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ0NoZXN0IEluZHJhd2luZyAocG9zdCBpbmhhbGVkIGJyb25jaG9kaWxhdG9yIHRyaWFsKScKY29kZSAiUmVzcGlyYXRvcnkgUmF0ZSAocG9zdCBpbmhhbGVkIGJyb25jaG9kaWxhdG9yIHRyaWFsKSI6ICdFbUNhcmUuQjIyLkRFMTknIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnUmVzcGlyYXRvcnkgUmF0ZSAocG9zdCBpbmhhbGVkIGJyb25jaG9kaWxhdG9yIHRyaWFsKScKY29kZSAiRmFzdCBCcmVhdGhpbmcgKHBvc3QgaW5oYWxlZCBicm9uY2hvZGlsYXRvciB0cmlhbCkiOiAnRW1DYXJlLkIyMi5ERTIwJyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ0Zhc3QgQnJlYXRoaW5nIChwb3N0IGluaGFsZWQgYnJvbmNob2RpbGF0b3IgdHJpYWwpJwpjb2RlICJObyBGYXN0IEJyZWF0aGluZyBhbmQgTm8gQ2hlc3QgSW5kcmF3aW5nIChwb3N0IEluaGFsZWQgQnJvbmNob2RpbGF0b3IgVHJpYWwpIjogJ0VtQ2FyZS5CMjIuREUyMScgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdObyBGYXN0IEJyZWF0aGluZyBhbmQgTm8gQ2hlc3QgSW5kcmF3aW5nIChwb3N0IEluaGFsZWQgQnJvbmNob2RpbGF0b3IgVHJpYWwpJwpjb2RlICJJbmhhbGVkIEJyb25jaG9kaWxhdG9yIFRyaWFsIE5vdCBGZWFzaWJsZSBvciBBdmFpbGFibGUiOiAnRW1DYXJlLkIyMi5ERTIyJyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ0luaGFsZWQgQnJvbmNob2RpbGF0b3IgVHJpYWwgTm90IEZlYXNpYmxlIG9yIEF2YWlsYWJsZScKY29kZSAiTGVzcyB0aGFuIDEgbW9udGggYWdvIjogJ0VtQ2FyZS5CMTcuREUwMicgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdMZXNzIHRoYW4gMSBtb250aCBhZ28nCmNvZGUgIjEgdG8gNSBtb250aHMgYWdvIjogJ0VtQ2FyZS5CMTcuREUwMmEnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnMSB0byA1IG1vbnRocyBhZ28nCmNvZGUgIk1vcmUgdGhhbiA2IG1vbnRocyBhZ28iOiAnRW1DYXJlLkIxNy5ERTAyYicgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdNb3JlIHRoYW4gNiBtb250aHMgYWdvJwpjb2RlICJWaXRhbWluIEEgU3VwcGxlbWVudGF0aW9uIG5vdCBwcmV2aW91c2x5IGdpdmVuIjogJ0VtQ2FyZS5CMTcuREUwMmMnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnVml0YW1pbiBBIFN1cHBsZW1lbnRhdGlvbiBub3QgcHJldmlvdXNseSBnaXZlbicKY29kZSAiRGF0ZSBVbmtub3duIjogJ0VtQ2FyZS5CMTcuREUwMycgZnJvbSAiRW1DYXJlIiBkaXNwbGF5ICdEYXRlIFVua25vd24nCmNvZGUgIkRld29ybWluZyB0cmVhdG1lbnQgbm90IHByZXZpb3VzbHkgZ2l2ZW4iOiAnRW1DYXJlLkIxNy5ERTEzJyBmcm9tICJFbUNhcmUiIGRpc3BsYXkgJ0Rld29ybWluZyB0cmVhdG1lbnQgbm90IHByZXZpb3VzbHkgZ2l2ZW4nCmNvZGUgIkRhdGUgdW5rbm93biI6ICdFbUNhcmUuQjE3LkRFMTQnIGZyb20gIkVtQ2FyZSIgZGlzcGxheSAnRGF0ZSB1bmtub3duJwo="
        },
        {
            "id": "ig-loader-emcareobservationValueset.eml",
            "contentType": "application/elm+json",
            "data": ""
        }
    ]
}