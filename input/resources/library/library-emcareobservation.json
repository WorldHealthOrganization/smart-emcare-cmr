{
    "resourceType": "Library",
    "id": "emcareobservation",
    "url": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcareobservation",
    "version": "0.0.142",
    "name": "emcareobservation",
    "status": "active",
    "type": {
        "coding": [
            {
                "system": "http://hl7.org/fhir/ValueSet/library-type",
                "code": "logic-library"
            }
        ]
    },
    "relatedArtifact": [
        {
            "type": "depends-on",
            "resource": "http://fhir.org/guides/who/anc-cds/Library/FHIRHelpers"
        }
    ],
    "content": [
        {
            "id": "ig-loader-emcareobservation.cql",
            "contentType": "text/cql",
            "data": "/*
@author: Patrick Delcroix
@description: This library is part of the project EmCare
*/
library emcareobservation version '0.0.142'
using FHIR version '4.0.1'
include FHIRHelpers version '4.0.1' called FHIRHelpers 




codesystem "EmCare" : 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/CodeSystem/emcare-custom-codes'


code "Is the child sick today?": 'EmCare.B3.DE05' from "EmCare" display 'Is the child sick today?'
code "Obstructed or Absent Breathing": 'EmCare.B7.DE01' from "EmCare" display 'Obstructed or Absent Breathing'
code "Convulsing Now": 'EmCare.B7.DE02' from "EmCare" display 'Convulsing Now'
code "Continue to Assess Sick Child": 'EmCare.B7-B8-B9.DE01' from "EmCare" display 'Continue to Assess Sick Child'
code "Convulsion(s) in this Illness": 'EmCare.B7.DE03' from "EmCare" display 'Convulsion(s) in this Illness'
code "Unconscious or Lethargic": 'EmCare.B7.DE08b' from "EmCare" display 'Unconscious or Lethargic'
code "Unconscious": 'EmCare.B7.DE08' from "EmCare" display 'Unconscious'
code "Lethargic": 'EmCare.B7.DE08a' from "EmCare" display 'Lethargic'
code "Not able to drink or breastfeed": 'EmCare.B7.DE09' from "EmCare" display 'Not able to drink or breastfeed'
code "Vomiting": 'EmCare.B7.DE10' from "EmCare" display 'Vomiting'
code "Axillary Temperature (degrees Celcius)": 'EmCare.B6.DE01' from "EmCare" display 'Axillary Temperature (degrees Celcius)'
code "Prefer to take Rectal Temperature": 'EmCare.B6.DE02' from "EmCare" display 'Prefer to take Rectal Temperature'
code "Rectal Temperature (degrees Celcius)": 'EmCare.B6.DE03' from "EmCare" display 'Rectal Temperature (degrees Celcius)'
code "Thermometer not available": 'EmCare.B6.DE04' from "EmCare" display 'Thermometer not available'
code "Hot to Touch": 'EmCare.B6.DE05' from "EmCare" display 'Hot to Touch'
code "Temperature on touch": 'EmCare.B6.DE05A' from "EmCare" display 'Temperature on touch'
code "Measured Temperature": 'EmCare.B6.DE01A' from "EmCare" display 'Measured Temperature'
code "Weight (kilograms)": 'EmCare.B6.DE06' from "EmCare" display 'Weight (kilograms)'
code "Weight cannot be measured": 'EmCare.B6.DE07' from "EmCare" display 'Weight cannot be measured'
code "Estimated Weight": 'EmCare.B6.DE08' from "EmCare" display 'Estimated Weight'
code "Height": 'EmCare.B6.DE09' from "EmCare" display 'Height'
code "Height cannot be measured": 'EmCare.B6.DE11' from "EmCare" display 'Height cannot be measured'
code "Length": 'EmCare.B6.DE12' from "EmCare" display 'Length'
code "Length cannot be measured": 'EmCare.B6.DE13' from "EmCare" display 'Length cannot be measured'
code "Weight for Height (WFH) Z Scores": 'EmCare.B6.DE14' from "EmCare" display 'Weight for Height (WFH) Z Scores'
code "Weight for Length (WFL) Z Scores": 'EmCare.B6.DE15' from "EmCare" display 'Weight for Length (WFL) Z Scores'
code "Weight for Age (WFA) Z Scores": 'EmCare.B6.DE16' from "EmCare" display 'Weight for Age (WFA) Z Scores'
code "Reason for not measuring weight": 'EmCare.B6.DE23' from "EmCare" display 'Reason for not measuring weight'
code "MUAC (Mid Upper Arm Circumference)": 'EmCare.B6.DE17' from "EmCare" display 'MUAC (Mid Upper Arm Circumference)'
code "MUAC cannot be measured": 'EmCare.B6.DE17a' from "EmCare" display 'MUAC cannot be measured'
code "Reason for not measuring MUAC": 'EmCare.B6.DE28' from "EmCare" display 'Reason for not measuring MUAC'
code "Visually assess for whether underweight (for drug dose calculation)": 'EmCare.B6.DE18' from "EmCare" display 'Visually assess for whether underweight (for drug dose calculation)'
code "Growth curve break in weight": 'EmCare.B6.DE24' from "EmCare" display 'Growth curve break in weight'
code "Difficulty with Feeding": 'EmCare.B18S1.DE02' from "EmCare" display 'Difficulty with Feeding'
code "Fever Reported": 'EmCare.B12S1.DE02' from "EmCare" display 'Fever Reported'
code "Diarrhoea": 'EmCare.B20S1.DE01' from "EmCare" display 'Diarrhoea'
code "Blood in stool": 'EmCare.B20S1.DE02' from "EmCare" display 'Blood in stool'
code "Breastfed": 'EmCare.B21S1.DE06' from "EmCare" display 'Breastfed'
code "Maternal fever within the week prior to delivery, intrapartum or in the week after delivery": 'EmCare.B22S1.DE01' from "EmCare" display 'Maternal fever within the week prior to delivery, intrapartum or in the week after delivery'
code "History of prolonged rupture of membrane > 18 hours (PROM) during childbirth": 'EmCare.B22S1.DE02' from "EmCare" display 'History of prolonged rupture of membrane > 18 hours (PROM) during childbirth'
code "History of preterm premature rupture of membranes <37 weeks gestation (PPROM) during childbirth": 'EmCare.B22S1.DE03' from "EmCare" display 'History of preterm premature rupture of membranes <37 weeks gestation (PPROM) during childbirth'
code "History of foul smelling or fetid meconium or amniotic fluid during childbirth": 'EmCare.B22S1.DE04' from "EmCare" display 'History of foul smelling or fetid meconium or amniotic fluid during childbirth'
code "Maternal malaria test results in the week prior to delivery, intrapartum or in the week after delivery": 'EmCare.B22S1.DE05' from "EmCare" display 'Maternal malaria test results in the week prior to delivery, intrapartum or in the week after delivery'
code "History of maternal genital infection in the week prior to delivery, intrapartum or in the week after delivery": 'EmCare.B22S1.DE10' from "EmCare" display 'History of maternal genital infection in the week prior to delivery, intrapartum or in the week after delivery'
code "Severe Chest Indrawing": 'EmCare.B18S2.DE07' from "EmCare" display 'Severe Chest Indrawing'
code "Infant's Movements": 'EmCare.B18S2.DE08' from "EmCare" display 'Infant\'s Movements'
code "Umbilicus Red or Pus Draining": 'EmCare.B18S2.DE12' from "EmCare" display 'Umbilicus Red or Pus Draining'
code "Umbilical redness gaining skin or oozing pus": 'EmCare.B18S2.DE17' from "EmCare" display 'Umbilical redness gaining skin or oozing pus'
code "Skin Pustules": 'EmCare.B18S2.DE13' from "EmCare" display 'Skin Pustules'
code "Bulging fontanelle": 'EmCare.B18S2.DE14' from "EmCare" display 'Bulging fontanelle'
code "Flaring nostrils": 'EmCare.B18S2.DE15' from "EmCare" display 'Flaring nostrils'
code "Purelent discharge from the eye(s)": 'EmCare.B18S2.DE18' from "EmCare" display 'Purelent discharge from the eye(s)'
code "Yellow Skin or yellow eyes": 'EmCare.B19S2.DE01' from "EmCare" display 'Yellow Skin or yellow eyes'
code "Yellow Palms or Yellow Soles": 'EmCare.B19S2.DE02' from "EmCare" display 'Yellow Palms or Yellow Soles'
code "When did the Jaundice first appear?": 'EmCare.B19S2.DE04' from "EmCare" display 'When did the Jaundice first appear?'
code "Sunken Eyes": 'EmCare.B20S2.DE01' from "EmCare" display 'Sunken Eyes'
code "Skin Pinch of Abdomen": 'EmCare.B20S2.DE02' from "EmCare" display 'Skin Pinch of Abdomen'
code "Restless and Irritable": 'EmCare.B11S2.DE06' from "EmCare" display 'Restless and Irritable'
code "Weight Status": 'EmCare.B21S2.DE01' from "EmCare" display 'Weight Status'
code "Breastfed how many times in 24 hours?": 'EmCare.B21S2.DE05' from "EmCare" display 'Breastfed how many times in 24 hours?'
code "Sufficient feeds": 'EmCare.B21S2.DE06' from "EmCare" display 'Sufficient feeds'
code "Insufficient feeds": 'EmCare.B21S2.DE07' from "EmCare" display 'Insufficient feeds'
code "Young Infant receives food or fluids other than breast milk": 'EmCare.B21S2.DE08' from "EmCare" display 'Young Infant receives food or fluids other than breast milk'
code "What milk is being given as a replacement feed?": 'EmCare.B21S2.DE09' from "EmCare" display 'What milk is being given as a replacement feed?'
code "How many replacement feeds during the day and night (24 hours)?": 'EmCare.B21S2.DE12' from "EmCare" display 'How many replacement feeds during the day and night (24 hours)?'
code "Sufficient replacement feeds (in 24 hours)": 'EmCare.B21S2.DE13' from "EmCare" display 'Sufficient replacement feeds (in 24 hours)'
code "Insufficient replacement feeds (in 24 hours)": 'EmCare.B21S2.DE14' from "EmCare" display 'Insufficient replacement feeds (in 24 hours)'
code "How much milk is given at each feed?": 'EmCare.B21S2.DE15' from "EmCare" display 'How much milk is given at each feed?'
code "How is the milk prepared?": 'EmCare.B21S2.DE18' from "EmCare" display 'How is the milk prepared?'
code "How are the feeding utensils cleaned?": 'EmCare.B21S2.DE24' from "EmCare" display 'How are the feeding utensils cleaned?'
code "Is infant given any breast milk at all?": 'EmCare.B21S2.DE27' from "EmCare" display 'Is infant given any breast milk at all?'
code "Ulcers or White Patches in Mouth": 'EmCare.B21S2.DE30' from "EmCare" display 'Ulcers or White Patches in Mouth'
code "Unable to check if Ulcers or White Patches in Mouth": 'EmCare.B21S2.DE31' from "EmCare" display 'Unable to check if Ulcers or White Patches in Mouth'
code "Birth weight (gm)": 'EmCare.B22S1.DE32' from "EmCare" display 'Birth weight (gm)'
code "Birth weight (gm) is unknown": 'EmCare.B22S1.DE33' from "EmCare" display 'Birth weight (gm) is unknown'
code "Cough": 'EmCare.B10S1.DE05' from "EmCare" display 'Cough'
code "Cough for how long?": 'EmCare.B10S1.DE06' from "EmCare" display 'Cough for how long?'
code "Difficulty Breathing": 'EmCare.B10S1.DE01' from "EmCare" display 'Difficulty Breathing'
code "Difficulty breathing for how long?": 'EmCare.B10S1.DE02' from "EmCare" display 'Difficulty breathing for how long?'
code "One or more episodes of pneumonia in past two months": 'EmCare.B10S1.DE05xx' from "EmCare" display 'One or more episodes of pneumonia in past two months'
code "Diarrhoea for how long?": 'EmCare.B11S1.DE02' from "EmCare" display 'Diarrhoea for how long?'
code "Blood in the stool in this Illness": 'EmCare.B11S1.DE05' from "EmCare" display 'Blood in the stool in this Illness'
code "Recent history of weight loss": 'EmCare.B11S1.DE06' from "EmCare" display 'Recent history of weight loss'
code "Eyelids more retracted than before": 'EmCare.B11S1.DE07' from "EmCare" display 'Eyelids more retracted than before'
code "Two or more episodes of diarrhea in the past 2 months": 'EmCare.B11S1.DE08' from "EmCare" display 'Two or more episodes of diarrhea in the past 2 months'
code "Fever for how long?": 'EmCare.B12S1.DE03' from "EmCare" display 'Fever for how long?'
code "Has Fever been present every day for more than 7 days": 'EmCare.B12S1.DE06' from "EmCare" display 'Has Fever been present every day for more than 7 days'
code "Pain": 'EmCare.B12S1.DE08' from "EmCare" display 'Pain'
code "Ear Problem": 'EmCare.B13S1.DE01' from "EmCare" display 'Ear Problem'
code "Ear Pain": 'EmCare.B13S1.DE02' from "EmCare" display 'Ear Pain'
code "Ear Discharge": 'EmCare.B13S1.DE03' from "EmCare" display 'Ear Discharge'
code "Ear Discharge for how long?": 'EmCare.B13S1.DE04' from "EmCare" display 'Ear Discharge for how long?'
code "Eye Problem": 'EmCare.B14S1.DE01' from "EmCare" display 'Eye Problem'
code "Skin Problem": 'EmCare.B14S1.DE02' from "EmCare" display 'Skin Problem'
code "Itchy Skin": 'EmCare.B14S1.DE03' from "EmCare" display 'Itchy Skin'
code "Sickle cell disease": 'EmCare.B15S1.DE01' from "EmCare" display 'Sickle cell disease'
code "Chest Indrawing": 'EmCare.B10S2.DE03' from "EmCare" display 'Chest Indrawing'
code "Stridor in a calm child": 'EmCare.B10S2.DE04' from "EmCare" display 'Stridor in a calm child'
code "Wheezing": 'EmCare.B10S2.DE05' from "EmCare" display 'Wheezing'
code "Duration of wheezing": 'EmCare.B10S2.DE05A' from "EmCare" display 'Duration of wheezing'
code "Wheezing before this illness?": 'EmCare.B10S2.DE05D' from "EmCare" display 'Wheezing before this illness?'
code "Frequent cough at night": 'EmCare.B10S2.DE05E' from "EmCare" display 'Frequent cough at night'
code "Child known to have asthma": 'EmCare.B10S2.DE05F' from "EmCare" display 'Child known to have asthma'
code "Oxygen Saturation": 'EmCare.B10S2.DE07' from "EmCare" display 'Oxygen Saturation'
code "Sunken eyes": 'EmCare.B11S2.DE01' from "EmCare" display 'Sunken eyes'
code "Yellow eyes": 'EmCare.B12S2.DE06' from "EmCare" display 'Yellow eyes'
code "Abnormal Bleeding": 'EmCare.B12S2.DE07' from "EmCare" display 'Abnormal Bleeding'
code "Coca-Cola urine": 'EmCare.B12S2.DE08' from "EmCare" display 'Coca-Cola urine'
code "Tender swelling behind the ear": 'EmCare.B13S2.DE01' from "EmCare" display 'Tender swelling behind the ear'
code "Pus Seen Draining from the Ear": 'EmCare.B13S2.DE02' from "EmCare" display 'Pus Seen Draining from the Ear'
code "Pus Seen Draining from the Ear for how long?": 'EmCare.B13S2.DE03' from "EmCare" display 'Pus Seen Draining from the Ear for how long?'
code "Stiff neck": 'EmCare.B12S2.DE01' from "EmCare" display 'Stiff neck'
code "Refusal to use a limb": 'EmCare.B12S2.DE02' from "EmCare" display 'Refusal to use a limb'
code "Warm Tender or Swollen Joint or Bone": 'EmCare.B12S2.DE03' from "EmCare" display 'Warm Tender or Swollen Joint or Bone'
code "Runny nose": 'EmCare.B12S2.DE05' from "EmCare" display 'Runny nose'
code "Large lymph nodes on two or more sites": 'EmCare.B13S2.DE06' from "EmCare" display 'Large lymph nodes on two or more sites'
code "Red eyes": 'EmCare.B14S2.DE01' from "EmCare" display 'Red eyes'
code "Pus Draining from Eye": 'EmCare.B14S2.DE02' from "EmCare" display 'Pus Draining from Eye'
code "Clouding of the Cornea": 'EmCare.B14S2.DE03' from "EmCare" display 'Clouding of the Cornea'
code "Is Clouding of the Cornea a new problem": 'EmCare.B14S2.DE04' from "EmCare" display 'Is Clouding of the Cornea a new problem'
code "Has Clouding of the Cornea previously been treated": 'EmCare.B14S2.DE05' from "EmCare" display 'Has Clouding of the Cornea previously been treated'
code "Generalised or Localised Skin Problem": 'EmCare.B14S2.DE06' from "EmCare" display 'Generalised or Localised Skin Problem'
code "Measles Rash": 'EmCare.B14S2.DE10' from "EmCare" display 'Measles Rash'
code "Measles within the last 3 months": 'EmCare.B14S2.DE11' from "EmCare" display 'Measles within the last 3 months'
code "Blisters, Sores or Pustules": 'EmCare.B14S2.DE12' from "EmCare" display 'Blisters, Sores or Pustules'
code "Type of Skin Problem": 'EmCare.B14S2.DE13' from "EmCare" display 'Type of Skin Problem'
code "Rapidly spreading, extensive, or not responding to oral antibiotics": 'EmCare.B14S2.DE17' from "EmCare" display 'Rapidly spreading, extensive, or not responding to oral antibiotics'
code "Scalp Infection (tinea capitis)": 'EmCare.B14S2.DE19a' from "EmCare" display 'Scalp Infection (tinea capitis)'
code "Severe rash": 'EmCare.B14S2.DE22A' from "EmCare" display 'Severe rash'
code "Disseminated Herpes Zoster": 'EmCare.B14S2.DE23a' from "EmCare" display 'Disseminated Herpes Zoster'
code "Eye Involvement": 'EmCare.B14S2.DE24' from "EmCare" display 'Eye Involvement'
code "Signs of Severe Impetigo / Folliculitis": 'EmCare.B14S2.DE26' from "EmCare" display 'Signs of Severe Impetigo / Folliculitis'
code "Extensive impetigo lesions": 'EmCare.B14S2.DE30b' from "EmCare" display 'Extensive impetigo lesions'
code "Extensive molluscum lesions": 'EmCare.B14S2.DE31a' from "EmCare" display 'Extensive molluscum lesions'
code "Molluscum lesions close to the eye": 'EmCare.B14S2.DE31b' from "EmCare" display 'Molluscum lesions close to the eye'
code "Extensive warts": 'EmCare.B14S2.DE32a' from "EmCare" display 'Extensive warts'
code "Severe Seborrhoea": 'EmCare.B14S2.DE34' from "EmCare" display 'Severe Seborrhoea'
code "Secondary bacterial infection of eczema": 'EmCare.B14S2.DE36a' from "EmCare" display 'Secondary bacterial infection of eczema'
code "Severe acute moist or weeping eczema": 'EmCare.B14S2.DE36b' from "EmCare" display 'Severe acute moist or weeping eczema'
code "Secondary herpes infection of eczema (eczema herpeticum)": 'EmCare.B14S2.DE36c' from "EmCare" display 'Secondary herpes infection of eczema (eczema herpeticum)'
code "Oral sores or Mouth Ulcers": 'EmCare.B14S2.DE38' from "EmCare" display 'Oral sores or Mouth Ulcers'
code "Add a Skin or Mouth or Eye Problem": 'EmCare.B14S2.DE43' from "EmCare" display 'Add a Skin or Mouth or Eye Problem'
code "Palmar Pallor": 'EmCare.B15S2.DE01' from "EmCare" display 'Palmar Pallor'
code "Oedema of both feet": 'EmCare.B16S2.DE01' from "EmCare" display 'Oedema of both feet'
code "Open skin lesions": 'EmCare.B16S2.DE02' from "EmCare" display 'Open skin lesions'
code "Visible and severe weight loss": 'EmCare.B16S2.DE03' from "EmCare" display 'Visible and severe weight loss'
code "Mumps/parotitis: Swelling around cheek/jaw": 'EmCare.B17S1.DE01' from "EmCare" display 'Mumps/parotitis: Swelling around cheek/jaw'
code "Duration of Mumps": 'EmCare.B17S1.DE02' from "EmCare" display 'Duration of Mumps'
code "Date of Last Vitamin A Supplementation": 'EmCare.B17.DE01' from "EmCare" display 'Date of Last Vitamin A Supplementation'
code "Can record of Vitamin A Supplementation be obtained at a future visit?": 'EmCare.B17.DE05' from "EmCare" display 'Can record of Vitamin A Supplementation be obtained at a future visit?'
code "Treatment for malnutrition containing Vitamin A received in the past month?": 'EmCare.B17.DE11' from "EmCare" display 'Treatment for malnutrition containing Vitamin A received in the past month?'
code "Date of last deworming treatment": 'EmCare.B17.DE12' from "EmCare" display 'Date of last deworming treatment'
code "Can record of Deworming treatment be obtained at a future visit?": 'EmCare.B17.DE16' from "EmCare" display 'Can record of Deworming treatment be obtained at a future visit?'
code "Mother viral hepatitis B test result": 'EmCare.B17.DE62' from "EmCare" display 'Mother viral hepatitis B test result'
code "Infant vaccinated for viral hepatitis B": 'EmCare.B17.DE67' from "EmCare" display 'Infant vaccinated for viral hepatitis B'
code "HIV Prevalence": 'EmCare.B17.DE22' from "EmCare" display 'HIV Prevalence'
code "Child followed up at PMTCT for HIV investigation or management": 'EmCare.B17.DE44A' from "EmCare" display 'Child followed up at PMTCT for HIV investigation or management'
code "PMTCT HIV Status": 'EmCare.B17.DE44D' from "EmCare" display 'PMTCT HIV Status'
code "Household member with Tuberculosis in the past 5 years": 'EmCare.B17.DE44G' from "EmCare" display 'Household member with Tuberculosis in the past 5 years'
code "Mother's HIV Status": 'EmCare.B17.DE25' from "EmCare" display 'Mother\'s HIV Status'
code "Child's Last HIV Test Results": 'EmCare.B17.DE30' from "EmCare" display 'Child\'s Last HIV Test Results'
code "Child breastfed at the time or 6 weeks before HIV test": 'EmCare.B17.DE37' from "EmCare" display 'Child breastfed at the time or 6 weeks before HIV test'
code "Child 18 months or older when last tested for HIV": 'EmCare.B17.DE41' from "EmCare" display 'Child 18 months or older when last tested for HIV'
code "Check the child’s vaccination record: has the child received all vaccines they are eligible for": 'EmCare.B17.DE45' from "EmCare" display 'Check the child’s vaccination record: has the child received all vaccines they are eligible for'
code "Immunizations for Age": 'EmCare.B17.DE50' from "EmCare" display 'Immunizations for Age'
code "Oral Fluid Test Results": 'EmCare.B22.DE08' from "EmCare" display 'Oral Fluid Test Results'
code "Unable to Perform Oral Fluid Test": 'EmCare.B22.DE14' from "EmCare" display 'Unable to Perform Oral Fluid Test'
code "Completely Unable to Drink or Vomits Immediately / Everything": 'EmCare.B22.DE14a' from "EmCare" display 'Completely Unable to Drink or Vomits Immediately / Everything'
code "Has the Child had anything to drink today?": 'EmCare.B22.DE15' from "EmCare" display 'Has the Child had anything to drink today?'
code "How did the child last drink": 'EmCare.B22.DE16' from "EmCare" display 'How did the child last drink'
code "Respiratory Rate (breaths per minute)": 'EmCare.B22.DE01' from "EmCare" display 'Respiratory Rate (breaths per minute)'
code "Unable to perform Respiratory Rate at this time": 'EmCare.B22.DE02' from "EmCare" display 'Unable to perform Respiratory Rate at this time'
code "Respiratory Rate Second Count (breaths per minute)": 'EmCare.B22.DE04' from "EmCare" display 'Respiratory Rate Second Count (breaths per minute)'
code "Respiratory Rate Second Count Not Possible": 'EmCare.B22.DE05' from "EmCare" display 'Respiratory Rate Second Count Not Possible'
code "Fast Breathing": 'EmCare.B22.DE07' from "EmCare" display 'Fast Breathing'
code "Inhaled Bronchodilator Trial Results": 'EmCare.B22.DE17' from "EmCare" display 'Inhaled Bronchodilator Trial Results'
code "Inhaled Bronchodilator Trial Not Feasible or Available": 'EmCare.B22.DE22' from "EmCare" display 'Inhaled Bronchodilator Trial Not Feasible or Available'
code "No Fast Breathing and No Chest Indrawing (post Inhaled Bronchodilator Trial)": 'EmCare.B22.DE21' from "EmCare" display 'No Fast Breathing and No Chest Indrawing (post Inhaled Bronchodilator Trial)'
code "Poor positioning": 'EmCare.B24.G.DE28' from "EmCare" display 'Poor positioning'
code "Good Attachment": 'EmCare.B24.G.DE34' from "EmCare" display 'Good Attachment'
code "Sucking Effectively": 'EmCare.B24.G.DE35' from "EmCare" display 'Sucking Effectively'
code "Difficulty Breastfeeding Observed": 'EmCare.B24.G.DE37' from "EmCare" display 'Difficulty Breastfeeding Observed'
code "Breastfeeding Assessment Not Possible": 'EmCare.B24.G.DE38' from "EmCare" display 'Breastfeeding Assessment Not Possible'
code "Appetite Test (using RUTF) Results": 'EmCare.B24.G.DE23' from "EmCare" display 'Appetite Test (using RUTF) Results'
code "Hemoglobin (Hb) g/dL": 'EmCare.B22.DE81' from "EmCare" display 'Hemoglobin (Hb) g/dL'
code "Hemoglobin Test Not Available": 'EmCare.B22.DE82' from "EmCare" display 'Hemoglobin Test Not Available'
code "Axillary Temperature (second measurement, degrees Celcius)": 'EmCare.B22.DE47' from "EmCare" display 'Axillary Temperature (second measurement, degrees Celcius)'
code "Prefer to take Rectal Temperature (second measurement)": 'EmCare.B24.G.DE40' from "EmCare" display 'Prefer to take Rectal Temperature (second measurement)'
code "Rectal Temperature (second measurement)": 'EmCare.B24.G.DE41' from "EmCare" display 'Rectal Temperature (second measurement)'
code "Second Temperature Measurement Not Feasible": 'EmCare.B22.DE46' from "EmCare" display 'Second Temperature Measurement Not Feasible'
code "Measured Temperature (second measurement)": 'EmCare.B22.DE50' from "EmCare" display 'Measured Temperature (second measurement)'
code "Obvious cause of fever": 'EmCare.B22.DE52A' from "EmCare" display 'Obvious cause of fever'
code "Malaria test": 'EmCare.B24.DE07' from "EmCare" display 'Malaria test'
code "Microscopists expected to evaluate parasite density": 'EmCare.B.H.DE24' from "EmCare" display 'Microscopists expected to evaluate parasite density'
"
        },
        {
            "id": "ig-loader-emcareobservation.eml",
            "contentType": "application/elm+json",
            "data": "{
   "library" : {
      "annotation" : [ {
         "translatorVersion" : "2.10.0",
         "translatorOptions" : "EnableAnnotations,DisableListDemotion,DisableListPromotion",
         "type" : "CqlToElmInfo"
      }, {
         "type" : "Annotation",
         "t" : [ {
            "name" : "author",
            "value" : "Patrick Delcroix"
         }, {
            "name" : "description",
            "value" : "This library is part of the project EmCare"
         } ],
         "s" : {
            "r" : "391",
            "s" : [ {
               "value" : [ "/*\n@author: Patrick Delcroix\n@description: This library is part of the project EmCare\n*/\n","library emcareobservation version '0.0.142'" ]
            } ]
         }
      } ],
      "identifier" : {
         "id" : "emcareobservation",
         "version" : "0.0.142"
      },
      "schemaIdentifier" : {
         "id" : "urn:hl7-org:elm",
         "version" : "r1"
      },
      "usings" : {
         "def" : [ {
            "localIdentifier" : "System",
            "uri" : "urn:hl7-org:elm-types:r1"
         }, {
            "localId" : "1",
            "localIdentifier" : "FHIR",
            "uri" : "http://hl7.org/fhir",
            "version" : "4.0.1",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "1",
                  "s" : [ {
                     "value" : [ "","using " ]
                  }, {
                     "s" : [ {
                        "value" : [ "FHIR" ]
                     } ]
                  }, {
                     "value" : [ " version ","'4.0.1'" ]
                  } ]
               }
            } ]
         } ]
      },
      "includes" : {
         "def" : [ {
            "localId" : "2",
            "localIdentifier" : "FHIRHelpers",
            "path" : "FHIRHelpers",
            "version" : "4.0.1",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "2",
                  "s" : [ {
                     "value" : [ "","include " ]
                  }, {
                     "s" : [ {
                        "value" : [ "FHIRHelpers" ]
                     } ]
                  }, {
                     "value" : [ " version ","'4.0.1'"," called ","FHIRHelpers" ]
                  } ]
               }
            } ]
         } ]
      },
      "codeSystems" : {
         "def" : [ {
            "localId" : "3",
            "name" : "EmCare",
            "id" : "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/CodeSystem/emcare-custom-codes",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "3",
                  "s" : [ {
                     "value" : [ "","codesystem ","\"EmCare\""," : ","'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/CodeSystem/emcare-custom-codes'" ]
                  } ]
               }
            } ]
         } ]
      },
      "codes" : {
         "def" : [ {
            "localId" : "5",
            "name" : "Is the child sick today?",
            "id" : "EmCare.B3.DE05",
            "display" : "Is the child sick today?",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "5",
                  "s" : [ {
                     "value" : [ "","code ","\"Is the child sick today?\"",": ","'EmCare.B3.DE05'"," from " ]
                  }, {
                     "r" : "4",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Is the child sick today?'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "4",
               "name" : "EmCare"
            }
         }, {
            "localId" : "7",
            "name" : "Obstructed or Absent Breathing",
            "id" : "EmCare.B7.DE01",
            "display" : "Obstructed or Absent Breathing",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "7",
                  "s" : [ {
                     "value" : [ "","code ","\"Obstructed or Absent Breathing\"",": ","'EmCare.B7.DE01'"," from " ]
                  }, {
                     "r" : "6",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Obstructed or Absent Breathing'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "6",
               "name" : "EmCare"
            }
         }, {
            "localId" : "9",
            "name" : "Convulsing Now",
            "id" : "EmCare.B7.DE02",
            "display" : "Convulsing Now",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "9",
                  "s" : [ {
                     "value" : [ "","code ","\"Convulsing Now\"",": ","'EmCare.B7.DE02'"," from " ]
                  }, {
                     "r" : "8",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Convulsing Now'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "8",
               "name" : "EmCare"
            }
         }, {
            "localId" : "11",
            "name" : "Continue to Assess Sick Child",
            "id" : "EmCare.B7-B8-B9.DE01",
            "display" : "Continue to Assess Sick Child",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "11",
                  "s" : [ {
                     "value" : [ "","code ","\"Continue to Assess Sick Child\"",": ","'EmCare.B7-B8-B9.DE01'"," from " ]
                  }, {
                     "r" : "10",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Continue to Assess Sick Child'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "10",
               "name" : "EmCare"
            }
         }, {
            "localId" : "13",
            "name" : "Convulsion(s) in this Illness",
            "id" : "EmCare.B7.DE03",
            "display" : "Convulsion(s) in this Illness",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "13",
                  "s" : [ {
                     "value" : [ "","code ","\"Convulsion(s) in this Illness\"",": ","'EmCare.B7.DE03'"," from " ]
                  }, {
                     "r" : "12",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Convulsion(s) in this Illness'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "12",
               "name" : "EmCare"
            }
         }, {
            "localId" : "15",
            "name" : "Unconscious or Lethargic",
            "id" : "EmCare.B7.DE08b",
            "display" : "Unconscious or Lethargic",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "15",
                  "s" : [ {
                     "value" : [ "","code ","\"Unconscious or Lethargic\"",": ","'EmCare.B7.DE08b'"," from " ]
                  }, {
                     "r" : "14",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Unconscious or Lethargic'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "14",
               "name" : "EmCare"
            }
         }, {
            "localId" : "17",
            "name" : "Unconscious",
            "id" : "EmCare.B7.DE08",
            "display" : "Unconscious",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "17",
                  "s" : [ {
                     "value" : [ "","code ","\"Unconscious\"",": ","'EmCare.B7.DE08'"," from " ]
                  }, {
                     "r" : "16",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Unconscious'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "16",
               "name" : "EmCare"
            }
         }, {
            "localId" : "19",
            "name" : "Lethargic",
            "id" : "EmCare.B7.DE08a",
            "display" : "Lethargic",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "19",
                  "s" : [ {
                     "value" : [ "","code ","\"Lethargic\"",": ","'EmCare.B7.DE08a'"," from " ]
                  }, {
                     "r" : "18",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Lethargic'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "18",
               "name" : "EmCare"
            }
         }, {
            "localId" : "21",
            "name" : "Not able to drink or breastfeed",
            "id" : "EmCare.B7.DE09",
            "display" : "Not able to drink or breastfeed",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "21",
                  "s" : [ {
                     "value" : [ "","code ","\"Not able to drink or breastfeed\"",": ","'EmCare.B7.DE09'"," from " ]
                  }, {
                     "r" : "20",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Not able to drink or breastfeed'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "20",
               "name" : "EmCare"
            }
         }, {
            "localId" : "23",
            "name" : "Vomiting",
            "id" : "EmCare.B7.DE10",
            "display" : "Vomiting",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "23",
                  "s" : [ {
                     "value" : [ "","code ","\"Vomiting\"",": ","'EmCare.B7.DE10'"," from " ]
                  }, {
                     "r" : "22",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Vomiting'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "22",
               "name" : "EmCare"
            }
         }, {
            "localId" : "25",
            "name" : "Axillary Temperature (degrees Celcius)",
            "id" : "EmCare.B6.DE01",
            "display" : "Axillary Temperature (degrees Celcius)",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "25",
                  "s" : [ {
                     "value" : [ "","code ","\"Axillary Temperature (degrees Celcius)\"",": ","'EmCare.B6.DE01'"," from " ]
                  }, {
                     "r" : "24",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Axillary Temperature (degrees Celcius)'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "24",
               "name" : "EmCare"
            }
         }, {
            "localId" : "27",
            "name" : "Prefer to take Rectal Temperature",
            "id" : "EmCare.B6.DE02",
            "display" : "Prefer to take Rectal Temperature",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "27",
                  "s" : [ {
                     "value" : [ "","code ","\"Prefer to take Rectal Temperature\"",": ","'EmCare.B6.DE02'"," from " ]
                  }, {
                     "r" : "26",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Prefer to take Rectal Temperature'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "26",
               "name" : "EmCare"
            }
         }, {
            "localId" : "29",
            "name" : "Rectal Temperature (degrees Celcius)",
            "id" : "EmCare.B6.DE03",
            "display" : "Rectal Temperature (degrees Celcius)",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "29",
                  "s" : [ {
                     "value" : [ "","code ","\"Rectal Temperature (degrees Celcius)\"",": ","'EmCare.B6.DE03'"," from " ]
                  }, {
                     "r" : "28",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Rectal Temperature (degrees Celcius)'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "28",
               "name" : "EmCare"
            }
         }, {
            "localId" : "31",
            "name" : "Thermometer not available",
            "id" : "EmCare.B6.DE04",
            "display" : "Thermometer not available",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "31",
                  "s" : [ {
                     "value" : [ "","code ","\"Thermometer not available\"",": ","'EmCare.B6.DE04'"," from " ]
                  }, {
                     "r" : "30",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Thermometer not available'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "30",
               "name" : "EmCare"
            }
         }, {
            "localId" : "33",
            "name" : "Hot to Touch",
            "id" : "EmCare.B6.DE05",
            "display" : "Hot to Touch",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "33",
                  "s" : [ {
                     "value" : [ "","code ","\"Hot to Touch\"",": ","'EmCare.B6.DE05'"," from " ]
                  }, {
                     "r" : "32",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Hot to Touch'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "32",
               "name" : "EmCare"
            }
         }, {
            "localId" : "35",
            "name" : "Temperature on touch",
            "id" : "EmCare.B6.DE05A",
            "display" : "Temperature on touch",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "35",
                  "s" : [ {
                     "value" : [ "","code ","\"Temperature on touch\"",": ","'EmCare.B6.DE05A'"," from " ]
                  }, {
                     "r" : "34",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Temperature on touch'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "34",
               "name" : "EmCare"
            }
         }, {
            "localId" : "37",
            "name" : "Measured Temperature",
            "id" : "EmCare.B6.DE01A",
            "display" : "Measured Temperature",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "37",
                  "s" : [ {
                     "value" : [ "","code ","\"Measured Temperature\"",": ","'EmCare.B6.DE01A'"," from " ]
                  }, {
                     "r" : "36",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Measured Temperature'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "36",
               "name" : "EmCare"
            }
         }, {
            "localId" : "39",
            "name" : "Weight (kilograms)",
            "id" : "EmCare.B6.DE06",
            "display" : "Weight (kilograms)",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "39",
                  "s" : [ {
                     "value" : [ "","code ","\"Weight (kilograms)\"",": ","'EmCare.B6.DE06'"," from " ]
                  }, {
                     "r" : "38",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Weight (kilograms)'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "38",
               "name" : "EmCare"
            }
         }, {
            "localId" : "41",
            "name" : "Weight cannot be measured",
            "id" : "EmCare.B6.DE07",
            "display" : "Weight cannot be measured",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "41",
                  "s" : [ {
                     "value" : [ "","code ","\"Weight cannot be measured\"",": ","'EmCare.B6.DE07'"," from " ]
                  }, {
                     "r" : "40",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Weight cannot be measured'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "40",
               "name" : "EmCare"
            }
         }, {
            "localId" : "43",
            "name" : "Estimated Weight",
            "id" : "EmCare.B6.DE08",
            "display" : "Estimated Weight",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "43",
                  "s" : [ {
                     "value" : [ "","code ","\"Estimated Weight\"",": ","'EmCare.B6.DE08'"," from " ]
                  }, {
                     "r" : "42",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Estimated Weight'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "42",
               "name" : "EmCare"
            }
         }, {
            "localId" : "45",
            "name" : "Height",
            "id" : "EmCare.B6.DE09",
            "display" : "Height",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "45",
                  "s" : [ {
                     "value" : [ "","code ","\"Height\"",": ","'EmCare.B6.DE09'"," from " ]
                  }, {
                     "r" : "44",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Height'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "44",
               "name" : "EmCare"
            }
         }, {
            "localId" : "47",
            "name" : "Height cannot be measured",
            "id" : "EmCare.B6.DE11",
            "display" : "Height cannot be measured",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "47",
                  "s" : [ {
                     "value" : [ "","code ","\"Height cannot be measured\"",": ","'EmCare.B6.DE11'"," from " ]
                  }, {
                     "r" : "46",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Height cannot be measured'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "46",
               "name" : "EmCare"
            }
         }, {
            "localId" : "49",
            "name" : "Length",
            "id" : "EmCare.B6.DE12",
            "display" : "Length",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "49",
                  "s" : [ {
                     "value" : [ "","code ","\"Length\"",": ","'EmCare.B6.DE12'"," from " ]
                  }, {
                     "r" : "48",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Length'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "48",
               "name" : "EmCare"
            }
         }, {
            "localId" : "51",
            "name" : "Length cannot be measured",
            "id" : "EmCare.B6.DE13",
            "display" : "Length cannot be measured",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "51",
                  "s" : [ {
                     "value" : [ "","code ","\"Length cannot be measured\"",": ","'EmCare.B6.DE13'"," from " ]
                  }, {
                     "r" : "50",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Length cannot be measured'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "50",
               "name" : "EmCare"
            }
         }, {
            "localId" : "53",
            "name" : "Weight for Height (WFH) Z Scores",
            "id" : "EmCare.B6.DE14",
            "display" : "Weight for Height (WFH) Z Scores",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "53",
                  "s" : [ {
                     "value" : [ "","code ","\"Weight for Height (WFH) Z Scores\"",": ","'EmCare.B6.DE14'"," from " ]
                  }, {
                     "r" : "52",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Weight for Height (WFH) Z Scores'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "52",
               "name" : "EmCare"
            }
         }, {
            "localId" : "55",
            "name" : "Weight for Length (WFL) Z Scores",
            "id" : "EmCare.B6.DE15",
            "display" : "Weight for Length (WFL) Z Scores",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "55",
                  "s" : [ {
                     "value" : [ "","code ","\"Weight for Length (WFL) Z Scores\"",": ","'EmCare.B6.DE15'"," from " ]
                  }, {
                     "r" : "54",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Weight for Length (WFL) Z Scores'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "54",
               "name" : "EmCare"
            }
         }, {
            "localId" : "57",
            "name" : "Weight for Age (WFA) Z Scores",
            "id" : "EmCare.B6.DE16",
            "display" : "Weight for Age (WFA) Z Scores",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "57",
                  "s" : [ {
                     "value" : [ "","code ","\"Weight for Age (WFA) Z Scores\"",": ","'EmCare.B6.DE16'"," from " ]
                  }, {
                     "r" : "56",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Weight for Age (WFA) Z Scores'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "56",
               "name" : "EmCare"
            }
         }, {
            "localId" : "59",
            "name" : "Reason for not measuring weight",
            "id" : "EmCare.B6.DE23",
            "display" : "Reason for not measuring weight",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "59",
                  "s" : [ {
                     "value" : [ "","code ","\"Reason for not measuring weight\"",": ","'EmCare.B6.DE23'"," from " ]
                  }, {
                     "r" : "58",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Reason for not measuring weight'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "58",
               "name" : "EmCare"
            }
         }, {
            "localId" : "61",
            "name" : "MUAC (Mid Upper Arm Circumference)",
            "id" : "EmCare.B6.DE17",
            "display" : "MUAC (Mid Upper Arm Circumference)",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "61",
                  "s" : [ {
                     "value" : [ "","code ","\"MUAC (Mid Upper Arm Circumference)\"",": ","'EmCare.B6.DE17'"," from " ]
                  }, {
                     "r" : "60",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'MUAC (Mid Upper Arm Circumference)'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "60",
               "name" : "EmCare"
            }
         }, {
            "localId" : "63",
            "name" : "MUAC cannot be measured",
            "id" : "EmCare.B6.DE17a",
            "display" : "MUAC cannot be measured",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "63",
                  "s" : [ {
                     "value" : [ "","code ","\"MUAC cannot be measured\"",": ","'EmCare.B6.DE17a'"," from " ]
                  }, {
                     "r" : "62",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'MUAC cannot be measured'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "62",
               "name" : "EmCare"
            }
         }, {
            "localId" : "65",
            "name" : "Reason for not measuring MUAC",
            "id" : "EmCare.B6.DE28",
            "display" : "Reason for not measuring MUAC",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "65",
                  "s" : [ {
                     "value" : [ "","code ","\"Reason for not measuring MUAC\"",": ","'EmCare.B6.DE28'"," from " ]
                  }, {
                     "r" : "64",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Reason for not measuring MUAC'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "64",
               "name" : "EmCare"
            }
         }, {
            "localId" : "67",
            "name" : "Visually assess for whether underweight (for drug dose calculation)",
            "id" : "EmCare.B6.DE18",
            "display" : "Visually assess for whether underweight (for drug dose calculation)",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "67",
                  "s" : [ {
                     "value" : [ "","code ","\"Visually assess for whether underweight (for drug dose calculation)\"",": ","'EmCare.B6.DE18'"," from " ]
                  }, {
                     "r" : "66",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Visually assess for whether underweight (for drug dose calculation)'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "66",
               "name" : "EmCare"
            }
         }, {
            "localId" : "69",
            "name" : "Growth curve break in weight",
            "id" : "EmCare.B6.DE24",
            "display" : "Growth curve break in weight",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "69",
                  "s" : [ {
                     "value" : [ "","code ","\"Growth curve break in weight\"",": ","'EmCare.B6.DE24'"," from " ]
                  }, {
                     "r" : "68",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Growth curve break in weight'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "68",
               "name" : "EmCare"
            }
         }, {
            "localId" : "71",
            "name" : "Difficulty with Feeding",
            "id" : "EmCare.B18S1.DE02",
            "display" : "Difficulty with Feeding",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "71",
                  "s" : [ {
                     "value" : [ "","code ","\"Difficulty with Feeding\"",": ","'EmCare.B18S1.DE02'"," from " ]
                  }, {
                     "r" : "70",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Difficulty with Feeding'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "70",
               "name" : "EmCare"
            }
         }, {
            "localId" : "73",
            "name" : "Fever Reported",
            "id" : "EmCare.B12S1.DE02",
            "display" : "Fever Reported",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "73",
                  "s" : [ {
                     "value" : [ "","code ","\"Fever Reported\"",": ","'EmCare.B12S1.DE02'"," from " ]
                  }, {
                     "r" : "72",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Fever Reported'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "72",
               "name" : "EmCare"
            }
         }, {
            "localId" : "75",
            "name" : "Diarrhoea",
            "id" : "EmCare.B20S1.DE01",
            "display" : "Diarrhoea",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "75",
                  "s" : [ {
                     "value" : [ "","code ","\"Diarrhoea\"",": ","'EmCare.B20S1.DE01'"," from " ]
                  }, {
                     "r" : "74",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Diarrhoea'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "74",
               "name" : "EmCare"
            }
         }, {
            "localId" : "77",
            "name" : "Blood in stool",
            "id" : "EmCare.B20S1.DE02",
            "display" : "Blood in stool",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "77",
                  "s" : [ {
                     "value" : [ "","code ","\"Blood in stool\"",": ","'EmCare.B20S1.DE02'"," from " ]
                  }, {
                     "r" : "76",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Blood in stool'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "76",
               "name" : "EmCare"
            }
         }, {
            "localId" : "79",
            "name" : "Breastfed",
            "id" : "EmCare.B21S1.DE06",
            "display" : "Breastfed",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "79",
                  "s" : [ {
                     "value" : [ "","code ","\"Breastfed\"",": ","'EmCare.B21S1.DE06'"," from " ]
                  }, {
                     "r" : "78",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Breastfed'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "78",
               "name" : "EmCare"
            }
         }, {
            "localId" : "81",
            "name" : "Maternal fever within the week prior to delivery, intrapartum or in the week after delivery",
            "id" : "EmCare.B22S1.DE01",
            "display" : "Maternal fever within the week prior to delivery, intrapartum or in the week after delivery",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "81",
                  "s" : [ {
                     "value" : [ "","code ","\"Maternal fever within the week prior to delivery, intrapartum or in the week after delivery\"",": ","'EmCare.B22S1.DE01'"," from " ]
                  }, {
                     "r" : "80",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Maternal fever within the week prior to delivery, intrapartum or in the week after delivery'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "80",
               "name" : "EmCare"
            }
         }, {
            "localId" : "83",
            "name" : "History of prolonged rupture of membrane > 18 hours (PROM) during childbirth",
            "id" : "EmCare.B22S1.DE02",
            "display" : "History of prolonged rupture of membrane > 18 hours (PROM) during childbirth",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "83",
                  "s" : [ {
                     "value" : [ "","code ","\"History of prolonged rupture of membrane > 18 hours (PROM) during childbirth\"",": ","'EmCare.B22S1.DE02'"," from " ]
                  }, {
                     "r" : "82",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'History of prolonged rupture of membrane > 18 hours (PROM) during childbirth'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "82",
               "name" : "EmCare"
            }
         }, {
            "localId" : "85",
            "name" : "History of preterm premature rupture of membranes <37 weeks gestation (PPROM) during childbirth",
            "id" : "EmCare.B22S1.DE03",
            "display" : "History of preterm premature rupture of membranes <37 weeks gestation (PPROM) during childbirth",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "85",
                  "s" : [ {
                     "value" : [ "","code ","\"History of preterm premature rupture of membranes <37 weeks gestation (PPROM) during childbirth\"",": ","'EmCare.B22S1.DE03'"," from " ]
                  }, {
                     "r" : "84",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'History of preterm premature rupture of membranes <37 weeks gestation (PPROM) during childbirth'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "84",
               "name" : "EmCare"
            }
         }, {
            "localId" : "87",
            "name" : "History of foul smelling or fetid meconium or amniotic fluid during childbirth",
            "id" : "EmCare.B22S1.DE04",
            "display" : "History of foul smelling or fetid meconium or amniotic fluid during childbirth",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "87",
                  "s" : [ {
                     "value" : [ "","code ","\"History of foul smelling or fetid meconium or amniotic fluid during childbirth\"",": ","'EmCare.B22S1.DE04'"," from " ]
                  }, {
                     "r" : "86",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'History of foul smelling or fetid meconium or amniotic fluid during childbirth'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "86",
               "name" : "EmCare"
            }
         }, {
            "localId" : "89",
            "name" : "Maternal malaria test results in the week prior to delivery, intrapartum or in the week after delivery",
            "id" : "EmCare.B22S1.DE05",
            "display" : "Maternal malaria test results in the week prior to delivery, intrapartum or in the week after delivery",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "89",
                  "s" : [ {
                     "value" : [ "","code ","\"Maternal malaria test results in the week prior to delivery, intrapartum or in the week after delivery\"",": ","'EmCare.B22S1.DE05'"," from " ]
                  }, {
                     "r" : "88",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Maternal malaria test results in the week prior to delivery, intrapartum or in the week after delivery'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "88",
               "name" : "EmCare"
            }
         }, {
            "localId" : "91",
            "name" : "History of maternal genital infection in the week prior to delivery, intrapartum or in the week after delivery",
            "id" : "EmCare.B22S1.DE10",
            "display" : "History of maternal genital infection in the week prior to delivery, intrapartum or in the week after delivery",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "91",
                  "s" : [ {
                     "value" : [ "","code ","\"History of maternal genital infection in the week prior to delivery, intrapartum or in the week after delivery\"",": ","'EmCare.B22S1.DE10'"," from " ]
                  }, {
                     "r" : "90",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'History of maternal genital infection in the week prior to delivery, intrapartum or in the week after delivery'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "90",
               "name" : "EmCare"
            }
         }, {
            "localId" : "93",
            "name" : "Severe Chest Indrawing",
            "id" : "EmCare.B18S2.DE07",
            "display" : "Severe Chest Indrawing",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "93",
                  "s" : [ {
                     "value" : [ "","code ","\"Severe Chest Indrawing\"",": ","'EmCare.B18S2.DE07'"," from " ]
                  }, {
                     "r" : "92",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Severe Chest Indrawing'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "92",
               "name" : "EmCare"
            }
         }, {
            "localId" : "95",
            "name" : "Infant's Movements",
            "id" : "EmCare.B18S2.DE08",
            "display" : "Infant's Movements",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "95",
                  "s" : [ {
                     "value" : [ "","code ","\"Infant's Movements\"",": ","'EmCare.B18S2.DE08'"," from " ]
                  }, {
                     "r" : "94",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Infant\\'s Movements'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "94",
               "name" : "EmCare"
            }
         }, {
            "localId" : "97",
            "name" : "Umbilicus Red or Pus Draining",
            "id" : "EmCare.B18S2.DE12",
            "display" : "Umbilicus Red or Pus Draining",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "97",
                  "s" : [ {
                     "value" : [ "","code ","\"Umbilicus Red or Pus Draining\"",": ","'EmCare.B18S2.DE12'"," from " ]
                  }, {
                     "r" : "96",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Umbilicus Red or Pus Draining'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "96",
               "name" : "EmCare"
            }
         }, {
            "localId" : "99",
            "name" : "Umbilical redness gaining skin or oozing pus",
            "id" : "EmCare.B18S2.DE17",
            "display" : "Umbilical redness gaining skin or oozing pus",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "99",
                  "s" : [ {
                     "value" : [ "","code ","\"Umbilical redness gaining skin or oozing pus\"",": ","'EmCare.B18S2.DE17'"," from " ]
                  }, {
                     "r" : "98",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Umbilical redness gaining skin or oozing pus'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "98",
               "name" : "EmCare"
            }
         }, {
            "localId" : "101",
            "name" : "Skin Pustules",
            "id" : "EmCare.B18S2.DE13",
            "display" : "Skin Pustules",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "101",
                  "s" : [ {
                     "value" : [ "","code ","\"Skin Pustules\"",": ","'EmCare.B18S2.DE13'"," from " ]
                  }, {
                     "r" : "100",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Skin Pustules'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "100",
               "name" : "EmCare"
            }
         }, {
            "localId" : "103",
            "name" : "Bulging fontanelle",
            "id" : "EmCare.B18S2.DE14",
            "display" : "Bulging fontanelle",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "103",
                  "s" : [ {
                     "value" : [ "","code ","\"Bulging fontanelle\"",": ","'EmCare.B18S2.DE14'"," from " ]
                  }, {
                     "r" : "102",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Bulging fontanelle'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "102",
               "name" : "EmCare"
            }
         }, {
            "localId" : "105",
            "name" : "Flaring nostrils",
            "id" : "EmCare.B18S2.DE15",
            "display" : "Flaring nostrils",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "105",
                  "s" : [ {
                     "value" : [ "","code ","\"Flaring nostrils\"",": ","'EmCare.B18S2.DE15'"," from " ]
                  }, {
                     "r" : "104",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Flaring nostrils'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "104",
               "name" : "EmCare"
            }
         }, {
            "localId" : "107",
            "name" : "Purelent discharge from the eye(s)",
            "id" : "EmCare.B18S2.DE18",
            "display" : "Purelent discharge from the eye(s)",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "107",
                  "s" : [ {
                     "value" : [ "","code ","\"Purelent discharge from the eye(s)\"",": ","'EmCare.B18S2.DE18'"," from " ]
                  }, {
                     "r" : "106",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Purelent discharge from the eye(s)'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "106",
               "name" : "EmCare"
            }
         }, {
            "localId" : "109",
            "name" : "Yellow Skin or yellow eyes",
            "id" : "EmCare.B19S2.DE01",
            "display" : "Yellow Skin or yellow eyes",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "109",
                  "s" : [ {
                     "value" : [ "","code ","\"Yellow Skin or yellow eyes\"",": ","'EmCare.B19S2.DE01'"," from " ]
                  }, {
                     "r" : "108",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Yellow Skin or yellow eyes'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "108",
               "name" : "EmCare"
            }
         }, {
            "localId" : "111",
            "name" : "Yellow Palms or Yellow Soles",
            "id" : "EmCare.B19S2.DE02",
            "display" : "Yellow Palms or Yellow Soles",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "111",
                  "s" : [ {
                     "value" : [ "","code ","\"Yellow Palms or Yellow Soles\"",": ","'EmCare.B19S2.DE02'"," from " ]
                  }, {
                     "r" : "110",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Yellow Palms or Yellow Soles'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "110",
               "name" : "EmCare"
            }
         }, {
            "localId" : "113",
            "name" : "When did the Jaundice first appear?",
            "id" : "EmCare.B19S2.DE04",
            "display" : "When did the Jaundice first appear?",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "113",
                  "s" : [ {
                     "value" : [ "","code ","\"When did the Jaundice first appear?\"",": ","'EmCare.B19S2.DE04'"," from " ]
                  }, {
                     "r" : "112",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'When did the Jaundice first appear?'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "112",
               "name" : "EmCare"
            }
         }, {
            "localId" : "115",
            "name" : "Sunken Eyes",
            "id" : "EmCare.B20S2.DE01",
            "display" : "Sunken Eyes",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "115",
                  "s" : [ {
                     "value" : [ "","code ","\"Sunken Eyes\"",": ","'EmCare.B20S2.DE01'"," from " ]
                  }, {
                     "r" : "114",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Sunken Eyes'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "114",
               "name" : "EmCare"
            }
         }, {
            "localId" : "117",
            "name" : "Skin Pinch of Abdomen",
            "id" : "EmCare.B20S2.DE02",
            "display" : "Skin Pinch of Abdomen",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "117",
                  "s" : [ {
                     "value" : [ "","code ","\"Skin Pinch of Abdomen\"",": ","'EmCare.B20S2.DE02'"," from " ]
                  }, {
                     "r" : "116",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Skin Pinch of Abdomen'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "116",
               "name" : "EmCare"
            }
         }, {
            "localId" : "119",
            "name" : "Restless and Irritable",
            "id" : "EmCare.B11S2.DE06",
            "display" : "Restless and Irritable",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "119",
                  "s" : [ {
                     "value" : [ "","code ","\"Restless and Irritable\"",": ","'EmCare.B11S2.DE06'"," from " ]
                  }, {
                     "r" : "118",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Restless and Irritable'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "118",
               "name" : "EmCare"
            }
         }, {
            "localId" : "121",
            "name" : "Weight Status",
            "id" : "EmCare.B21S2.DE01",
            "display" : "Weight Status",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "121",
                  "s" : [ {
                     "value" : [ "","code ","\"Weight Status\"",": ","'EmCare.B21S2.DE01'"," from " ]
                  }, {
                     "r" : "120",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Weight Status'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "120",
               "name" : "EmCare"
            }
         }, {
            "localId" : "123",
            "name" : "Breastfed how many times in 24 hours?",
            "id" : "EmCare.B21S2.DE05",
            "display" : "Breastfed how many times in 24 hours?",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "123",
                  "s" : [ {
                     "value" : [ "","code ","\"Breastfed how many times in 24 hours?\"",": ","'EmCare.B21S2.DE05'"," from " ]
                  }, {
                     "r" : "122",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Breastfed how many times in 24 hours?'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "122",
               "name" : "EmCare"
            }
         }, {
            "localId" : "125",
            "name" : "Sufficient feeds",
            "id" : "EmCare.B21S2.DE06",
            "display" : "Sufficient feeds",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "125",
                  "s" : [ {
                     "value" : [ "","code ","\"Sufficient feeds\"",": ","'EmCare.B21S2.DE06'"," from " ]
                  }, {
                     "r" : "124",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Sufficient feeds'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "124",
               "name" : "EmCare"
            }
         }, {
            "localId" : "127",
            "name" : "Insufficient feeds",
            "id" : "EmCare.B21S2.DE07",
            "display" : "Insufficient feeds",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "127",
                  "s" : [ {
                     "value" : [ "","code ","\"Insufficient feeds\"",": ","'EmCare.B21S2.DE07'"," from " ]
                  }, {
                     "r" : "126",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Insufficient feeds'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "126",
               "name" : "EmCare"
            }
         }, {
            "localId" : "129",
            "name" : "Young Infant receives food or fluids other than breast milk",
            "id" : "EmCare.B21S2.DE08",
            "display" : "Young Infant receives food or fluids other than breast milk",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "129",
                  "s" : [ {
                     "value" : [ "","code ","\"Young Infant receives food or fluids other than breast milk\"",": ","'EmCare.B21S2.DE08'"," from " ]
                  }, {
                     "r" : "128",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Young Infant receives food or fluids other than breast milk'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "128",
               "name" : "EmCare"
            }
         }, {
            "localId" : "131",
            "name" : "What milk is being given as a replacement feed?",
            "id" : "EmCare.B21S2.DE09",
            "display" : "What milk is being given as a replacement feed?",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "131",
                  "s" : [ {
                     "value" : [ "","code ","\"What milk is being given as a replacement feed?\"",": ","'EmCare.B21S2.DE09'"," from " ]
                  }, {
                     "r" : "130",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'What milk is being given as a replacement feed?'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "130",
               "name" : "EmCare"
            }
         }, {
            "localId" : "133",
            "name" : "How many replacement feeds during the day and night (24 hours)?",
            "id" : "EmCare.B21S2.DE12",
            "display" : "How many replacement feeds during the day and night (24 hours)?",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "133",
                  "s" : [ {
                     "value" : [ "","code ","\"How many replacement feeds during the day and night (24 hours)?\"",": ","'EmCare.B21S2.DE12'"," from " ]
                  }, {
                     "r" : "132",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'How many replacement feeds during the day and night (24 hours)?'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "132",
               "name" : "EmCare"
            }
         }, {
            "localId" : "135",
            "name" : "Sufficient replacement feeds (in 24 hours)",
            "id" : "EmCare.B21S2.DE13",
            "display" : "Sufficient replacement feeds (in 24 hours)",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "135",
                  "s" : [ {
                     "value" : [ "","code ","\"Sufficient replacement feeds (in 24 hours)\"",": ","'EmCare.B21S2.DE13'"," from " ]
                  }, {
                     "r" : "134",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Sufficient replacement feeds (in 24 hours)'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "134",
               "name" : "EmCare"
            }
         }, {
            "localId" : "137",
            "name" : "Insufficient replacement feeds (in 24 hours)",
            "id" : "EmCare.B21S2.DE14",
            "display" : "Insufficient replacement feeds (in 24 hours)",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "137",
                  "s" : [ {
                     "value" : [ "","code ","\"Insufficient replacement feeds (in 24 hours)\"",": ","'EmCare.B21S2.DE14'"," from " ]
                  }, {
                     "r" : "136",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Insufficient replacement feeds (in 24 hours)'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "136",
               "name" : "EmCare"
            }
         }, {
            "localId" : "139",
            "name" : "How much milk is given at each feed?",
            "id" : "EmCare.B21S2.DE15",
            "display" : "How much milk is given at each feed?",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "139",
                  "s" : [ {
                     "value" : [ "","code ","\"How much milk is given at each feed?\"",": ","'EmCare.B21S2.DE15'"," from " ]
                  }, {
                     "r" : "138",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'How much milk is given at each feed?'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "138",
               "name" : "EmCare"
            }
         }, {
            "localId" : "141",
            "name" : "How is the milk prepared?",
            "id" : "EmCare.B21S2.DE18",
            "display" : "How is the milk prepared?",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "141",
                  "s" : [ {
                     "value" : [ "","code ","\"How is the milk prepared?\"",": ","'EmCare.B21S2.DE18'"," from " ]
                  }, {
                     "r" : "140",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'How is the milk prepared?'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "140",
               "name" : "EmCare"
            }
         }, {
            "localId" : "143",
            "name" : "How are the feeding utensils cleaned?",
            "id" : "EmCare.B21S2.DE24",
            "display" : "How are the feeding utensils cleaned?",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "143",
                  "s" : [ {
                     "value" : [ "","code ","\"How are the feeding utensils cleaned?\"",": ","'EmCare.B21S2.DE24'"," from " ]
                  }, {
                     "r" : "142",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'How are the feeding utensils cleaned?'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "142",
               "name" : "EmCare"
            }
         }, {
            "localId" : "145",
            "name" : "Is infant given any breast milk at all?",
            "id" : "EmCare.B21S2.DE27",
            "display" : "Is infant given any breast milk at all?",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "145",
                  "s" : [ {
                     "value" : [ "","code ","\"Is infant given any breast milk at all?\"",": ","'EmCare.B21S2.DE27'"," from " ]
                  }, {
                     "r" : "144",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Is infant given any breast milk at all?'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "144",
               "name" : "EmCare"
            }
         }, {
            "localId" : "147",
            "name" : "Ulcers or White Patches in Mouth",
            "id" : "EmCare.B21S2.DE30",
            "display" : "Ulcers or White Patches in Mouth",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "147",
                  "s" : [ {
                     "value" : [ "","code ","\"Ulcers or White Patches in Mouth\"",": ","'EmCare.B21S2.DE30'"," from " ]
                  }, {
                     "r" : "146",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Ulcers or White Patches in Mouth'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "146",
               "name" : "EmCare"
            }
         }, {
            "localId" : "149",
            "name" : "Unable to check if Ulcers or White Patches in Mouth",
            "id" : "EmCare.B21S2.DE31",
            "display" : "Unable to check if Ulcers or White Patches in Mouth",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "149",
                  "s" : [ {
                     "value" : [ "","code ","\"Unable to check if Ulcers or White Patches in Mouth\"",": ","'EmCare.B21S2.DE31'"," from " ]
                  }, {
                     "r" : "148",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Unable to check if Ulcers or White Patches in Mouth'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "148",
               "name" : "EmCare"
            }
         }, {
            "localId" : "151",
            "name" : "Birth weight (gm)",
            "id" : "EmCare.B22S1.DE32",
            "display" : "Birth weight (gm)",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "151",
                  "s" : [ {
                     "value" : [ "","code ","\"Birth weight (gm)\"",": ","'EmCare.B22S1.DE32'"," from " ]
                  }, {
                     "r" : "150",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Birth weight (gm)'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "150",
               "name" : "EmCare"
            }
         }, {
            "localId" : "153",
            "name" : "Birth weight (gm) is unknown",
            "id" : "EmCare.B22S1.DE33",
            "display" : "Birth weight (gm) is unknown",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "153",
                  "s" : [ {
                     "value" : [ "","code ","\"Birth weight (gm) is unknown\"",": ","'EmCare.B22S1.DE33'"," from " ]
                  }, {
                     "r" : "152",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Birth weight (gm) is unknown'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "152",
               "name" : "EmCare"
            }
         }, {
            "localId" : "155",
            "name" : "Cough",
            "id" : "EmCare.B10S1.DE05",
            "display" : "Cough",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "155",
                  "s" : [ {
                     "value" : [ "","code ","\"Cough\"",": ","'EmCare.B10S1.DE05'"," from " ]
                  }, {
                     "r" : "154",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Cough'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "154",
               "name" : "EmCare"
            }
         }, {
            "localId" : "157",
            "name" : "Cough for how long?",
            "id" : "EmCare.B10S1.DE06",
            "display" : "Cough for how long?",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "157",
                  "s" : [ {
                     "value" : [ "","code ","\"Cough for how long?\"",": ","'EmCare.B10S1.DE06'"," from " ]
                  }, {
                     "r" : "156",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Cough for how long?'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "156",
               "name" : "EmCare"
            }
         }, {
            "localId" : "159",
            "name" : "Difficulty Breathing",
            "id" : "EmCare.B10S1.DE01",
            "display" : "Difficulty Breathing",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "159",
                  "s" : [ {
                     "value" : [ "","code ","\"Difficulty Breathing\"",": ","'EmCare.B10S1.DE01'"," from " ]
                  }, {
                     "r" : "158",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Difficulty Breathing'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "158",
               "name" : "EmCare"
            }
         }, {
            "localId" : "161",
            "name" : "Difficulty breathing for how long?",
            "id" : "EmCare.B10S1.DE02",
            "display" : "Difficulty breathing for how long?",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "161",
                  "s" : [ {
                     "value" : [ "","code ","\"Difficulty breathing for how long?\"",": ","'EmCare.B10S1.DE02'"," from " ]
                  }, {
                     "r" : "160",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Difficulty breathing for how long?'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "160",
               "name" : "EmCare"
            }
         }, {
            "localId" : "163",
            "name" : "One or more episodes of pneumonia in past two months",
            "id" : "EmCare.B10S1.DE05xx",
            "display" : "One or more episodes of pneumonia in past two months",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "163",
                  "s" : [ {
                     "value" : [ "","code ","\"One or more episodes of pneumonia in past two months\"",": ","'EmCare.B10S1.DE05xx'"," from " ]
                  }, {
                     "r" : "162",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'One or more episodes of pneumonia in past two months'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "162",
               "name" : "EmCare"
            }
         }, {
            "localId" : "165",
            "name" : "Diarrhoea for how long?",
            "id" : "EmCare.B11S1.DE02",
            "display" : "Diarrhoea for how long?",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "165",
                  "s" : [ {
                     "value" : [ "","code ","\"Diarrhoea for how long?\"",": ","'EmCare.B11S1.DE02'"," from " ]
                  }, {
                     "r" : "164",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Diarrhoea for how long?'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "164",
               "name" : "EmCare"
            }
         }, {
            "localId" : "167",
            "name" : "Blood in the stool in this Illness",
            "id" : "EmCare.B11S1.DE05",
            "display" : "Blood in the stool in this Illness",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "167",
                  "s" : [ {
                     "value" : [ "","code ","\"Blood in the stool in this Illness\"",": ","'EmCare.B11S1.DE05'"," from " ]
                  }, {
                     "r" : "166",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Blood in the stool in this Illness'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "166",
               "name" : "EmCare"
            }
         }, {
            "localId" : "169",
            "name" : "Recent history of weight loss",
            "id" : "EmCare.B11S1.DE06",
            "display" : "Recent history of weight loss",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "169",
                  "s" : [ {
                     "value" : [ "","code ","\"Recent history of weight loss\"",": ","'EmCare.B11S1.DE06'"," from " ]
                  }, {
                     "r" : "168",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Recent history of weight loss'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "168",
               "name" : "EmCare"
            }
         }, {
            "localId" : "171",
            "name" : "Eyelids more retracted than before",
            "id" : "EmCare.B11S1.DE07",
            "display" : "Eyelids more retracted than before",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "171",
                  "s" : [ {
                     "value" : [ "","code ","\"Eyelids more retracted than before\"",": ","'EmCare.B11S1.DE07'"," from " ]
                  }, {
                     "r" : "170",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Eyelids more retracted than before'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "170",
               "name" : "EmCare"
            }
         }, {
            "localId" : "173",
            "name" : "Two or more episodes of diarrhea in the past 2 months",
            "id" : "EmCare.B11S1.DE08",
            "display" : "Two or more episodes of diarrhea in the past 2 months",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "173",
                  "s" : [ {
                     "value" : [ "","code ","\"Two or more episodes of diarrhea in the past 2 months\"",": ","'EmCare.B11S1.DE08'"," from " ]
                  }, {
                     "r" : "172",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Two or more episodes of diarrhea in the past 2 months'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "172",
               "name" : "EmCare"
            }
         }, {
            "localId" : "175",
            "name" : "Fever for how long?",
            "id" : "EmCare.B12S1.DE03",
            "display" : "Fever for how long?",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "175",
                  "s" : [ {
                     "value" : [ "","code ","\"Fever for how long?\"",": ","'EmCare.B12S1.DE03'"," from " ]
                  }, {
                     "r" : "174",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Fever for how long?'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "174",
               "name" : "EmCare"
            }
         }, {
            "localId" : "177",
            "name" : "Has Fever been present every day for more than 7 days",
            "id" : "EmCare.B12S1.DE06",
            "display" : "Has Fever been present every day for more than 7 days",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "177",
                  "s" : [ {
                     "value" : [ "","code ","\"Has Fever been present every day for more than 7 days\"",": ","'EmCare.B12S1.DE06'"," from " ]
                  }, {
                     "r" : "176",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Has Fever been present every day for more than 7 days'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "176",
               "name" : "EmCare"
            }
         }, {
            "localId" : "179",
            "name" : "Pain",
            "id" : "EmCare.B12S1.DE08",
            "display" : "Pain",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "179",
                  "s" : [ {
                     "value" : [ "","code ","\"Pain\"",": ","'EmCare.B12S1.DE08'"," from " ]
                  }, {
                     "r" : "178",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Pain'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "178",
               "name" : "EmCare"
            }
         }, {
            "localId" : "181",
            "name" : "Ear Problem",
            "id" : "EmCare.B13S1.DE01",
            "display" : "Ear Problem",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "181",
                  "s" : [ {
                     "value" : [ "","code ","\"Ear Problem\"",": ","'EmCare.B13S1.DE01'"," from " ]
                  }, {
                     "r" : "180",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Ear Problem'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "180",
               "name" : "EmCare"
            }
         }, {
            "localId" : "183",
            "name" : "Ear Pain",
            "id" : "EmCare.B13S1.DE02",
            "display" : "Ear Pain",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "183",
                  "s" : [ {
                     "value" : [ "","code ","\"Ear Pain\"",": ","'EmCare.B13S1.DE02'"," from " ]
                  }, {
                     "r" : "182",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Ear Pain'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "182",
               "name" : "EmCare"
            }
         }, {
            "localId" : "185",
            "name" : "Ear Discharge",
            "id" : "EmCare.B13S1.DE03",
            "display" : "Ear Discharge",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "185",
                  "s" : [ {
                     "value" : [ "","code ","\"Ear Discharge\"",": ","'EmCare.B13S1.DE03'"," from " ]
                  }, {
                     "r" : "184",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Ear Discharge'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "184",
               "name" : "EmCare"
            }
         }, {
            "localId" : "187",
            "name" : "Ear Discharge for how long?",
            "id" : "EmCare.B13S1.DE04",
            "display" : "Ear Discharge for how long?",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "187",
                  "s" : [ {
                     "value" : [ "","code ","\"Ear Discharge for how long?\"",": ","'EmCare.B13S1.DE04'"," from " ]
                  }, {
                     "r" : "186",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Ear Discharge for how long?'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "186",
               "name" : "EmCare"
            }
         }, {
            "localId" : "189",
            "name" : "Eye Problem",
            "id" : "EmCare.B14S1.DE01",
            "display" : "Eye Problem",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "189",
                  "s" : [ {
                     "value" : [ "","code ","\"Eye Problem\"",": ","'EmCare.B14S1.DE01'"," from " ]
                  }, {
                     "r" : "188",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Eye Problem'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "188",
               "name" : "EmCare"
            }
         }, {
            "localId" : "191",
            "name" : "Skin Problem",
            "id" : "EmCare.B14S1.DE02",
            "display" : "Skin Problem",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "191",
                  "s" : [ {
                     "value" : [ "","code ","\"Skin Problem\"",": ","'EmCare.B14S1.DE02'"," from " ]
                  }, {
                     "r" : "190",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Skin Problem'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "190",
               "name" : "EmCare"
            }
         }, {
            "localId" : "193",
            "name" : "Itchy Skin",
            "id" : "EmCare.B14S1.DE03",
            "display" : "Itchy Skin",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "193",
                  "s" : [ {
                     "value" : [ "","code ","\"Itchy Skin\"",": ","'EmCare.B14S1.DE03'"," from " ]
                  }, {
                     "r" : "192",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Itchy Skin'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "192",
               "name" : "EmCare"
            }
         }, {
            "localId" : "195",
            "name" : "Sickle cell disease",
            "id" : "EmCare.B15S1.DE01",
            "display" : "Sickle cell disease",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "195",
                  "s" : [ {
                     "value" : [ "","code ","\"Sickle cell disease\"",": ","'EmCare.B15S1.DE01'"," from " ]
                  }, {
                     "r" : "194",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Sickle cell disease'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "194",
               "name" : "EmCare"
            }
         }, {
            "localId" : "197",
            "name" : "Chest Indrawing",
            "id" : "EmCare.B10S2.DE03",
            "display" : "Chest Indrawing",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "197",
                  "s" : [ {
                     "value" : [ "","code ","\"Chest Indrawing\"",": ","'EmCare.B10S2.DE03'"," from " ]
                  }, {
                     "r" : "196",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Chest Indrawing'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "196",
               "name" : "EmCare"
            }
         }, {
            "localId" : "199",
            "name" : "Stridor in a calm child",
            "id" : "EmCare.B10S2.DE04",
            "display" : "Stridor in a calm child",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "199",
                  "s" : [ {
                     "value" : [ "","code ","\"Stridor in a calm child\"",": ","'EmCare.B10S2.DE04'"," from " ]
                  }, {
                     "r" : "198",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Stridor in a calm child'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "198",
               "name" : "EmCare"
            }
         }, {
            "localId" : "201",
            "name" : "Wheezing",
            "id" : "EmCare.B10S2.DE05",
            "display" : "Wheezing",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "201",
                  "s" : [ {
                     "value" : [ "","code ","\"Wheezing\"",": ","'EmCare.B10S2.DE05'"," from " ]
                  }, {
                     "r" : "200",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Wheezing'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "200",
               "name" : "EmCare"
            }
         }, {
            "localId" : "203",
            "name" : "Duration of wheezing",
            "id" : "EmCare.B10S2.DE05A",
            "display" : "Duration of wheezing",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "203",
                  "s" : [ {
                     "value" : [ "","code ","\"Duration of wheezing\"",": ","'EmCare.B10S2.DE05A'"," from " ]
                  }, {
                     "r" : "202",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Duration of wheezing'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "202",
               "name" : "EmCare"
            }
         }, {
            "localId" : "205",
            "name" : "Wheezing before this illness?",
            "id" : "EmCare.B10S2.DE05D",
            "display" : "Wheezing before this illness?",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "205",
                  "s" : [ {
                     "value" : [ "","code ","\"Wheezing before this illness?\"",": ","'EmCare.B10S2.DE05D'"," from " ]
                  }, {
                     "r" : "204",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Wheezing before this illness?'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "204",
               "name" : "EmCare"
            }
         }, {
            "localId" : "207",
            "name" : "Frequent cough at night",
            "id" : "EmCare.B10S2.DE05E",
            "display" : "Frequent cough at night",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "207",
                  "s" : [ {
                     "value" : [ "","code ","\"Frequent cough at night\"",": ","'EmCare.B10S2.DE05E'"," from " ]
                  }, {
                     "r" : "206",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Frequent cough at night'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "206",
               "name" : "EmCare"
            }
         }, {
            "localId" : "209",
            "name" : "Child known to have asthma",
            "id" : "EmCare.B10S2.DE05F",
            "display" : "Child known to have asthma",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "209",
                  "s" : [ {
                     "value" : [ "","code ","\"Child known to have asthma\"",": ","'EmCare.B10S2.DE05F'"," from " ]
                  }, {
                     "r" : "208",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Child known to have asthma'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "208",
               "name" : "EmCare"
            }
         }, {
            "localId" : "211",
            "name" : "Oxygen Saturation",
            "id" : "EmCare.B10S2.DE07",
            "display" : "Oxygen Saturation",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "211",
                  "s" : [ {
                     "value" : [ "","code ","\"Oxygen Saturation\"",": ","'EmCare.B10S2.DE07'"," from " ]
                  }, {
                     "r" : "210",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Oxygen Saturation'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "210",
               "name" : "EmCare"
            }
         }, {
            "localId" : "213",
            "name" : "Sunken eyes",
            "id" : "EmCare.B11S2.DE01",
            "display" : "Sunken eyes",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "213",
                  "s" : [ {
                     "value" : [ "","code ","\"Sunken eyes\"",": ","'EmCare.B11S2.DE01'"," from " ]
                  }, {
                     "r" : "212",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Sunken eyes'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "212",
               "name" : "EmCare"
            }
         }, {
            "localId" : "215",
            "name" : "Yellow eyes",
            "id" : "EmCare.B12S2.DE06",
            "display" : "Yellow eyes",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "215",
                  "s" : [ {
                     "value" : [ "","code ","\"Yellow eyes\"",": ","'EmCare.B12S2.DE06'"," from " ]
                  }, {
                     "r" : "214",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Yellow eyes'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "214",
               "name" : "EmCare"
            }
         }, {
            "localId" : "217",
            "name" : "Abnormal Bleeding",
            "id" : "EmCare.B12S2.DE07",
            "display" : "Abnormal Bleeding",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "217",
                  "s" : [ {
                     "value" : [ "","code ","\"Abnormal Bleeding\"",": ","'EmCare.B12S2.DE07'"," from " ]
                  }, {
                     "r" : "216",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Abnormal Bleeding'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "216",
               "name" : "EmCare"
            }
         }, {
            "localId" : "219",
            "name" : "Coca-Cola urine",
            "id" : "EmCare.B12S2.DE08",
            "display" : "Coca-Cola urine",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "219",
                  "s" : [ {
                     "value" : [ "","code ","\"Coca-Cola urine\"",": ","'EmCare.B12S2.DE08'"," from " ]
                  }, {
                     "r" : "218",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Coca-Cola urine'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "218",
               "name" : "EmCare"
            }
         }, {
            "localId" : "221",
            "name" : "Tender swelling behind the ear",
            "id" : "EmCare.B13S2.DE01",
            "display" : "Tender swelling behind the ear",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "221",
                  "s" : [ {
                     "value" : [ "","code ","\"Tender swelling behind the ear\"",": ","'EmCare.B13S2.DE01'"," from " ]
                  }, {
                     "r" : "220",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Tender swelling behind the ear'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "220",
               "name" : "EmCare"
            }
         }, {
            "localId" : "223",
            "name" : "Pus Seen Draining from the Ear",
            "id" : "EmCare.B13S2.DE02",
            "display" : "Pus Seen Draining from the Ear",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "223",
                  "s" : [ {
                     "value" : [ "","code ","\"Pus Seen Draining from the Ear\"",": ","'EmCare.B13S2.DE02'"," from " ]
                  }, {
                     "r" : "222",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Pus Seen Draining from the Ear'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "222",
               "name" : "EmCare"
            }
         }, {
            "localId" : "225",
            "name" : "Pus Seen Draining from the Ear for how long?",
            "id" : "EmCare.B13S2.DE03",
            "display" : "Pus Seen Draining from the Ear for how long?",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "225",
                  "s" : [ {
                     "value" : [ "","code ","\"Pus Seen Draining from the Ear for how long?\"",": ","'EmCare.B13S2.DE03'"," from " ]
                  }, {
                     "r" : "224",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Pus Seen Draining from the Ear for how long?'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "224",
               "name" : "EmCare"
            }
         }, {
            "localId" : "227",
            "name" : "Stiff neck",
            "id" : "EmCare.B12S2.DE01",
            "display" : "Stiff neck",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "227",
                  "s" : [ {
                     "value" : [ "","code ","\"Stiff neck\"",": ","'EmCare.B12S2.DE01'"," from " ]
                  }, {
                     "r" : "226",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Stiff neck'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "226",
               "name" : "EmCare"
            }
         }, {
            "localId" : "229",
            "name" : "Refusal to use a limb",
            "id" : "EmCare.B12S2.DE02",
            "display" : "Refusal to use a limb",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "229",
                  "s" : [ {
                     "value" : [ "","code ","\"Refusal to use a limb\"",": ","'EmCare.B12S2.DE02'"," from " ]
                  }, {
                     "r" : "228",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Refusal to use a limb'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "228",
               "name" : "EmCare"
            }
         }, {
            "localId" : "231",
            "name" : "Warm Tender or Swollen Joint or Bone",
            "id" : "EmCare.B12S2.DE03",
            "display" : "Warm Tender or Swollen Joint or Bone",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "231",
                  "s" : [ {
                     "value" : [ "","code ","\"Warm Tender or Swollen Joint or Bone\"",": ","'EmCare.B12S2.DE03'"," from " ]
                  }, {
                     "r" : "230",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Warm Tender or Swollen Joint or Bone'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "230",
               "name" : "EmCare"
            }
         }, {
            "localId" : "233",
            "name" : "Runny nose",
            "id" : "EmCare.B12S2.DE05",
            "display" : "Runny nose",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "233",
                  "s" : [ {
                     "value" : [ "","code ","\"Runny nose\"",": ","'EmCare.B12S2.DE05'"," from " ]
                  }, {
                     "r" : "232",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Runny nose'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "232",
               "name" : "EmCare"
            }
         }, {
            "localId" : "235",
            "name" : "Large lymph nodes on two or more sites",
            "id" : "EmCare.B13S2.DE06",
            "display" : "Large lymph nodes on two or more sites",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "235",
                  "s" : [ {
                     "value" : [ "","code ","\"Large lymph nodes on two or more sites\"",": ","'EmCare.B13S2.DE06'"," from " ]
                  }, {
                     "r" : "234",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Large lymph nodes on two or more sites'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "234",
               "name" : "EmCare"
            }
         }, {
            "localId" : "237",
            "name" : "Red eyes",
            "id" : "EmCare.B14S2.DE01",
            "display" : "Red eyes",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "237",
                  "s" : [ {
                     "value" : [ "","code ","\"Red eyes\"",": ","'EmCare.B14S2.DE01'"," from " ]
                  }, {
                     "r" : "236",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Red eyes'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "236",
               "name" : "EmCare"
            }
         }, {
            "localId" : "239",
            "name" : "Pus Draining from Eye",
            "id" : "EmCare.B14S2.DE02",
            "display" : "Pus Draining from Eye",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "239",
                  "s" : [ {
                     "value" : [ "","code ","\"Pus Draining from Eye\"",": ","'EmCare.B14S2.DE02'"," from " ]
                  }, {
                     "r" : "238",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Pus Draining from Eye'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "238",
               "name" : "EmCare"
            }
         }, {
            "localId" : "241",
            "name" : "Clouding of the Cornea",
            "id" : "EmCare.B14S2.DE03",
            "display" : "Clouding of the Cornea",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "241",
                  "s" : [ {
                     "value" : [ "","code ","\"Clouding of the Cornea\"",": ","'EmCare.B14S2.DE03'"," from " ]
                  }, {
                     "r" : "240",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Clouding of the Cornea'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "240",
               "name" : "EmCare"
            }
         }, {
            "localId" : "243",
            "name" : "Is Clouding of the Cornea a new problem",
            "id" : "EmCare.B14S2.DE04",
            "display" : "Is Clouding of the Cornea a new problem",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "243",
                  "s" : [ {
                     "value" : [ "","code ","\"Is Clouding of the Cornea a new problem\"",": ","'EmCare.B14S2.DE04'"," from " ]
                  }, {
                     "r" : "242",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Is Clouding of the Cornea a new problem'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "242",
               "name" : "EmCare"
            }
         }, {
            "localId" : "245",
            "name" : "Has Clouding of the Cornea previously been treated",
            "id" : "EmCare.B14S2.DE05",
            "display" : "Has Clouding of the Cornea previously been treated",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "245",
                  "s" : [ {
                     "value" : [ "","code ","\"Has Clouding of the Cornea previously been treated\"",": ","'EmCare.B14S2.DE05'"," from " ]
                  }, {
                     "r" : "244",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Has Clouding of the Cornea previously been treated'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "244",
               "name" : "EmCare"
            }
         }, {
            "localId" : "247",
            "name" : "Generalised or Localised Skin Problem",
            "id" : "EmCare.B14S2.DE06",
            "display" : "Generalised or Localised Skin Problem",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "247",
                  "s" : [ {
                     "value" : [ "","code ","\"Generalised or Localised Skin Problem\"",": ","'EmCare.B14S2.DE06'"," from " ]
                  }, {
                     "r" : "246",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Generalised or Localised Skin Problem'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "246",
               "name" : "EmCare"
            }
         }, {
            "localId" : "249",
            "name" : "Measles Rash",
            "id" : "EmCare.B14S2.DE10",
            "display" : "Measles Rash",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "249",
                  "s" : [ {
                     "value" : [ "","code ","\"Measles Rash\"",": ","'EmCare.B14S2.DE10'"," from " ]
                  }, {
                     "r" : "248",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Measles Rash'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "248",
               "name" : "EmCare"
            }
         }, {
            "localId" : "251",
            "name" : "Measles within the last 3 months",
            "id" : "EmCare.B14S2.DE11",
            "display" : "Measles within the last 3 months",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "251",
                  "s" : [ {
                     "value" : [ "","code ","\"Measles within the last 3 months\"",": ","'EmCare.B14S2.DE11'"," from " ]
                  }, {
                     "r" : "250",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Measles within the last 3 months'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "250",
               "name" : "EmCare"
            }
         }, {
            "localId" : "253",
            "name" : "Blisters, Sores or Pustules",
            "id" : "EmCare.B14S2.DE12",
            "display" : "Blisters, Sores or Pustules",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "253",
                  "s" : [ {
                     "value" : [ "","code ","\"Blisters, Sores or Pustules\"",": ","'EmCare.B14S2.DE12'"," from " ]
                  }, {
                     "r" : "252",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Blisters, Sores or Pustules'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "252",
               "name" : "EmCare"
            }
         }, {
            "localId" : "255",
            "name" : "Type of Skin Problem",
            "id" : "EmCare.B14S2.DE13",
            "display" : "Type of Skin Problem",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "255",
                  "s" : [ {
                     "value" : [ "","code ","\"Type of Skin Problem\"",": ","'EmCare.B14S2.DE13'"," from " ]
                  }, {
                     "r" : "254",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Type of Skin Problem'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "254",
               "name" : "EmCare"
            }
         }, {
            "localId" : "257",
            "name" : "Rapidly spreading, extensive, or not responding to oral antibiotics",
            "id" : "EmCare.B14S2.DE17",
            "display" : "Rapidly spreading, extensive, or not responding to oral antibiotics",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "257",
                  "s" : [ {
                     "value" : [ "","code ","\"Rapidly spreading, extensive, or not responding to oral antibiotics\"",": ","'EmCare.B14S2.DE17'"," from " ]
                  }, {
                     "r" : "256",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Rapidly spreading, extensive, or not responding to oral antibiotics'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "256",
               "name" : "EmCare"
            }
         }, {
            "localId" : "259",
            "name" : "Scalp Infection (tinea capitis)",
            "id" : "EmCare.B14S2.DE19a",
            "display" : "Scalp Infection (tinea capitis)",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "259",
                  "s" : [ {
                     "value" : [ "","code ","\"Scalp Infection (tinea capitis)\"",": ","'EmCare.B14S2.DE19a'"," from " ]
                  }, {
                     "r" : "258",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Scalp Infection (tinea capitis)'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "258",
               "name" : "EmCare"
            }
         }, {
            "localId" : "261",
            "name" : "Severe rash",
            "id" : "EmCare.B14S2.DE22A",
            "display" : "Severe rash",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "261",
                  "s" : [ {
                     "value" : [ "","code ","\"Severe rash\"",": ","'EmCare.B14S2.DE22A'"," from " ]
                  }, {
                     "r" : "260",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Severe rash'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "260",
               "name" : "EmCare"
            }
         }, {
            "localId" : "263",
            "name" : "Disseminated Herpes Zoster",
            "id" : "EmCare.B14S2.DE23a",
            "display" : "Disseminated Herpes Zoster",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "263",
                  "s" : [ {
                     "value" : [ "","code ","\"Disseminated Herpes Zoster\"",": ","'EmCare.B14S2.DE23a'"," from " ]
                  }, {
                     "r" : "262",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Disseminated Herpes Zoster'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "262",
               "name" : "EmCare"
            }
         }, {
            "localId" : "265",
            "name" : "Eye Involvement",
            "id" : "EmCare.B14S2.DE24",
            "display" : "Eye Involvement",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "265",
                  "s" : [ {
                     "value" : [ "","code ","\"Eye Involvement\"",": ","'EmCare.B14S2.DE24'"," from " ]
                  }, {
                     "r" : "264",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Eye Involvement'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "264",
               "name" : "EmCare"
            }
         }, {
            "localId" : "267",
            "name" : "Signs of Severe Impetigo / Folliculitis",
            "id" : "EmCare.B14S2.DE26",
            "display" : "Signs of Severe Impetigo / Folliculitis",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "267",
                  "s" : [ {
                     "value" : [ "","code ","\"Signs of Severe Impetigo / Folliculitis\"",": ","'EmCare.B14S2.DE26'"," from " ]
                  }, {
                     "r" : "266",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Signs of Severe Impetigo / Folliculitis'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "266",
               "name" : "EmCare"
            }
         }, {
            "localId" : "269",
            "name" : "Extensive impetigo lesions",
            "id" : "EmCare.B14S2.DE30b",
            "display" : "Extensive impetigo lesions",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "269",
                  "s" : [ {
                     "value" : [ "","code ","\"Extensive impetigo lesions\"",": ","'EmCare.B14S2.DE30b'"," from " ]
                  }, {
                     "r" : "268",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Extensive impetigo lesions'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "268",
               "name" : "EmCare"
            }
         }, {
            "localId" : "271",
            "name" : "Extensive molluscum lesions",
            "id" : "EmCare.B14S2.DE31a",
            "display" : "Extensive molluscum lesions",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "271",
                  "s" : [ {
                     "value" : [ "","code ","\"Extensive molluscum lesions\"",": ","'EmCare.B14S2.DE31a'"," from " ]
                  }, {
                     "r" : "270",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Extensive molluscum lesions'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "270",
               "name" : "EmCare"
            }
         }, {
            "localId" : "273",
            "name" : "Molluscum lesions close to the eye",
            "id" : "EmCare.B14S2.DE31b",
            "display" : "Molluscum lesions close to the eye",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "273",
                  "s" : [ {
                     "value" : [ "","code ","\"Molluscum lesions close to the eye\"",": ","'EmCare.B14S2.DE31b'"," from " ]
                  }, {
                     "r" : "272",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Molluscum lesions close to the eye'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "272",
               "name" : "EmCare"
            }
         }, {
            "localId" : "275",
            "name" : "Extensive warts",
            "id" : "EmCare.B14S2.DE32a",
            "display" : "Extensive warts",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "275",
                  "s" : [ {
                     "value" : [ "","code ","\"Extensive warts\"",": ","'EmCare.B14S2.DE32a'"," from " ]
                  }, {
                     "r" : "274",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Extensive warts'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "274",
               "name" : "EmCare"
            }
         }, {
            "localId" : "277",
            "name" : "Severe Seborrhoea",
            "id" : "EmCare.B14S2.DE34",
            "display" : "Severe Seborrhoea",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "277",
                  "s" : [ {
                     "value" : [ "","code ","\"Severe Seborrhoea\"",": ","'EmCare.B14S2.DE34'"," from " ]
                  }, {
                     "r" : "276",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Severe Seborrhoea'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "276",
               "name" : "EmCare"
            }
         }, {
            "localId" : "279",
            "name" : "Secondary bacterial infection of eczema",
            "id" : "EmCare.B14S2.DE36a",
            "display" : "Secondary bacterial infection of eczema",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "279",
                  "s" : [ {
                     "value" : [ "","code ","\"Secondary bacterial infection of eczema\"",": ","'EmCare.B14S2.DE36a'"," from " ]
                  }, {
                     "r" : "278",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Secondary bacterial infection of eczema'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "278",
               "name" : "EmCare"
            }
         }, {
            "localId" : "281",
            "name" : "Severe acute moist or weeping eczema",
            "id" : "EmCare.B14S2.DE36b",
            "display" : "Severe acute moist or weeping eczema",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "281",
                  "s" : [ {
                     "value" : [ "","code ","\"Severe acute moist or weeping eczema\"",": ","'EmCare.B14S2.DE36b'"," from " ]
                  }, {
                     "r" : "280",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Severe acute moist or weeping eczema'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "280",
               "name" : "EmCare"
            }
         }, {
            "localId" : "283",
            "name" : "Secondary herpes infection of eczema (eczema herpeticum)",
            "id" : "EmCare.B14S2.DE36c",
            "display" : "Secondary herpes infection of eczema (eczema herpeticum)",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "283",
                  "s" : [ {
                     "value" : [ "","code ","\"Secondary herpes infection of eczema (eczema herpeticum)\"",": ","'EmCare.B14S2.DE36c'"," from " ]
                  }, {
                     "r" : "282",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Secondary herpes infection of eczema (eczema herpeticum)'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "282",
               "name" : "EmCare"
            }
         }, {
            "localId" : "285",
            "name" : "Oral sores or Mouth Ulcers",
            "id" : "EmCare.B14S2.DE38",
            "display" : "Oral sores or Mouth Ulcers",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "285",
                  "s" : [ {
                     "value" : [ "","code ","\"Oral sores or Mouth Ulcers\"",": ","'EmCare.B14S2.DE38'"," from " ]
                  }, {
                     "r" : "284",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Oral sores or Mouth Ulcers'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "284",
               "name" : "EmCare"
            }
         }, {
            "localId" : "287",
            "name" : "Add a Skin or Mouth or Eye Problem",
            "id" : "EmCare.B14S2.DE43",
            "display" : "Add a Skin or Mouth or Eye Problem",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "287",
                  "s" : [ {
                     "value" : [ "","code ","\"Add a Skin or Mouth or Eye Problem\"",": ","'EmCare.B14S2.DE43'"," from " ]
                  }, {
                     "r" : "286",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Add a Skin or Mouth or Eye Problem'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "286",
               "name" : "EmCare"
            }
         }, {
            "localId" : "289",
            "name" : "Palmar Pallor",
            "id" : "EmCare.B15S2.DE01",
            "display" : "Palmar Pallor",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "289",
                  "s" : [ {
                     "value" : [ "","code ","\"Palmar Pallor\"",": ","'EmCare.B15S2.DE01'"," from " ]
                  }, {
                     "r" : "288",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Palmar Pallor'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "288",
               "name" : "EmCare"
            }
         }, {
            "localId" : "291",
            "name" : "Oedema of both feet",
            "id" : "EmCare.B16S2.DE01",
            "display" : "Oedema of both feet",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "291",
                  "s" : [ {
                     "value" : [ "","code ","\"Oedema of both feet\"",": ","'EmCare.B16S2.DE01'"," from " ]
                  }, {
                     "r" : "290",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Oedema of both feet'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "290",
               "name" : "EmCare"
            }
         }, {
            "localId" : "293",
            "name" : "Open skin lesions",
            "id" : "EmCare.B16S2.DE02",
            "display" : "Open skin lesions",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "293",
                  "s" : [ {
                     "value" : [ "","code ","\"Open skin lesions\"",": ","'EmCare.B16S2.DE02'"," from " ]
                  }, {
                     "r" : "292",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Open skin lesions'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "292",
               "name" : "EmCare"
            }
         }, {
            "localId" : "295",
            "name" : "Visible and severe weight loss",
            "id" : "EmCare.B16S2.DE03",
            "display" : "Visible and severe weight loss",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "295",
                  "s" : [ {
                     "value" : [ "","code ","\"Visible and severe weight loss\"",": ","'EmCare.B16S2.DE03'"," from " ]
                  }, {
                     "r" : "294",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Visible and severe weight loss'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "294",
               "name" : "EmCare"
            }
         }, {
            "localId" : "297",
            "name" : "Mumps/parotitis: Swelling around cheek/jaw",
            "id" : "EmCare.B17S1.DE01",
            "display" : "Mumps/parotitis: Swelling around cheek/jaw",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "297",
                  "s" : [ {
                     "value" : [ "","code ","\"Mumps/parotitis: Swelling around cheek/jaw\"",": ","'EmCare.B17S1.DE01'"," from " ]
                  }, {
                     "r" : "296",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Mumps/parotitis: Swelling around cheek/jaw'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "296",
               "name" : "EmCare"
            }
         }, {
            "localId" : "299",
            "name" : "Duration of Mumps",
            "id" : "EmCare.B17S1.DE02",
            "display" : "Duration of Mumps",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "299",
                  "s" : [ {
                     "value" : [ "","code ","\"Duration of Mumps\"",": ","'EmCare.B17S1.DE02'"," from " ]
                  }, {
                     "r" : "298",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Duration of Mumps'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "298",
               "name" : "EmCare"
            }
         }, {
            "localId" : "301",
            "name" : "Date of Last Vitamin A Supplementation",
            "id" : "EmCare.B17.DE01",
            "display" : "Date of Last Vitamin A Supplementation",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "301",
                  "s" : [ {
                     "value" : [ "","code ","\"Date of Last Vitamin A Supplementation\"",": ","'EmCare.B17.DE01'"," from " ]
                  }, {
                     "r" : "300",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Date of Last Vitamin A Supplementation'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "300",
               "name" : "EmCare"
            }
         }, {
            "localId" : "303",
            "name" : "Can record of Vitamin A Supplementation be obtained at a future visit?",
            "id" : "EmCare.B17.DE05",
            "display" : "Can record of Vitamin A Supplementation be obtained at a future visit?",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "303",
                  "s" : [ {
                     "value" : [ "","code ","\"Can record of Vitamin A Supplementation be obtained at a future visit?\"",": ","'EmCare.B17.DE05'"," from " ]
                  }, {
                     "r" : "302",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Can record of Vitamin A Supplementation be obtained at a future visit?'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "302",
               "name" : "EmCare"
            }
         }, {
            "localId" : "305",
            "name" : "Treatment for malnutrition containing Vitamin A received in the past month?",
            "id" : "EmCare.B17.DE11",
            "display" : "Treatment for malnutrition containing Vitamin A received in the past month?",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "305",
                  "s" : [ {
                     "value" : [ "","code ","\"Treatment for malnutrition containing Vitamin A received in the past month?\"",": ","'EmCare.B17.DE11'"," from " ]
                  }, {
                     "r" : "304",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Treatment for malnutrition containing Vitamin A received in the past month?'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "304",
               "name" : "EmCare"
            }
         }, {
            "localId" : "307",
            "name" : "Date of last deworming treatment",
            "id" : "EmCare.B17.DE12",
            "display" : "Date of last deworming treatment",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "307",
                  "s" : [ {
                     "value" : [ "","code ","\"Date of last deworming treatment\"",": ","'EmCare.B17.DE12'"," from " ]
                  }, {
                     "r" : "306",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Date of last deworming treatment'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "306",
               "name" : "EmCare"
            }
         }, {
            "localId" : "309",
            "name" : "Can record of Deworming treatment be obtained at a future visit?",
            "id" : "EmCare.B17.DE16",
            "display" : "Can record of Deworming treatment be obtained at a future visit?",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "309",
                  "s" : [ {
                     "value" : [ "","code ","\"Can record of Deworming treatment be obtained at a future visit?\"",": ","'EmCare.B17.DE16'"," from " ]
                  }, {
                     "r" : "308",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Can record of Deworming treatment be obtained at a future visit?'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "308",
               "name" : "EmCare"
            }
         }, {
            "localId" : "311",
            "name" : "Mother viral hepatitis B test result",
            "id" : "EmCare.B17.DE62",
            "display" : "Mother viral hepatitis B test result",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "311",
                  "s" : [ {
                     "value" : [ "","code ","\"Mother viral hepatitis B test result\"",": ","'EmCare.B17.DE62'"," from " ]
                  }, {
                     "r" : "310",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Mother viral hepatitis B test result'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "310",
               "name" : "EmCare"
            }
         }, {
            "localId" : "313",
            "name" : "Infant vaccinated for viral hepatitis B",
            "id" : "EmCare.B17.DE67",
            "display" : "Infant vaccinated for viral hepatitis B",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "313",
                  "s" : [ {
                     "value" : [ "","code ","\"Infant vaccinated for viral hepatitis B\"",": ","'EmCare.B17.DE67'"," from " ]
                  }, {
                     "r" : "312",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Infant vaccinated for viral hepatitis B'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "312",
               "name" : "EmCare"
            }
         }, {
            "localId" : "315",
            "name" : "HIV Prevalence",
            "id" : "EmCare.B17.DE22",
            "display" : "HIV Prevalence",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "315",
                  "s" : [ {
                     "value" : [ "","code ","\"HIV Prevalence\"",": ","'EmCare.B17.DE22'"," from " ]
                  }, {
                     "r" : "314",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'HIV Prevalence'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "314",
               "name" : "EmCare"
            }
         }, {
            "localId" : "317",
            "name" : "Child followed up at PMTCT for HIV investigation or management",
            "id" : "EmCare.B17.DE44A",
            "display" : "Child followed up at PMTCT for HIV investigation or management",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "317",
                  "s" : [ {
                     "value" : [ "","code ","\"Child followed up at PMTCT for HIV investigation or management\"",": ","'EmCare.B17.DE44A'"," from " ]
                  }, {
                     "r" : "316",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Child followed up at PMTCT for HIV investigation or management'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "316",
               "name" : "EmCare"
            }
         }, {
            "localId" : "319",
            "name" : "PMTCT HIV Status",
            "id" : "EmCare.B17.DE44D",
            "display" : "PMTCT HIV Status",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "319",
                  "s" : [ {
                     "value" : [ "","code ","\"PMTCT HIV Status\"",": ","'EmCare.B17.DE44D'"," from " ]
                  }, {
                     "r" : "318",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'PMTCT HIV Status'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "318",
               "name" : "EmCare"
            }
         }, {
            "localId" : "321",
            "name" : "Household member with Tuberculosis in the past 5 years",
            "id" : "EmCare.B17.DE44G",
            "display" : "Household member with Tuberculosis in the past 5 years",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "321",
                  "s" : [ {
                     "value" : [ "","code ","\"Household member with Tuberculosis in the past 5 years\"",": ","'EmCare.B17.DE44G'"," from " ]
                  }, {
                     "r" : "320",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Household member with Tuberculosis in the past 5 years'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "320",
               "name" : "EmCare"
            }
         }, {
            "localId" : "323",
            "name" : "Mother's HIV Status",
            "id" : "EmCare.B17.DE25",
            "display" : "Mother's HIV Status",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "323",
                  "s" : [ {
                     "value" : [ "","code ","\"Mother's HIV Status\"",": ","'EmCare.B17.DE25'"," from " ]
                  }, {
                     "r" : "322",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Mother\\'s HIV Status'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "322",
               "name" : "EmCare"
            }
         }, {
            "localId" : "325",
            "name" : "Child's Last HIV Test Results",
            "id" : "EmCare.B17.DE30",
            "display" : "Child's Last HIV Test Results",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "325",
                  "s" : [ {
                     "value" : [ "","code ","\"Child's Last HIV Test Results\"",": ","'EmCare.B17.DE30'"," from " ]
                  }, {
                     "r" : "324",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Child\\'s Last HIV Test Results'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "324",
               "name" : "EmCare"
            }
         }, {
            "localId" : "327",
            "name" : "Child breastfed at the time or 6 weeks before HIV test",
            "id" : "EmCare.B17.DE37",
            "display" : "Child breastfed at the time or 6 weeks before HIV test",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "327",
                  "s" : [ {
                     "value" : [ "","code ","\"Child breastfed at the time or 6 weeks before HIV test\"",": ","'EmCare.B17.DE37'"," from " ]
                  }, {
                     "r" : "326",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Child breastfed at the time or 6 weeks before HIV test'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "326",
               "name" : "EmCare"
            }
         }, {
            "localId" : "329",
            "name" : "Child 18 months or older when last tested for HIV",
            "id" : "EmCare.B17.DE41",
            "display" : "Child 18 months or older when last tested for HIV",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "329",
                  "s" : [ {
                     "value" : [ "","code ","\"Child 18 months or older when last tested for HIV\"",": ","'EmCare.B17.DE41'"," from " ]
                  }, {
                     "r" : "328",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Child 18 months or older when last tested for HIV'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "328",
               "name" : "EmCare"
            }
         }, {
            "localId" : "331",
            "name" : "Check the child’s vaccination record: has the child received all vaccines they are eligible for",
            "id" : "EmCare.B17.DE45",
            "display" : "Check the child’s vaccination record: has the child received all vaccines they are eligible for",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "331",
                  "s" : [ {
                     "value" : [ "","code ","\"Check the child’s vaccination record: has the child received all vaccines they are eligible for\"",": ","'EmCare.B17.DE45'"," from " ]
                  }, {
                     "r" : "330",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Check the child’s vaccination record: has the child received all vaccines they are eligible for'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "330",
               "name" : "EmCare"
            }
         }, {
            "localId" : "333",
            "name" : "Immunizations for Age",
            "id" : "EmCare.B17.DE50",
            "display" : "Immunizations for Age",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "333",
                  "s" : [ {
                     "value" : [ "","code ","\"Immunizations for Age\"",": ","'EmCare.B17.DE50'"," from " ]
                  }, {
                     "r" : "332",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Immunizations for Age'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "332",
               "name" : "EmCare"
            }
         }, {
            "localId" : "335",
            "name" : "Oral Fluid Test Results",
            "id" : "EmCare.B22.DE08",
            "display" : "Oral Fluid Test Results",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "335",
                  "s" : [ {
                     "value" : [ "","code ","\"Oral Fluid Test Results\"",": ","'EmCare.B22.DE08'"," from " ]
                  }, {
                     "r" : "334",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Oral Fluid Test Results'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "334",
               "name" : "EmCare"
            }
         }, {
            "localId" : "337",
            "name" : "Unable to Perform Oral Fluid Test",
            "id" : "EmCare.B22.DE14",
            "display" : "Unable to Perform Oral Fluid Test",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "337",
                  "s" : [ {
                     "value" : [ "","code ","\"Unable to Perform Oral Fluid Test\"",": ","'EmCare.B22.DE14'"," from " ]
                  }, {
                     "r" : "336",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Unable to Perform Oral Fluid Test'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "336",
               "name" : "EmCare"
            }
         }, {
            "localId" : "339",
            "name" : "Completely Unable to Drink or Vomits Immediately / Everything",
            "id" : "EmCare.B22.DE14a",
            "display" : "Completely Unable to Drink or Vomits Immediately / Everything",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "339",
                  "s" : [ {
                     "value" : [ "","code ","\"Completely Unable to Drink or Vomits Immediately / Everything\"",": ","'EmCare.B22.DE14a'"," from " ]
                  }, {
                     "r" : "338",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Completely Unable to Drink or Vomits Immediately / Everything'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "338",
               "name" : "EmCare"
            }
         }, {
            "localId" : "341",
            "name" : "Has the Child had anything to drink today?",
            "id" : "EmCare.B22.DE15",
            "display" : "Has the Child had anything to drink today?",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "341",
                  "s" : [ {
                     "value" : [ "","code ","\"Has the Child had anything to drink today?\"",": ","'EmCare.B22.DE15'"," from " ]
                  }, {
                     "r" : "340",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Has the Child had anything to drink today?'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "340",
               "name" : "EmCare"
            }
         }, {
            "localId" : "343",
            "name" : "How did the child last drink",
            "id" : "EmCare.B22.DE16",
            "display" : "How did the child last drink",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "343",
                  "s" : [ {
                     "value" : [ "","code ","\"How did the child last drink\"",": ","'EmCare.B22.DE16'"," from " ]
                  }, {
                     "r" : "342",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'How did the child last drink'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "342",
               "name" : "EmCare"
            }
         }, {
            "localId" : "345",
            "name" : "Respiratory Rate (breaths per minute)",
            "id" : "EmCare.B22.DE01",
            "display" : "Respiratory Rate (breaths per minute)",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "345",
                  "s" : [ {
                     "value" : [ "","code ","\"Respiratory Rate (breaths per minute)\"",": ","'EmCare.B22.DE01'"," from " ]
                  }, {
                     "r" : "344",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Respiratory Rate (breaths per minute)'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "344",
               "name" : "EmCare"
            }
         }, {
            "localId" : "347",
            "name" : "Unable to perform Respiratory Rate at this time",
            "id" : "EmCare.B22.DE02",
            "display" : "Unable to perform Respiratory Rate at this time",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "347",
                  "s" : [ {
                     "value" : [ "","code ","\"Unable to perform Respiratory Rate at this time\"",": ","'EmCare.B22.DE02'"," from " ]
                  }, {
                     "r" : "346",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Unable to perform Respiratory Rate at this time'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "346",
               "name" : "EmCare"
            }
         }, {
            "localId" : "349",
            "name" : "Respiratory Rate Second Count (breaths per minute)",
            "id" : "EmCare.B22.DE04",
            "display" : "Respiratory Rate Second Count (breaths per minute)",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "349",
                  "s" : [ {
                     "value" : [ "","code ","\"Respiratory Rate Second Count (breaths per minute)\"",": ","'EmCare.B22.DE04'"," from " ]
                  }, {
                     "r" : "348",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Respiratory Rate Second Count (breaths per minute)'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "348",
               "name" : "EmCare"
            }
         }, {
            "localId" : "351",
            "name" : "Respiratory Rate Second Count Not Possible",
            "id" : "EmCare.B22.DE05",
            "display" : "Respiratory Rate Second Count Not Possible",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "351",
                  "s" : [ {
                     "value" : [ "","code ","\"Respiratory Rate Second Count Not Possible\"",": ","'EmCare.B22.DE05'"," from " ]
                  }, {
                     "r" : "350",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Respiratory Rate Second Count Not Possible'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "350",
               "name" : "EmCare"
            }
         }, {
            "localId" : "353",
            "name" : "Fast Breathing",
            "id" : "EmCare.B22.DE07",
            "display" : "Fast Breathing",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "353",
                  "s" : [ {
                     "value" : [ "","code ","\"Fast Breathing\"",": ","'EmCare.B22.DE07'"," from " ]
                  }, {
                     "r" : "352",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Fast Breathing'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "352",
               "name" : "EmCare"
            }
         }, {
            "localId" : "355",
            "name" : "Inhaled Bronchodilator Trial Results",
            "id" : "EmCare.B22.DE17",
            "display" : "Inhaled Bronchodilator Trial Results",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "355",
                  "s" : [ {
                     "value" : [ "","code ","\"Inhaled Bronchodilator Trial Results\"",": ","'EmCare.B22.DE17'"," from " ]
                  }, {
                     "r" : "354",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Inhaled Bronchodilator Trial Results'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "354",
               "name" : "EmCare"
            }
         }, {
            "localId" : "357",
            "name" : "Inhaled Bronchodilator Trial Not Feasible or Available",
            "id" : "EmCare.B22.DE22",
            "display" : "Inhaled Bronchodilator Trial Not Feasible or Available",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "357",
                  "s" : [ {
                     "value" : [ "","code ","\"Inhaled Bronchodilator Trial Not Feasible or Available\"",": ","'EmCare.B22.DE22'"," from " ]
                  }, {
                     "r" : "356",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Inhaled Bronchodilator Trial Not Feasible or Available'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "356",
               "name" : "EmCare"
            }
         }, {
            "localId" : "359",
            "name" : "No Fast Breathing and No Chest Indrawing (post Inhaled Bronchodilator Trial)",
            "id" : "EmCare.B22.DE21",
            "display" : "No Fast Breathing and No Chest Indrawing (post Inhaled Bronchodilator Trial)",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "359",
                  "s" : [ {
                     "value" : [ "","code ","\"No Fast Breathing and No Chest Indrawing (post Inhaled Bronchodilator Trial)\"",": ","'EmCare.B22.DE21'"," from " ]
                  }, {
                     "r" : "358",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'No Fast Breathing and No Chest Indrawing (post Inhaled Bronchodilator Trial)'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "358",
               "name" : "EmCare"
            }
         }, {
            "localId" : "361",
            "name" : "Poor positioning",
            "id" : "EmCare.B24.G.DE28",
            "display" : "Poor positioning",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "361",
                  "s" : [ {
                     "value" : [ "","code ","\"Poor positioning\"",": ","'EmCare.B24.G.DE28'"," from " ]
                  }, {
                     "r" : "360",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Poor positioning'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "360",
               "name" : "EmCare"
            }
         }, {
            "localId" : "363",
            "name" : "Good Attachment",
            "id" : "EmCare.B24.G.DE34",
            "display" : "Good Attachment",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "363",
                  "s" : [ {
                     "value" : [ "","code ","\"Good Attachment\"",": ","'EmCare.B24.G.DE34'"," from " ]
                  }, {
                     "r" : "362",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Good Attachment'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "362",
               "name" : "EmCare"
            }
         }, {
            "localId" : "365",
            "name" : "Sucking Effectively",
            "id" : "EmCare.B24.G.DE35",
            "display" : "Sucking Effectively",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "365",
                  "s" : [ {
                     "value" : [ "","code ","\"Sucking Effectively\"",": ","'EmCare.B24.G.DE35'"," from " ]
                  }, {
                     "r" : "364",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Sucking Effectively'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "364",
               "name" : "EmCare"
            }
         }, {
            "localId" : "367",
            "name" : "Difficulty Breastfeeding Observed",
            "id" : "EmCare.B24.G.DE37",
            "display" : "Difficulty Breastfeeding Observed",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "367",
                  "s" : [ {
                     "value" : [ "","code ","\"Difficulty Breastfeeding Observed\"",": ","'EmCare.B24.G.DE37'"," from " ]
                  }, {
                     "r" : "366",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Difficulty Breastfeeding Observed'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "366",
               "name" : "EmCare"
            }
         }, {
            "localId" : "369",
            "name" : "Breastfeeding Assessment Not Possible",
            "id" : "EmCare.B24.G.DE38",
            "display" : "Breastfeeding Assessment Not Possible",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "369",
                  "s" : [ {
                     "value" : [ "","code ","\"Breastfeeding Assessment Not Possible\"",": ","'EmCare.B24.G.DE38'"," from " ]
                  }, {
                     "r" : "368",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Breastfeeding Assessment Not Possible'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "368",
               "name" : "EmCare"
            }
         }, {
            "localId" : "371",
            "name" : "Appetite Test (using RUTF) Results",
            "id" : "EmCare.B24.G.DE23",
            "display" : "Appetite Test (using RUTF) Results",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "371",
                  "s" : [ {
                     "value" : [ "","code ","\"Appetite Test (using RUTF) Results\"",": ","'EmCare.B24.G.DE23'"," from " ]
                  }, {
                     "r" : "370",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Appetite Test (using RUTF) Results'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "370",
               "name" : "EmCare"
            }
         }, {
            "localId" : "373",
            "name" : "Hemoglobin (Hb) g/dL",
            "id" : "EmCare.B22.DE81",
            "display" : "Hemoglobin (Hb) g/dL",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "373",
                  "s" : [ {
                     "value" : [ "","code ","\"Hemoglobin (Hb) g/dL\"",": ","'EmCare.B22.DE81'"," from " ]
                  }, {
                     "r" : "372",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Hemoglobin (Hb) g/dL'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "372",
               "name" : "EmCare"
            }
         }, {
            "localId" : "375",
            "name" : "Hemoglobin Test Not Available",
            "id" : "EmCare.B22.DE82",
            "display" : "Hemoglobin Test Not Available",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "375",
                  "s" : [ {
                     "value" : [ "","code ","\"Hemoglobin Test Not Available\"",": ","'EmCare.B22.DE82'"," from " ]
                  }, {
                     "r" : "374",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Hemoglobin Test Not Available'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "374",
               "name" : "EmCare"
            }
         }, {
            "localId" : "377",
            "name" : "Axillary Temperature (second measurement, degrees Celcius)",
            "id" : "EmCare.B22.DE47",
            "display" : "Axillary Temperature (second measurement, degrees Celcius)",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "377",
                  "s" : [ {
                     "value" : [ "","code ","\"Axillary Temperature (second measurement, degrees Celcius)\"",": ","'EmCare.B22.DE47'"," from " ]
                  }, {
                     "r" : "376",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Axillary Temperature (second measurement, degrees Celcius)'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "376",
               "name" : "EmCare"
            }
         }, {
            "localId" : "379",
            "name" : "Prefer to take Rectal Temperature (second measurement)",
            "id" : "EmCare.B24.G.DE40",
            "display" : "Prefer to take Rectal Temperature (second measurement)",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "379",
                  "s" : [ {
                     "value" : [ "","code ","\"Prefer to take Rectal Temperature (second measurement)\"",": ","'EmCare.B24.G.DE40'"," from " ]
                  }, {
                     "r" : "378",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Prefer to take Rectal Temperature (second measurement)'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "378",
               "name" : "EmCare"
            }
         }, {
            "localId" : "381",
            "name" : "Rectal Temperature (second measurement)",
            "id" : "EmCare.B24.G.DE41",
            "display" : "Rectal Temperature (second measurement)",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "381",
                  "s" : [ {
                     "value" : [ "","code ","\"Rectal Temperature (second measurement)\"",": ","'EmCare.B24.G.DE41'"," from " ]
                  }, {
                     "r" : "380",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Rectal Temperature (second measurement)'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "380",
               "name" : "EmCare"
            }
         }, {
            "localId" : "383",
            "name" : "Second Temperature Measurement Not Feasible",
            "id" : "EmCare.B22.DE46",
            "display" : "Second Temperature Measurement Not Feasible",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "383",
                  "s" : [ {
                     "value" : [ "","code ","\"Second Temperature Measurement Not Feasible\"",": ","'EmCare.B22.DE46'"," from " ]
                  }, {
                     "r" : "382",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Second Temperature Measurement Not Feasible'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "382",
               "name" : "EmCare"
            }
         }, {
            "localId" : "385",
            "name" : "Measured Temperature (second measurement)",
            "id" : "EmCare.B22.DE50",
            "display" : "Measured Temperature (second measurement)",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "385",
                  "s" : [ {
                     "value" : [ "","code ","\"Measured Temperature (second measurement)\"",": ","'EmCare.B22.DE50'"," from " ]
                  }, {
                     "r" : "384",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Measured Temperature (second measurement)'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "384",
               "name" : "EmCare"
            }
         }, {
            "localId" : "387",
            "name" : "Obvious cause of fever",
            "id" : "EmCare.B22.DE52A",
            "display" : "Obvious cause of fever",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "387",
                  "s" : [ {
                     "value" : [ "","code ","\"Obvious cause of fever\"",": ","'EmCare.B22.DE52A'"," from " ]
                  }, {
                     "r" : "386",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Obvious cause of fever'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "386",
               "name" : "EmCare"
            }
         }, {
            "localId" : "389",
            "name" : "Malaria test",
            "id" : "EmCare.B24.DE07",
            "display" : "Malaria test",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "389",
                  "s" : [ {
                     "value" : [ "","code ","\"Malaria test\"",": ","'EmCare.B24.DE07'"," from " ]
                  }, {
                     "r" : "388",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Malaria test'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "388",
               "name" : "EmCare"
            }
         }, {
            "localId" : "391",
            "name" : "Microscopists expected to evaluate parasite density",
            "id" : "EmCare.B.H.DE24",
            "display" : "Microscopists expected to evaluate parasite density",
            "accessLevel" : "Public",
            "annotation" : [ {
               "type" : "Annotation",
               "s" : {
                  "r" : "391",
                  "s" : [ {
                     "value" : [ "","code ","\"Microscopists expected to evaluate parasite density\"",": ","'EmCare.B.H.DE24'"," from " ]
                  }, {
                     "r" : "390",
                     "s" : [ {
                        "value" : [ "\"EmCare\"" ]
                     } ]
                  }, {
                     "value" : [ " display ","'Microscopists expected to evaluate parasite density'" ]
                  } ]
               }
            } ],
            "codeSystem" : {
               "localId" : "390",
               "name" : "EmCare"
            }
         } ]
      }
   }
}"
        }
    ]
}