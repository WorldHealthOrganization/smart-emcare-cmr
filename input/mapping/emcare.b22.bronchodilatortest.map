map 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/StructureMap/emcare.b22.bronchodilatortest' = 'emcare.b22.bronchodilatortest'
uses 'http://hl7.org/fhir/uv/sdc/StructureDefinition/sdc-questionnaireresponse' alias 'questionnaireResponse' as source
uses 'http://hl7.org/fhir/StructureDefinition/Bundle' alias 'Bundle' as target
uses 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/StructureDefinition/observation' alias 'Observation' as target
uses 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/StructureDefinition/emcareobservation' alias 'EmCare Observation' as produced
group bundletrans(source src : questionnaireResponse,target bundle : Bundle){
    src -> bundle.id = uuid() 'id';
    src -> bundle.type = 'batch' 'type';
    src where src.item.where(linkId='EmCare.B22.DE17').answer.where(value.code = 'EmCare.B22.DE18')  then {
        src.item first as item  where linkId = 'EmCare.B22.DE17' and answer.exists() then {
            src -> bundle.entry as entry  then {
                src -> entry.request as request, request.method = 'POST' , uuid() as uuid, request.url = append('/Observation/', uuid) 'b50ac4c5';
                src -> entry.resource = create('Observation') as tgt then {
                    src then emcareobservationemcareb22de18t(src,tgt) '6c75ea4c';
                } '1ee44b43';
            } 'bb43604f';
        } '98676031';
    } '9d2bab26';
    src where src.item.where(linkId='EmCare.B22.DE17').exists() and src.item.where(linkId='EmCare.B22.DE17').answer.where(value.code = 'EmCare.B22.DE18').empty()   then {
        src.item first as item  where linkId = 'EmCare.B22.DE17' and answer.exists() then {
            src -> bundle.entry as entry  then {
                src -> entry.request as request, request.method = 'POST' , uuid() as uuid, request.url = append('/Observation/', uuid) 'b50ac4c5';
                src -> entry.resource = create('Observation') as tgt then {
                    src then emcareobservationemcareb22de18f(src,tgt) '8ff92200';
                } '3e288a20';
            } '577c979e';
        } 'f6075b81';
    } 'b9b3e54c';
    src where src.item.where(linkId='EmCare.B22.DE17').answer.where(value.code = 'EmCare.B22.DE19')  then {
        src.item first as item  where linkId = 'EmCare.B22.DE17' and answer.exists() then {
            src -> bundle.entry as entry  then {
                src -> entry.request as request, request.method = 'POST' , uuid() as uuid, request.url = append('/Observation/', uuid) 'b50ac4c5';
                src -> entry.resource = create('Observation') as tgt then {
                    src then emcareobservationemcareb22de19t(src,tgt) '71f021dc';
                } '841d4c55';
            } '0817df69';
        } 'bdc9aeff';
    } '1c18bd31';
    src where src.item.where(linkId='EmCare.B22.DE17').exists() and src.item.where(linkId='EmCare.B22.DE17').answer.where(value.code = 'EmCare.B22.DE19').empty()   then {
        src.item first as item  where linkId = 'EmCare.B22.DE17' and answer.exists() then {
            src -> bundle.entry as entry  then {
                src -> entry.request as request, request.method = 'POST' , uuid() as uuid, request.url = append('/Observation/', uuid) 'b50ac4c5';
                src -> entry.resource = create('Observation') as tgt then {
                    src then emcareobservationemcareb22de19f(src,tgt) '341914f9';
                } '72da77f8';
            } 'd597c8a2';
        } 'b430709f';
    } '94c86cd1';
    src where src.item.where(linkId='EmCare.B22.DE17').answer.where(value.code = 'EmCare.B22.DE20')  then {
        src.item first as item  where linkId = 'EmCare.B22.DE17' and answer.exists() then {
            src -> bundle.entry as entry  then {
                src -> entry.request as request, request.method = 'POST' , uuid() as uuid, request.url = append('/Observation/', uuid) 'b50ac4c5';
                src -> entry.resource = create('Observation') as tgt then {
                    src then emcareobservationemcareb22de20t(src,tgt) '894b858c';
                } 'f386fa0e';
            } 'c747c2a0';
        } '50eb121c';
    } '0c92e96c';
    src where src.item.where(linkId='EmCare.B22.DE17').exists() and src.item.where(linkId='EmCare.B22.DE17').answer.where(value.code = 'EmCare.B22.DE20').empty()   then {
        src.item first as item  where linkId = 'EmCare.B22.DE17' and answer.exists() then {
            src -> bundle.entry as entry  then {
                src -> entry.request as request, request.method = 'POST' , uuid() as uuid, request.url = append('/Observation/', uuid) 'b50ac4c5';
                src -> entry.resource = create('Observation') as tgt then {
                    src then emcareobservationemcareb22de20f(src,tgt) '972dbbda';
                } '4f130254';
            } 'a4992ab6';
        } '6b360cd7';
    } '873b4cd6';
    src where src.item.where(linkId='EmCare.B22.DE17').answer.where(value.code = 'EmCare.B22.DE21')  then {
        src.item first as item  where linkId = 'EmCare.B22.DE17' and answer.exists() then {
            src -> bundle.entry as entry  then {
                src -> entry.request as request, request.method = 'POST' , uuid() as uuid, request.url = append('/Observation/', uuid) 'b50ac4c5';
                src -> entry.resource = create('Observation') as tgt then {
                    src then emcareobservationemcareb22de21t(src,tgt) 'f93f7a76';
                } '799acd97';
            } '3f5c0963';
        } 'b5d50c23';
    } 'ee14f4df';
    src where src.item.where(linkId='EmCare.B22.DE17').exists() and src.item.where(linkId='EmCare.B22.DE17').answer.where(value.code = 'EmCare.B22.DE21').empty()   then {
        src.item first as item  where linkId = 'EmCare.B22.DE17' and answer.exists() then {
            src -> bundle.entry as entry  then {
                src -> entry.request as request, request.method = 'POST' , uuid() as uuid, request.url = append('/Observation/', uuid) 'b50ac4c5';
                src -> entry.resource = create('Observation') as tgt then {
                    src then emcareobservationemcareb22de21f(src,tgt) 'daf21aae';
                } '6de03c96';
            } '0ee82f52';
        } 'a18e756b';
    } '9377e5d6';
    src where src.item.where(linkId='EmCare.B22.DE17').answer.where(value.code = 'EmCare.B22.DE22')  then {
        src.item first as item  where linkId = 'EmCare.B22.DE17' and answer.exists() then {
            src -> bundle.entry as entry  then {
                src -> entry.request as request, request.method = 'POST' , uuid() as uuid, request.url = append('/Observation/', uuid) 'b50ac4c5';
                src -> entry.resource = create('Observation') as tgt then {
                    src then emcareobservationemcareb22de22t(src,tgt) '38c07d9c';
                } '580d87f3';
            } 'e1081297';
        } 'c7001abe';
    } '6e498a5a';
    src where src.item.where(linkId='EmCare.B22.DE17').exists() and src.item.where(linkId='EmCare.B22.DE17').answer.where(value.code = 'EmCare.B22.DE22').empty()   then {
        src.item first as item  where linkId = 'EmCare.B22.DE17' and answer.exists() then {
            src -> bundle.entry as entry  then {
                src -> entry.request as request, request.method = 'POST' , uuid() as uuid, request.url = append('/Observation/', uuid) 'b50ac4c5';
                src -> entry.resource = create('Observation') as tgt then {
                    src then emcareobservationemcareb22de22f(src,tgt) '1ea4831c';
                } '96863307';
            } 'e32987ee';
        } 'd155cc61';
    } '1244ad2c';
    src.item first as item  where linkId = 'EmCare.B22.DE22' and answer.exists() then {
        src -> bundle.entry as entry  then {
            src -> entry.request as request, request.method = 'POST' , uuid() as uuid, request.url = append('/Observation/', uuid) 'b50ac4c5';
            src -> entry.resource = create('Observation') as tgt then {
                src -> tgt then emcareobservationemcareb22de22(src, tgt) 'b9010fac';
            } '109bcf94';
        } '88ceffcd';
    } '88960ea0';
    src.item first as item  where linkId = 'EmCare.B22.DE21' and answer.exists() then {
        src -> bundle.entry as entry  then {
            src -> entry.request as request, request.method = 'POST' , uuid() as uuid, request.url = append('/Observation/', uuid) 'b50ac4c5';
            src -> entry.resource = create('Observation') as tgt then {
                src -> tgt then emcareobservationemcareb22de21(src, tgt) '7c45409d';
            } 'ec6cbc70';
        } '2bc763d0';
    } '86c6f66b';
}

group emcareobservationemcareb22de18t(source src,target tgt){
        src -> tgt.identifier = create('Identifier') as CodeID,
            CodeID.system = 'http://hl7.org/fhir/namingsystem-identifier-type',
            CodeID.use =  'official',
            CodeID.value = 'uuid',
            CodeID.id = uuid()
         'id-emcareobservationemcareb22de18t';
    src.encounter as encounter -> tgt.encounter = encounter '35bc6b82';
        src.subject as subject -> tgt.subject = subject,
            tgt.meta = create('Meta') as newMeta, newMeta.profile = 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/StructureDefinition/emcareobservation',
            tgt.code = create('CodeableConcept') as concept, concept.coding = create('Coding') as coding,
                coding.system = 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/CodeSystem/emcare-custom-codes',
                coding.code = 'EmCare.B22.DE18'
         'code-emcareobservationemcareb22de18t';
    src.item as itemtimestamp where linkId  =  'timestamp' then {
        itemtimestamp.answer first as atimestamp then {
            atimestamp.value as val -> tgt.issued = val  '5af77f2c';
        } '7f22f29f';
    } 'aae7a11d';
    src.subject as subject -> tgt.subject = subject  'patient';
    src -> tgt.status = 'final', tgt.value = true 'e9d639e1';
}

group emcareobservationemcareb22de18f(source src,target tgt){
        src -> tgt.identifier = create('Identifier') as CodeID,
            CodeID.system = 'http://hl7.org/fhir/namingsystem-identifier-type',
            CodeID.use =  'official',
            CodeID.value = 'uuid',
            CodeID.id = uuid()
         'id-emcareobservationemcareb22de18f';
    src.encounter as encounter -> tgt.encounter = encounter '35bc6b82';
        src.subject as subject -> tgt.subject = subject,
            tgt.meta = create('Meta') as newMeta, newMeta.profile = 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/StructureDefinition/emcareobservation',
            tgt.code = create('CodeableConcept') as concept, concept.coding = create('Coding') as coding,
                coding.system = 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/CodeSystem/emcare-custom-codes',
                coding.code = 'EmCare.B22.DE18'
         'code-emcareobservationemcareb22de18f';
    src.item as itemtimestamp where linkId  =  'timestamp' then {
        itemtimestamp.answer first as atimestamp then {
            atimestamp.value as val -> tgt.issued = val  '5af77f2c';
        } '7f22f29f';
    } 'aae7a11d';
    src.subject as subject -> tgt.subject = subject  'patient';
    src -> tgt.status = 'cancelled',tgt.value = false 'f21d6e36';
}

group emcareobservationemcareb22de19t(source src,target tgt){
        src -> tgt.identifier = create('Identifier') as CodeID,
            CodeID.system = 'http://hl7.org/fhir/namingsystem-identifier-type',
            CodeID.use =  'official',
            CodeID.value = 'uuid',
            CodeID.id = uuid()
         'id-emcareobservationemcareb22de19t';
    src.encounter as encounter -> tgt.encounter = encounter '35bc6b82';
        src.subject as subject -> tgt.subject = subject,
            tgt.meta = create('Meta') as newMeta, newMeta.profile = 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/StructureDefinition/emcareobservation',
            tgt.code = create('CodeableConcept') as concept, concept.coding = create('Coding') as coding,
                coding.system = 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/CodeSystem/emcare-custom-codes',
                coding.code = 'EmCare.B22.DE19'
         'code-emcareobservationemcareb22de19t';
    src.item as itemtimestamp where linkId  =  'timestamp' then {
        itemtimestamp.answer first as atimestamp then {
            atimestamp.value as val -> tgt.issued = val  '5af77f2c';
        } '7f22f29f';
    } 'aae7a11d';
    src.subject as subject -> tgt.subject = subject  'patient';
    src -> tgt.status = 'final', tgt.value = true 'e9d639e1';
}

group emcareobservationemcareb22de19f(source src,target tgt){
        src -> tgt.identifier = create('Identifier') as CodeID,
            CodeID.system = 'http://hl7.org/fhir/namingsystem-identifier-type',
            CodeID.use =  'official',
            CodeID.value = 'uuid',
            CodeID.id = uuid()
         'id-emcareobservationemcareb22de19f';
    src.encounter as encounter -> tgt.encounter = encounter '35bc6b82';
        src.subject as subject -> tgt.subject = subject,
            tgt.meta = create('Meta') as newMeta, newMeta.profile = 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/StructureDefinition/emcareobservation',
            tgt.code = create('CodeableConcept') as concept, concept.coding = create('Coding') as coding,
                coding.system = 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/CodeSystem/emcare-custom-codes',
                coding.code = 'EmCare.B22.DE19'
         'code-emcareobservationemcareb22de19f';
    src.item as itemtimestamp where linkId  =  'timestamp' then {
        itemtimestamp.answer first as atimestamp then {
            atimestamp.value as val -> tgt.issued = val  '5af77f2c';
        } '7f22f29f';
    } 'aae7a11d';
    src.subject as subject -> tgt.subject = subject  'patient';
    src -> tgt.status = 'cancelled',tgt.value = false 'f21d6e36';
}

group emcareobservationemcareb22de20t(source src,target tgt){
        src -> tgt.identifier = create('Identifier') as CodeID,
            CodeID.system = 'http://hl7.org/fhir/namingsystem-identifier-type',
            CodeID.use =  'official',
            CodeID.value = 'uuid',
            CodeID.id = uuid()
         'id-emcareobservationemcareb22de20t';
    src.encounter as encounter -> tgt.encounter = encounter '35bc6b82';
        src.subject as subject -> tgt.subject = subject,
            tgt.meta = create('Meta') as newMeta, newMeta.profile = 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/StructureDefinition/emcareobservation',
            tgt.code = create('CodeableConcept') as concept, concept.coding = create('Coding') as coding,
                coding.system = 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/CodeSystem/emcare-custom-codes',
                coding.code = 'EmCare.B22.DE20'
         'code-emcareobservationemcareb22de20t';
    src.item as itemtimestamp where linkId  =  'timestamp' then {
        itemtimestamp.answer first as atimestamp then {
            atimestamp.value as val -> tgt.issued = val  '5af77f2c';
        } '7f22f29f';
    } 'aae7a11d';
    src.subject as subject -> tgt.subject = subject  'patient';
    src -> tgt.status = 'final', tgt.value = true 'e9d639e1';
}

group emcareobservationemcareb22de20f(source src,target tgt){
        src -> tgt.identifier = create('Identifier') as CodeID,
            CodeID.system = 'http://hl7.org/fhir/namingsystem-identifier-type',
            CodeID.use =  'official',
            CodeID.value = 'uuid',
            CodeID.id = uuid()
         'id-emcareobservationemcareb22de20f';
    src.encounter as encounter -> tgt.encounter = encounter '35bc6b82';
        src.subject as subject -> tgt.subject = subject,
            tgt.meta = create('Meta') as newMeta, newMeta.profile = 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/StructureDefinition/emcareobservation',
            tgt.code = create('CodeableConcept') as concept, concept.coding = create('Coding') as coding,
                coding.system = 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/CodeSystem/emcare-custom-codes',
                coding.code = 'EmCare.B22.DE20'
         'code-emcareobservationemcareb22de20f';
    src.item as itemtimestamp where linkId  =  'timestamp' then {
        itemtimestamp.answer first as atimestamp then {
            atimestamp.value as val -> tgt.issued = val  '5af77f2c';
        } '7f22f29f';
    } 'aae7a11d';
    src.subject as subject -> tgt.subject = subject  'patient';
    src -> tgt.status = 'cancelled',tgt.value = false 'f21d6e36';
}

group emcareobservationemcareb22de21t(source src,target tgt){
        src -> tgt.identifier = create('Identifier') as CodeID,
            CodeID.system = 'http://hl7.org/fhir/namingsystem-identifier-type',
            CodeID.use =  'official',
            CodeID.value = 'uuid',
            CodeID.id = uuid()
         'id-emcareobservationemcareb22de21t';
    src.encounter as encounter -> tgt.encounter = encounter '35bc6b82';
        src.subject as subject -> tgt.subject = subject,
            tgt.meta = create('Meta') as newMeta, newMeta.profile = 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/StructureDefinition/emcareobservation',
            tgt.code = create('CodeableConcept') as concept, concept.coding = create('Coding') as coding,
                coding.system = 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/CodeSystem/emcare-custom-codes',
                coding.code = 'EmCare.B22.DE21'
         'code-emcareobservationemcareb22de21t';
    src.item as itemtimestamp where linkId  =  'timestamp' then {
        itemtimestamp.answer first as atimestamp then {
            atimestamp.value as val -> tgt.issued = val  '5af77f2c';
        } '7f22f29f';
    } 'aae7a11d';
    src.subject as subject -> tgt.subject = subject  'patient';
    src -> tgt.status = 'final', tgt.value = true 'e9d639e1';
}

group emcareobservationemcareb22de21f(source src,target tgt){
        src -> tgt.identifier = create('Identifier') as CodeID,
            CodeID.system = 'http://hl7.org/fhir/namingsystem-identifier-type',
            CodeID.use =  'official',
            CodeID.value = 'uuid',
            CodeID.id = uuid()
         'id-emcareobservationemcareb22de21f';
    src.encounter as encounter -> tgt.encounter = encounter '35bc6b82';
        src.subject as subject -> tgt.subject = subject,
            tgt.meta = create('Meta') as newMeta, newMeta.profile = 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/StructureDefinition/emcareobservation',
            tgt.code = create('CodeableConcept') as concept, concept.coding = create('Coding') as coding,
                coding.system = 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/CodeSystem/emcare-custom-codes',
                coding.code = 'EmCare.B22.DE21'
         'code-emcareobservationemcareb22de21f';
    src.item as itemtimestamp where linkId  =  'timestamp' then {
        itemtimestamp.answer first as atimestamp then {
            atimestamp.value as val -> tgt.issued = val  '5af77f2c';
        } '7f22f29f';
    } 'aae7a11d';
    src.subject as subject -> tgt.subject = subject  'patient';
    src -> tgt.status = 'cancelled',tgt.value = false 'f21d6e36';
}

group emcareobservationemcareb22de22t(source src,target tgt){
        src -> tgt.identifier = create('Identifier') as CodeID,
            CodeID.system = 'http://hl7.org/fhir/namingsystem-identifier-type',
            CodeID.use =  'official',
            CodeID.value = 'uuid',
            CodeID.id = uuid()
         'id-emcareobservationemcareb22de22t';
    src.encounter as encounter -> tgt.encounter = encounter '35bc6b82';
        src.subject as subject -> tgt.subject = subject,
            tgt.meta = create('Meta') as newMeta, newMeta.profile = 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/StructureDefinition/emcareobservation',
            tgt.code = create('CodeableConcept') as concept, concept.coding = create('Coding') as coding,
                coding.system = 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/CodeSystem/emcare-custom-codes',
                coding.code = 'EmCare.B22.DE22'
         'code-emcareobservationemcareb22de22t';
    src.item as itemtimestamp where linkId  =  'timestamp' then {
        itemtimestamp.answer first as atimestamp then {
            atimestamp.value as val -> tgt.issued = val  '5af77f2c';
        } '7f22f29f';
    } 'aae7a11d';
    src.subject as subject -> tgt.subject = subject  'patient';
    src -> tgt.status = 'final', tgt.value = true 'e9d639e1';
}

group emcareobservationemcareb22de22f(source src,target tgt){
        src -> tgt.identifier = create('Identifier') as CodeID,
            CodeID.system = 'http://hl7.org/fhir/namingsystem-identifier-type',
            CodeID.use =  'official',
            CodeID.value = 'uuid',
            CodeID.id = uuid()
         'id-emcareobservationemcareb22de22f';
    src.encounter as encounter -> tgt.encounter = encounter '35bc6b82';
        src.subject as subject -> tgt.subject = subject,
            tgt.meta = create('Meta') as newMeta, newMeta.profile = 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/StructureDefinition/emcareobservation',
            tgt.code = create('CodeableConcept') as concept, concept.coding = create('Coding') as coding,
                coding.system = 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/CodeSystem/emcare-custom-codes',
                coding.code = 'EmCare.B22.DE22'
         'code-emcareobservationemcareb22de22f';
    src.item as itemtimestamp where linkId  =  'timestamp' then {
        itemtimestamp.answer first as atimestamp then {
            atimestamp.value as val -> tgt.issued = val  '5af77f2c';
        } '7f22f29f';
    } 'aae7a11d';
    src.subject as subject -> tgt.subject = subject  'patient';
    src -> tgt.status = 'cancelled',tgt.value = false 'f21d6e36';
}

group emcareobservationemcareb22de22(source src,target tgt){
        src -> tgt.identifier = create('Identifier') as CodeID,
            CodeID.system = 'http://hl7.org/fhir/namingsystem-identifier-type',
            CodeID.use =  'official',
            CodeID.value = 'uuid',
            CodeID.id = uuid()
         'id-emcareb22de22';
    src.encounter as encounter -> tgt.encounter = encounter '35bc6b82';
        src.subject as subject -> tgt.subject = subject,
            tgt.meta = create('Meta') as newMeta, newMeta.profile = 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/StructureDefinition/emcareobservation',
            tgt.code = create('CodeableConcept') as concept, concept.coding = create('Coding') as coding,
                coding.system = 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/CodeSystem/emcare-custom-codes',
                coding.code = 'EmCare.B22.DE22'
         'code-emcareb22de22';
    src.item as itemtimestamp where linkId  =  'timestamp' then {
        itemtimestamp.answer first as atimestamp then {
            atimestamp.value as val -> tgt.issued = val  '5af77f2c';
        } '7f22f29f';
    } 'aae7a11d';
    src.subject as subject -> tgt.subject = subject  'patient';
    src.item first as item  where linkId = 'EmCare.B22.DE22' and answer.exists() then {
        item.answer first as a then {
            a.value as val then {
                val where val.code = 'EmCare.B22.DE22' -> tgt.status = 'final',tgt.value = true  '54b81a1d';
            } '8adb717d';
        } '8a1e7f40';
    } '057952cd';
}

group emcareobservationemcareb22de21(source src,target tgt){
        src -> tgt.identifier = create('Identifier') as CodeID,
            CodeID.system = 'http://hl7.org/fhir/namingsystem-identifier-type',
            CodeID.use =  'official',
            CodeID.value = 'uuid',
            CodeID.id = uuid()
         'id-emcareb22de21';
    src.encounter as encounter -> tgt.encounter = encounter '35bc6b82';
        src.subject as subject -> tgt.subject = subject,
            tgt.meta = create('Meta') as newMeta, newMeta.profile = 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/StructureDefinition/emcareobservation',
            tgt.code = create('CodeableConcept') as concept, concept.coding = create('Coding') as coding,
                coding.system = 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/CodeSystem/emcare-custom-codes',
                coding.code = 'EmCare.B22.DE21'
         'code-emcareb22de21';
    src.item as itemtimestamp where linkId  =  'timestamp' then {
        itemtimestamp.answer first as atimestamp then {
            atimestamp.value as val -> tgt.issued = val  '5af77f2c';
        } '7f22f29f';
    } 'aae7a11d';
    src.subject as subject -> tgt.subject = subject  'patient';
    src.item first as item  where linkId = 'EmCare.B22.DE21' and answer.exists() then {
        item.answer first as a then {
            a  where a.value = true -> tgt.status = 'final', tgt.value = true 'final-emcareb22de21';
            a  where a.value = false -> tgt.status = 'cancelled', tgt.value = false 'notfound-emcareb22de21';
        } 'bdab9370';
    } 'be0b9dbe';
}

